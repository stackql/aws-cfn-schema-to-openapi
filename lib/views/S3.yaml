openapi: 3.0.0
info:
  title: S3
  description: Additional stackql views for S3
  version: 1.0.0
paths: {}
components:
  schemas: {}
  x-stackQL-resources:
    bucket:
      name: bucket
      id: aws.s3.bucket
      x-cfn-schema-name: Bucket
      x-type: get
      x-identifiers:
        - BucketName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccelerateConfiguration') as accelerate_configuration,
              JSON_EXTRACT(Properties, '$.AccessControl') as access_control,
              JSON_EXTRACT(Properties, '$.AnalyticsConfigurations') as analytics_configurations,
              JSON_EXTRACT(Properties, '$.BucketEncryption') as bucket_encryption,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.CorsConfiguration') as cors_configuration,
              JSON_EXTRACT(Properties, '$.IntelligentTieringConfigurations') as intelligent_tiering_configurations,
              JSON_EXTRACT(Properties, '$.InventoryConfigurations') as inventory_configurations,
              JSON_EXTRACT(Properties, '$.LifecycleConfiguration') as lifecycle_configuration,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration') as logging_configuration,
              JSON_EXTRACT(Properties, '$.MetricsConfigurations') as metrics_configurations,
              JSON_EXTRACT(Properties, '$.NotificationConfiguration') as notification_configuration,
              JSON_EXTRACT(Properties, '$.ObjectLockConfiguration') as object_lock_configuration,
              JSON_EXTRACT(Properties, '$.ObjectLockEnabled') as object_lock_enabled,
              JSON_EXTRACT(Properties, '$.OwnershipControls') as ownership_controls,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration') as public_access_block_configuration,
              JSON_EXTRACT(Properties, '$.ReplicationConfiguration') as replication_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VersioningConfiguration') as versioning_configuration,
              JSON_EXTRACT(Properties, '$.WebsiteConfiguration') as website_configuration,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DualStackDomainName') as dual_stack_domain_name,
              JSON_EXTRACT(Properties, '$.RegionalDomainName') as regional_domain_name,
              SPLIT_PART(SPLIT_PART(JSON_EXTRACT(Properties, '$.RegionalDomainName'), '.s3.', 2), '.', 1) as bucket_location,
              JSON_EXTRACT(Properties, '$.WebsiteURL') as website_url
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3::Bucket'
              AND data__Identifier = '<BucketName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AccelerateConfiguration') as accelerate_configuration,
                json_extract_path_text(Properties, 'AccessControl') as access_control,
                json_extract_path_text(Properties, 'AnalyticsConfigurations') as analytics_configurations,
                json_extract_path_text(Properties, 'BucketEncryption') as bucket_encryption,
                json_extract_path_text(Properties, 'BucketName') as bucket_name,
                json_extract_path_text(Properties, 'CorsConfiguration') as cors_configuration,
                json_extract_path_text(Properties, 'IntelligentTieringConfigurations') as intelligent_tiering_configurations,
                json_extract_path_text(Properties, 'InventoryConfigurations') as inventory_configurations,
                json_extract_path_text(Properties, 'LifecycleConfiguration') as lifecycle_configuration,
                json_extract_path_text(Properties, 'LoggingConfiguration') as logging_configuration,
                json_extract_path_text(Properties, 'MetricsConfigurations') as metrics_configurations,
                json_extract_path_text(Properties, 'NotificationConfiguration') as notification_configuration,
                json_extract_path_text(Properties, 'ObjectLockConfiguration') as object_lock_configuration,
                json_extract_path_text(Properties, 'ObjectLockEnabled') as object_lock_enabled,
                json_extract_path_text(Properties, 'OwnershipControls') as ownership_controls,
                json_extract_path_text(Properties, 'PublicAccessBlockConfiguration') as public_access_block_configuration,
                json_extract_path_text(Properties, 'ReplicationConfiguration') as replication_configuration,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'VersioningConfiguration') as versioning_configuration,
                json_extract_path_text(Properties, 'WebsiteConfiguration') as website_configuration,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'DualStackDomainName') as dual_stack_domain_name,
                json_extract_path_text(Properties, 'RegionalDomainName') as regional_domain_name,
                SPLIT_PART(SPLIT_PART(json_extract_path_text(Properties, 'RegionalDomainName'), '.s3.', 2), '.', 1) as bucket_location,
                json_extract_path_text(Properties, 'WebsiteURL') as website_url
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3::Bucket'
                AND data__Identifier = '<BucketName>'
                AND region = 'us-east-1'
