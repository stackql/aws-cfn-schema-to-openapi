components:
  schemas:
    AccessKey:
      description: >-
        <p>Contains information about an Amazon Web Services access key.</p> <p>
        This data type is used as a response element in the
        <a>CreateAccessKey</a> and <a>ListAccessKeys</a> operations. </p> <note>
        <p>The <code>SecretAccessKey</code> value is returned only in response
        to <a>CreateAccessKey</a>. You can get a secret access key only when you
        first create an access key; you cannot recover the secret access key
        later. If you lose a secret access key, you must create a new access
        key.</p> </note>
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: The ID for this access key.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the access key was created.
        SecretAccessKey:
          allOf:
            - $ref: '#/components/schemas/accessKeySecretType'
            - description: The secret key used to sign requests.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the access key. <code>Active</code> means that the
                key is valid for API calls, while <code>Inactive</code> means it
                is not. 
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user that the access key is associated with.
      required:
        - UserName
        - AccessKeyId
        - Status
        - SecretAccessKey
      type: object
    AccessKeyLastUsed:
      description: >-
        <p>Contains information about the last time an Amazon Web Services
        access key was used since IAM began tracking this information on April
        22, 2015.</p> <p>This data type is used as a response element in the
        <a>GetAccessKeyLastUsed</a> operation.</p>
      properties:
        LastUsedDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                <p>The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the access key was most recently used. This
                field is null in the following situations:</p> <ul> <li> <p>The
                user does not have an access key.</p> </li> <li> <p>An access
                key exists but has not been used since IAM began tracking this
                information.</p> </li> <li> <p>There is no sign-in data
                associated with the user.</p> </li> </ul>
        Region:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: >-
                <p>The Amazon Web Services Region where this access key was most
                recently used. The value for this field is "N/A" in the
                following situations:</p> <ul> <li> <p>The user does not have an
                access key.</p> </li> <li> <p>An access key exists but has not
                been used since IAM began tracking this information.</p> </li>
                <li> <p>There is no sign-in data associated with the user.</p>
                </li> </ul> <p>For more information about Amazon Web Services
                Regions, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/rande.html">Regions
                and endpoints</a> in the Amazon Web Services General
                Reference.</p>
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: >-
                <p>The name of the Amazon Web Services service with which this
                access key was most recently used. The value of this field is
                "N/A" in the following situations:</p> <ul> <li> <p>The user
                does not have an access key.</p> </li> <li> <p>An access key
                exists but has not been used since IAM started tracking this
                information.</p> </li> <li> <p>There is no sign-in data
                associated with the user.</p> </li> </ul>
      required:
        - LastUsedDate
        - ServiceName
        - Region
      type: object
    AccessKeyMetadata:
      description: >-
        <p>Contains information about an Amazon Web Services access key, without
        its secret key.</p> <p>This data type is used as a response element in
        the <a>ListAccessKeys</a> operation.</p>
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: The ID for this access key.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the access key was created.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the access key. <code>Active</code> means that the
                key is valid for API calls; <code>Inactive</code> means it is
                not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user that the key is associated with.
      type: object
    ArnListType:
      items:
        allOf:
          - $ref: '#/components/schemas/arnType'
          - xml:
              name: member
      type: array
    AttachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the group to attach the
                policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: AttachGroupPolicyRequest
      type: object
    AttachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the role to attach the
                policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyArn
      title: AttachRolePolicyRequest
      type: object
    AttachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM user to attach
                the policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyArn
      title: AttachUserPolicyRequest
      type: object
    AttachedPermissionsBoundary:
      description: >-
        <p>Contains information about an attached permissions boundary.</p>
        <p>An attached permissions boundary is a managed policy that has been
        attached to a user or role to set the permissions boundary.</p> <p>For
        more information about permissions boundaries, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
        boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      properties:
        PermissionsBoundaryArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The ARN of the policy used to set the permissions boundary for the user or role.'
        PermissionsBoundaryType:
          allOf:
            - $ref: '#/components/schemas/PermissionsBoundaryAttachmentType'
            - description: ' The permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of <code>Policy</code>.'
      type: object
    AttachedPolicy:
      description: >-
        <p>Contains information about an attached policy.</p> <p>An attached
        policy is a managed policy that has been attached to a user, group, or
        role. This data type is used as a response element in the
        <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>,
        <a>ListAttachedUserPolicies</a>, and
        <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more
        information about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        PolicyArn:
          $ref: '#/components/schemas/arnType'
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name of the attached policy.
      type: object
    ConcurrentModificationException: {}
    ContextKeyNameType:
      maxLength: 256
      minLength: 5
      type: string
    ContextKeyNamesResultListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ContextKeyNameType'
          - xml:
              name: member
      type: array
    CreateAccessKeyRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the IAM user that the new key will belong to.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: CreateAccessKeyRequest
      type: object
    CreateAccessKeyResponse:
      description: 'Contains the response to a successful <a>CreateAccessKey</a> request. '
      example:
        AccessKey:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          CreateDate: '2015-03-09T18:39:23.411Z'
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          Status: Active
          UserName: Bob
      properties:
        AccessKey:
          allOf:
            - $ref: '#/components/schemas/AccessKey'
            - description: A structure with details about the access key.
      required:
        - AccessKey
      type: object
    CreateLoginProfileRequest:
      properties:
        Password:
          allOf:
            - $ref: '#/components/schemas/passwordType'
            - description: >-
                <p>The new password for the user.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> that is
                used to validate this parameter is a string of characters. That
                string can include almost any printable ASCII character from the
                space (<code>\u0020</code>) through the end of the ASCII
                character range (<code>\u00FF</code>). You can also include the
                tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
                carriage return (<code>\u000D</code>) characters. Any of these
                characters are valid in a password. However, many tools, such as
                the Amazon Web Services Management Console, might restrict the
                ability to type certain characters because they have special
                meaning within that tool.</p>
        PasswordResetRequired:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the user is required to set a new password on
                next sign-in.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user to create a password for. The user
                must already exist.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - Password
      title: CreateLoginProfileRequest
      type: object
    CreateLoginProfileResponse:
      description: >-
        Contains the response to a successful <a>CreateLoginProfile</a>
        request. 
      example:
        LoginProfile:
          CreateDate: '2015-03-10T20:55:40.274Z'
          PasswordResetRequired: true
          UserName: Bob
      properties:
        LoginProfile:
          allOf:
            - $ref: '#/components/schemas/LoginProfile'
            - description: A structure containing the user name and password create date.
      required:
        - LoginProfile
      type: object
    CreatePolicyRequest:
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: >-
                <p>A friendly description of the policy.</p> <p>Typically used
                to store information about the permissions defined in the
                policy. For example, "Grants access to production DynamoDB
                tables."</p> <p>The policy description is immutable. After a
                value is assigned, it cannot be changed.</p>
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path for the policy.</p> <p>For more information about
                paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This
                parameter is optional. If it is not included, it defaults to a
                slash (/).</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p> <note> <p>You
                cannot use an asterisk (*) in the path name.</p> </note>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The JSON policy document that you want to use as the content
                for the new policy.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The maximum length of the
                policy document that you can pass in this operation, including
                whitespace, is listed below. To view the maximum character
                counts of a managed policy with no whitespaces, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
                and STS character quotas</a>.</p> <p>To learn more about JSON
                policy grammar, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar
                of the IAM JSON policy language</a> in the <i>IAM User
                Guide</i>. </p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The friendly name of the policy.</p> <p>IAM user, group,
                role, and policy names must be unique within the account. Names
                are not distinguished by case. For example, you cannot create
                resources named both "MyResource" and "myresource".</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                <p>A list of tags that you want to attach to the new IAM
                customer managed policy. Each tag consists of a key name and an
                associated value. For more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If
                any one of the tags is invalid or if you exceed the allowed
                maximum number of tags, then the entire request fails and the
                resource is not created.</p> </note>
      required:
        - PolicyName
        - PolicyDocument
      title: CreatePolicyRequest
      type: object
    CreatePolicyResponse:
      description: 'Contains the response to a successful <a>CreatePolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the new policy.
      type: object
    CreatePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy to which you
                want to add a new version.</p> <p>For more information about
                ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The JSON policy document that you want to use as the content
                for this new version of the policy.</p> <p>You must provide
                policies in JSON format in IAM. However, for CloudFormation
                templates formatted in YAML, you can provide the policy in JSON
                or YAML format. CloudFormation always converts a YAML policy to
                JSON format before submitting it to IAM.</p> <p>The maximum
                length of the policy document that you can pass in this
                operation, including whitespace, is listed below. To view the
                maximum character counts of a managed policy with no
                whitespaces, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
                and STS character quotas</a>.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        SetAsDefault:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether to set this version as the policy's default
                version.</p> <p>When this parameter is <code>true</code>, the
                new policy version becomes the operative version. That is, it
                becomes the version that is in effect for the IAM users, groups,
                and roles that the policy is attached to.</p> <p>For more
                information about managed policy versions, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
                for managed policies</a> in the <i>IAM User Guide</i>.</p>
      required:
        - PolicyArn
        - PolicyDocument
      title: CreatePolicyVersionRequest
      type: object
    CreatePolicyVersionResponse:
      description: >-
        Contains the response to a successful <a>CreatePolicyVersion</a>
        request. 
      properties:
        PolicyVersion:
          allOf:
            - $ref: '#/components/schemas/PolicyVersion'
            - description: A structure containing details about the new policy version.
      type: object
    CreateServiceLinkedRoleRequest:
      properties:
        AWSServiceName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The service principal for the Amazon Web Services service to
                which this role is attached. You use a string similar to a URL
                but without the http:// in front. For example:
                <code>elasticbeanstalk.amazonaws.com</code>. </p> <p>Service
                principals are unique and case-sensitive. To find the exact
                service principal for your service-linked role, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html">Amazon
                Web Services services that work with IAM</a> in the <i>IAM User
                Guide</i>. Look for the services that have <b>Yes </b>in the
                <b>Service-Linked Role</b> column. Choose the <b>Yes</b> link to
                view the service-linked role documentation for that service.</p>
        CustomSuffix:
          allOf:
            - $ref: '#/components/schemas/customSuffixType'
            - description: >-
                <p/> <p>A string that you provide, which is combined with the
                service-provided prefix to form the complete role name. If you
                make multiple requests for the same service, then you must
                supply a different <code>CustomSuffix</code> for each request.
                Otherwise the request fails with a duplicate role name error.
                For example, you could add <code>-1</code> or
                <code>-debug</code> to the suffix.</p> <p>Some services do not
                support the <code>CustomSuffix</code> parameter. If you provide
                an optional suffix and the operation fails, try the operation
                again without the suffix.</p>
        Description:
          allOf:
            - $ref: '#/components/schemas/roleDescriptionType'
            - description: The description of the role.
      required:
        - AWSServiceName
      title: CreateServiceLinkedRoleRequest
      type: object
    CreateServiceLinkedRoleResponse:
      properties:
        Role:
          allOf:
            - $ref: '#/components/schemas/Role'
            - description: >-
                A <a>Role</a> object that contains details about the newly
                created role.
      type: object
    CreateServiceSpecificCredentialRequest:
      properties:
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: >-
                The name of the Amazon Web Services service that is to be
                associated with the credentials. The service you specify here is
                the only service that can be accessed using these credentials.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user that is to be associated with the
                credentials. The new service-specific credentials have the same
                permissions as the associated user except that they can be used
                only to access the specified service.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - ServiceName
      title: CreateServiceSpecificCredentialRequest
      type: object
    CreateServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredential'
            - description: >-
                <p>A structure that contains information about the newly created
                service-specific credential.</p> <important> <p>This is the only
                time that the password for this credential set is available. It
                cannot be recovered later. Instead, you must reset the password
                with <a>ResetServiceSpecificCredential</a>.</p> </important>
      type: object
    DeactivateMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>The serial number that uniquely identifies the MFA device.
                For virtual MFA devices, the serial number is the device
                ARN.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: =,.@:/-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user whose MFA device you want to
                deactivate.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SerialNumber
      title: DeactivateMFADeviceRequest
      type: object
    DeleteAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: >-
                <p>The access key ID for the access key ID and secret access key
                you want to delete.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user whose access key pair you want to
                delete.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - AccessKeyId
      title: DeleteAccessKeyRequest
      type: object
    DeleteConflictException: {}
    DeleteGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the group that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name identifying the policy document to delete.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
      title: DeleteGroupPolicyRequest
      type: object
    DeleteLoginProfileRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the user whose password you want to delete.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: DeleteLoginProfileRequest
      type: object
    DeletePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                delete.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicyArn
      title: DeletePolicyRequest
      type: object
    DeletePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy from which
                you want to delete a version.</p> <p>For more information about
                ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                <p>The policy version to delete.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters that consists of the
                lowercase letter 'v' followed by one or two digits, and
                optionally followed by a period '.' and a string of letters and
                digits.</p> <p>For more information about managed policy
                versions, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
                for managed policies</a> in the <i>IAM User Guide</i>.</p>
      required:
        - PolicyArn
        - VersionId
      title: DeletePolicyVersionRequest
      type: object
    DeleteRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the inline policy to delete from the specified
                IAM role.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the role that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
      title: DeleteRolePolicyRequest
      type: object
    DeleteSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: >-
                <p>The unique identifier for the SSH public key.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the SSH public
                key.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SSHPublicKeyId
      title: DeleteSSHPublicKeyRequest
      type: object
    DeleteServiceLinkedRoleRequest:
      properties:
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The name of the service-linked role to be deleted.
      required:
        - RoleName
      title: DeleteServiceLinkedRoleRequest
      type: object
    DeleteServiceLinkedRoleResponse:
      properties:
        DeletionTaskId:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskIdType'
            - description: >-
                The deletion task identifier that you can use to check the
                status of the deletion. This identifier is returned in the
                format
                <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
        - DeletionTaskId
      type: object
    DeleteServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: >-
                <p>The unique identifier of the service-specific credential. You
                can get this value by calling
                <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the service-specific
                credential. If this value is not specified, then the operation
                assumes the user whose credentials are used to call the
                operation.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - ServiceSpecificCredentialId
      title: DeleteServiceSpecificCredentialRequest
      type: object
    DeleteSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: >-
                <p>The ID of the signing certificate to delete.</p> <p>The
                format of this parameter, as described by its <a
                href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a
                string of characters that can be upper- or lower-cased letters
                or digits.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user the signing certificate belongs to.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - CertificateId
      title: DeleteSigningCertificateRequest
      type: object
    DeleteUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name identifying the policy document to delete.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the user that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
      title: DeleteUserPolicyRequest
      type: object
    DeletionTaskFailureReasonType:
      description: >-
        <p>The reason that the service-linked role deletion failed.</p> <p>This
        data type is used as a response element in the
        <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
      properties:
        Reason:
          allOf:
            - $ref: '#/components/schemas/ReasonType'
            - description: >-
                A short description of the reason that the service-linked role
                deletion failed.
        RoleUsageList:
          allOf:
            - $ref: '#/components/schemas/RoleUsageListType'
            - description: >-
                A list of objects that contains details about the service-linked
                role deletion failure, if that information is returned by the
                service. If the service-linked role has active sessions or if
                any resources that were used by the role have not been deleted
                from the linked service, the role can't be deleted. This
                parameter includes a list of the resources that are associated
                with the role and the Region in which the resources are being
                used.
      type: object
    DeletionTaskIdType:
      maxLength: 1000
      minLength: 1
      type: string
    DeletionTaskStatusType:
      enum:
        - SUCCEEDED
        - IN_PROGRESS
        - FAILED
        - NOT_STARTED
      type: string
    DetachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM group to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: DetachGroupPolicyRequest
      type: object
    DetachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM role to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyArn
      title: DetachRolePolicyRequest
      type: object
    DetachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM user to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyArn
      title: DetachUserPolicyRequest
      type: object
    DuplicateCertificateException: {}
    DuplicateSSHPublicKeyException: {}
    EnableMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>An authentication code emitted by the device. </p> <p>The
                format for this parameter is a string of six digits.</p>
                <important> <p>Submit your request immediately after generating
                the authentication codes. If you generate the codes and then
                wait too long to submit the request, the MFA device successfully
                associates with the user but the MFA device becomes out of sync.
                This happens because time-based one-time passwords (TOTP) expire
                after a short period of time. If this happens, you can <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
                the device</a>.</p> </important>
        AuthenticationCode2:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>A subsequent authentication code emitted by the device.</p>
                <p>The format for this parameter is a string of six digits.</p>
                <important> <p>Submit your request immediately after generating
                the authentication codes. If you generate the codes and then
                wait too long to submit the request, the MFA device successfully
                associates with the user but the MFA device becomes out of sync.
                This happens because time-based one-time passwords (TOTP) expire
                after a short period of time. If this happens, you can <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync
                the device</a>.</p> </important>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>The serial number that uniquely identifies the MFA device.
                For virtual MFA devices, the serial number is the device
                ARN.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: =,.@:/-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the IAM user for whom you want to enable the MFA
                device.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SerialNumber
        - AuthenticationCode1
        - AuthenticationCode2
      title: EnableMFADeviceRequest
      type: object
    EntityAlreadyExistsException: {}
    EntityDetails:
      description: >-
        <p>An object that contains details about when the IAM entities (users or
        roles) were last used in an attempt to access the specified Amazon Web
        Services service.</p> <p>This data type is a response element in the
        <a>GetServiceLastAccessedDetailsWithEntities</a> operation.</p>
      properties:
        EntityInfo:
          allOf:
            - $ref: '#/components/schemas/EntityInfo'
            - description: "The\_<code>EntityInfo</code> object that contains details about the entity (user or role)."
        LastAuthenticated:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the authenticated entity last attempted to access Amazon Web Services. Amazon Web Services does not report unauthenticated requests.</p> <p>This field is null if no IAM entities attempted to access the service within the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\">reporting period</a>.</p>"
      required:
        - EntityInfo
      type: object
    EntityInfo:
      description: >-
        <p>Contains details about the specified entity (user or role).</p>
        <p>This data type is an element of the <a>EntityDetails</a> object.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        Id:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The identifier of the entity (user or role).
        Name:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the entity (user or role).
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                The path to the entity (user or role). For more information
                about paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>. 
        Type:
          allOf:
            - $ref: '#/components/schemas/policyOwnerEntityType'
            - description: The type of entity (user or role).
      required:
        - Arn
        - Name
        - Type
        - Id
      type: object
    EntityTemporarilyUnmodifiableException: {}
    EntityType:
      enum:
        - User
        - Role
        - Group
        - LocalManagedPolicy
        - AWSManagedPolicy
      type: string
    ErrorDetails:
      description: >-
        <p>Contains information about the reason that the operation failed.</p>
        <p>This data type is used as a response element in the
        <a>GetOrganizationsAccessReport</a>,
        <a>GetServiceLastAccessedDetails</a>, and
        <a>GetServiceLastAccessedDetailsWithEntities</a> operations.</p>
      properties:
        Code:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: The error code associated with the operation failure.
        Message:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: Detailed information about the reason that the operation failed.
      required:
        - Message
        - Code
      type: object
    GetAccessKeyLastUsedRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: >-
                <p>The identifier of an access key.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters that can consist of any
                upper or lowercased letter or digit.</p>
      required:
        - AccessKeyId
      title: GetAccessKeyLastUsedRequest
      type: object
    GetAccessKeyLastUsedResponse:
      description: >-
        Contains the response to a successful <a>GetAccessKeyLastUsed</a>
        request. It is also returned as a member of the <a>AccessKeyMetaData</a>
        structure returned by the <a>ListAccessKeys</a> action.
      properties:
        AccessKeyLastUsed:
          allOf:
            - $ref: '#/components/schemas/AccessKeyLastUsed'
            - description: >-
                Contains information about the last time the access key was
                used.
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: <p>The name of the IAM user that owns this access key.</p> <p/>
      type: object
    GetAccountAuthorizationDetailsRequest:
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/entityListType'
            - description: >-
                <p>A list of entity types used to filter the results. Only the
                entities that match the types you specify are included in the
                output. Use the value <code>LocalManagedPolicy</code> to include
                customer managed policies.</p> <p>The format for this parameter
                is a comma-separated (if more than one) list of strings. Each
                string value in the list must be one of the valid values listed
                below.</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
      title: GetAccountAuthorizationDetailsRequest
      type: object
    GetAccountAuthorizationDetailsResponse:
      description: >-
        Contains the response to a successful
        <a>GetAccountAuthorizationDetails</a> request. 
      properties:
        GroupDetailList:
          allOf:
            - $ref: '#/components/schemas/groupDetailListType'
            - description: A list containing information about IAM groups.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Policies:
          allOf:
            - $ref: '#/components/schemas/ManagedPolicyDetailListType'
            - description: A list containing information about managed policies.
        RoleDetailList:
          allOf:
            - $ref: '#/components/schemas/roleDetailListType'
            - description: A list containing information about IAM roles.
        UserDetailList:
          allOf:
            - $ref: '#/components/schemas/userDetailListType'
            - description: A list containing information about IAM users.
      type: object
    GetAccountPasswordPolicyResponse:
      description: >-
        Contains the response to a successful <a>GetAccountPasswordPolicy</a>
        request. 
      example:
        PasswordPolicy:
          AllowUsersToChangePassword: false
          ExpirePasswords: false
          HardExpiry: false
          MaxPasswordAge: 90
          MinimumPasswordLength: 8
          PasswordReusePrevention: 12
          RequireLowercaseCharacters: false
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercaseCharacters: false
      properties:
        PasswordPolicy:
          allOf:
            - $ref: '#/components/schemas/PasswordPolicy'
            - description: >-
                A structure that contains details about the account's password
                policy.
      required:
        - PasswordPolicy
      type: object
    GetAccountSummaryResponse:
      description: 'Contains the response to a successful <a>GetAccountSummary</a> request. '
      example:
        SummaryMap:
          AccessKeysPerUserQuota: 2
          AccountAccessKeysPresent: 1
          AccountMFAEnabled: 0
          AccountSigningCertificatesPresent: 0
          AttachedPoliciesPerGroupQuota: 10
          AttachedPoliciesPerRoleQuota: 10
          AttachedPoliciesPerUserQuota: 10
          GlobalEndpointTokenVersion: 2
          GroupPolicySizeQuota: 5120
          Groups: 15
          GroupsPerUserQuota: 10
          GroupsQuota: 100
          MFADevices: 6
          MFADevicesInUse: 3
          Policies: 8
          PoliciesQuota: 1000
          PolicySizeQuota: 5120
          PolicyVersionsInUse: 22
          PolicyVersionsInUseQuota: 10000
          ServerCertificates: 1
          ServerCertificatesQuota: 20
          SigningCertificatesPerUserQuota: 2
          UserPolicySizeQuota: 2048
          Users: 27
          UsersQuota: 5000
          VersionsPerPolicyQuota: 5
      properties:
        SummaryMap:
          allOf:
            - $ref: '#/components/schemas/summaryMapType'
            - description: >-
                A set of key–value pairs containing information about IAM entity
                usage and IAM quotas.
      type: object
    GetContextKeysForCustomPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
            - $ref: '#/components/schemas/SimulationPolicyListType'
            - description: >-
                <p>A list of policies for which you want the list of context
                keys referenced in those policies. Each document is specified as
                a string containing the complete, valid JSON text of an IAM
                policy.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
      required:
        - PolicyInputList
      title: GetContextKeysForCustomPolicyRequest
      type: object
    GetContextKeysForPolicyResponse:
      description: >-
        Contains the response to a successful
        <a>GetContextKeysForPrincipalPolicy</a> or
        <a>GetContextKeysForCustomPolicy</a> request. 
      properties:
        ContextKeyNames:
          allOf:
            - $ref: '#/components/schemas/ContextKeyNamesResultListType'
            - description: >-
                The list of context keys that are referenced in the input
                policies.
      type: object
    GetContextKeysForPrincipalPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
            - $ref: '#/components/schemas/SimulationPolicyListType'
            - description: >-
                <p>An optional list of additional policies for which you want
                the list of context keys that are referenced.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicySourceArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of a user, group, or role whose policies contain the
                context keys that you want listed. If you specify a user, the
                list includes context keys that are found in all policies that
                are attached to the user. The list also includes all groups that
                the user is a member of. If you pick a group or a role, then it
                includes only those context keys that are found in policies
                attached to that entity. Note that all parameters are shown in
                unencoded form here for clarity, but must be URL encoded to be
                included as a part of a real HTML request.</p> <p>For more
                information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicySourceArn
      title: GetContextKeysForPrincipalPolicyRequest
      type: object
    GetGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group the policy is associated with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
      title: GetGroupPolicyRequest
      type: object
    GetGroupPolicyResponse:
      description: 'Contains the response to a successful <a>GetGroupPolicy</a> request. '
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The group the policy is associated with.
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      type: object
    GetLoginProfileRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the user whose login profile you want to
                retrieve.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: GetLoginProfileRequest
      type: object
    GetLoginProfileResponse:
      description: 'Contains the response to a successful <a>GetLoginProfile</a> request. '
      example:
        LoginProfile:
          CreateDate: '2012-09-21T23:03:39Z'
          UserName: Anika
      properties:
        LoginProfile:
          allOf:
            - $ref: '#/components/schemas/LoginProfile'
            - description: >-
                A structure containing the user name and the profile creation
                date for the user.
      required:
        - LoginProfile
      type: object
    GetPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the managed policy that you
                want information about.</p> <p>For more information about ARNs,
                see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicyArn
      title: GetPolicyRequest
      type: object
    GetPolicyResponse:
      description: 'Contains the response to a successful <a>GetPolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the policy.
      type: object
    GetPolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the managed policy that you
                want information about.</p> <p>For more information about ARNs,
                see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                <p>Identifies the policy version to retrieve.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that consists of the lowercase letter 'v'
                followed by one or two digits, and optionally followed by a
                period '.' and a string of letters and digits.</p>
      required:
        - PolicyArn
        - VersionId
      title: GetPolicyVersionRequest
      type: object
    GetPolicyVersionResponse:
      description: 'Contains the response to a successful <a>GetPolicyVersion</a> request. '
      properties:
        PolicyVersion:
          allOf:
            - $ref: '#/components/schemas/PolicyVersion'
            - description: A structure containing details about the policy version.
      type: object
    GetRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role associated with the policy.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
      title: GetRolePolicyRequest
      type: object
    GetRolePolicyResponse:
      description: 'Contains the response to a successful <a>GetRolePolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The role the policy is associated with.
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      type: object
    GetSSHPublicKeyRequest:
      properties:
        Encoding:
          allOf:
            - $ref: '#/components/schemas/encodingType'
            - description: >-
                Specifies the public key encoding format to use in the response.
                To retrieve the public key in ssh-rsa format, use
                <code>SSH</code>. To retrieve the public key in PEM format, use
                <code>PEM</code>.
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: >-
                <p>The unique identifier for the SSH public key.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the SSH public
                key.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SSHPublicKeyId
        - Encoding
      title: GetSSHPublicKeyRequest
      type: object
    GetSSHPublicKeyResponse:
      description: Contains the response to a successful <a>GetSSHPublicKey</a> request.
      properties:
        SSHPublicKey:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKey'
            - description: A structure containing details about the SSH public key.
      type: object
    GetServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
            - $ref: '#/components/schemas/serverCertificateNameType'
            - description: >-
                <p>The name of the server certificate you want to retrieve
                information about.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - ServerCertificateName
      title: GetServerCertificateRequest
      type: object
    GetServerCertificateResponse:
      description: >-
        Contains the response to a successful <a>GetServerCertificate</a>
        request. 
      properties:
        ServerCertificate:
          allOf:
            - $ref: '#/components/schemas/ServerCertificate'
            - description: A structure containing details about the server certificate.
      required:
        - ServerCertificate
      type: object
    GetServiceLastAccessedDetailsWithEntitiesRequest:
      properties:
        JobId:
          allOf:
            - $ref: '#/components/schemas/jobIDType'
            - description: >-
                The ID of the request generated by the
                <code>GenerateServiceLastAccessedDetails</code> operation.
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        ServiceNamespace:
          allOf:
            - $ref: '#/components/schemas/serviceNamespaceType'
            - description: "<p>The service namespace for an Amazon Web Services service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.</p> <p>To learn the service namespace for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services General Reference</i>.</p>"
      required:
        - JobId
        - ServiceNamespace
      title: GetServiceLastAccessedDetailsWithEntitiesRequest
      type: object
    GetServiceLastAccessedDetailsWithEntitiesResponse:
      example:
        EntityDetailsList:
          - EntityInfo:
              Arn: arn:aws:iam::123456789012:user/AWSExampleUser01
              Id: AIDAEX2EXAMPLEB6IGCDC
              Name: AWSExampleUser01
              Path: /
              Type: USER
            LastAuthenticated: '2018-10-24T19:10:00Z'
          - EntityInfo:
              Arn: arn:aws:iam::123456789012:role/AWSExampleRole01
              Id: AROAEAEXAMPLEIANXSIU4
              Name: AWSExampleRole01
              Path: /
              Type: ROLE
        IsTruncated: false
        JobCompletionDate: '2018-10-24T19:47:35.241Z'
        JobCreationDate: '2018-10-24T19:47:31.466Z'
        JobStatus: COMPLETED
      properties:
        EntityDetailsList:
          allOf:
            - $ref: '#/components/schemas/entityDetailsListType'
            - description: "An\_<code>EntityDetailsList</code> object that contains details about when an IAM entity (user or role) used group or policy permissions in an attempt to access the specified Amazon Web Services service."
        Error:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: >-
                An object that contains details about the reason the operation
                failed.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        JobCompletionDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the generated report job was completed or failed.</p> <p>This field is null if the job is still in progress, as indicated by a job status value of <code>IN_PROGRESS</code>.</p>"
        JobCreationDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the report job was created."
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/jobStatusType'
            - description: The status of the job.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - JobStatus
        - JobCreationDate
        - JobCompletionDate
        - EntityDetailsList
      type: object
    GetServiceLinkedRoleDeletionStatusRequest:
      properties:
        DeletionTaskId:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskIdType'
            - description: >-
                The deletion task identifier. This identifier is returned by the
                <a>DeleteServiceLinkedRole</a> operation in the format
                <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
        - DeletionTaskId
      title: GetServiceLinkedRoleDeletionStatusRequest
      type: object
    GetServiceLinkedRoleDeletionStatusResponse:
      properties:
        Reason:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskFailureReasonType'
            - description: >-
                An object that contains details about the reason the deletion
                failed.
        Status:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskStatusType'
            - description: The status of the deletion.
      required:
        - Status
      type: object
    GetUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user who the policy is associated with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
      title: GetUserPolicyRequest
      type: object
    GetUserPolicyResponse:
      description: 'Contains the response to a successful <a>GetUserPolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: The user the policy is associated with.
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      type: object
    Group:
      description: >-
        <p>Contains information about an IAM group entity.</p> <p>This data type
        is used as a response element in the following operations:</p> <ul> <li>
        <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li>
        <li> <p> <a>ListGroups</a> </p> </li> </ul>
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the group was created.
        GroupId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: ' The stable and unique string identifying the group. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The friendly name that identifies the group.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                The path to the group. For more information about paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>. 
      required:
        - Path
        - GroupName
        - GroupId
        - Arn
        - CreateDate
      type: object
    GroupDetail:
      description: >-
        <p>Contains information about an IAM group, including all of the group's
        policies.</p> <p>This data type is used as a response element in the
        <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the managed policies attached to the group.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the group was created.
        GroupId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the group. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The friendly name that identifies the group.
        GroupPolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: A list of the inline policies embedded in the group.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                The path to the group. For more information about paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
      type: object
    InstanceProfile:
      description: >-
        <p>Contains information about an instance profile.</p> <p>This data type
        is used as a response element in the following operations:</p> <ul> <li>
        <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p>
        <a>GetInstanceProfile</a> </p> </li> <li> <p>
        <a>ListInstanceProfiles</a> </p> </li> <li> <p>
        <a>ListInstanceProfilesForRole</a> </p> </li> </ul>
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the instance profile was created.
        InstanceProfileId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: ' The stable and unique string identifying the instance profile. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        InstanceProfileName:
          allOf:
            - $ref: '#/components/schemas/instanceProfileNameType'
            - description: The name identifying the instance profile.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: ' The path to the instance profile. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        Roles:
          allOf:
            - $ref: '#/components/schemas/roleListType'
            - description: The role associated with the instance profile.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the instance profile. For
                more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
      required:
        - Path
        - InstanceProfileName
        - InstanceProfileId
        - Arn
        - CreateDate
        - Roles
      type: object
    InvalidAuthenticationCodeException: {}
    InvalidCertificateException: {}
    InvalidInputException: {}
    InvalidPublicKeyException: {}
    LimitExceededException: {}
    ListAccessKeysRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: ListAccessKeysRequest
      type: object
    ListAccessKeysResponse:
      description: 'Contains the response to a successful <a>ListAccessKeys</a> request. '
      example:
        AccessKeyMetadata:
          - AccessKeyId: AKIA111111111EXAMPLE
            CreateDate: '2016-12-01T22:19:58Z'
            Status: Active
            UserName: Alice
          - AccessKeyId: AKIA222222222EXAMPLE
            CreateDate: '2016-12-01T22:20:01Z'
            Status: Active
            UserName: Alice
      properties:
        AccessKeyMetadata:
          allOf:
            - $ref: '#/components/schemas/accessKeyMetadataListType'
            - description: A list of objects containing metadata about the access keys.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - AccessKeyMetadata
      type: object
    ListAccountAliasesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
      title: ListAccountAliasesRequest
      type: object
    ListAccountAliasesResponse:
      description: >-
        Contains the response to a successful <a>ListAccountAliases</a>
        request. 
      example:
        AccountAliases:
          - exmaple-corporation
      properties:
        AccountAliases:
          allOf:
            - $ref: '#/components/schemas/accountAliasListType'
            - description: >-
                A list of aliases associated with the account. Amazon Web
                Services supports only one alias per account.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - AccountAliases
      type: object
    ListAttachedGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the group to list
                attached policies for.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all policies.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p>
      required:
        - GroupName
      title: ListAttachedGroupPoliciesRequest
      type: object
    ListAttachedGroupPoliciesResponse:
      description: >-
        Contains the response to a successful <a>ListAttachedGroupPolicies</a>
        request. 
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      type: object
    ListAttachedRolePoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all policies.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the role to list
                attached policies for.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
      title: ListAttachedRolePoliciesRequest
      type: object
    ListAttachedRolePoliciesResponse:
      description: >-
        Contains the response to a successful <a>ListAttachedRolePolicies</a>
        request. 
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      type: object
    ListAttachedUserPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all policies.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the user to list
                attached policies for.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: ListAttachedUserPoliciesRequest
      type: object
    ListAttachedUserPoliciesResponse:
      description: >-
        Contains the response to a successful <a>ListAttachedUserPolicies</a>
        request. 
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      type: object
    ListEntitiesForPolicyRequest:
      properties:
        EntityFilter:
          allOf:
            - $ref: '#/components/schemas/EntityType'
            - description: >-
                <p>The entity type to use for filtering the results.</p> <p>For
                example, when <code>EntityFilter</code> is <code>Role</code>,
                only the roles that are attached to the specified policy are
                returned. This parameter is optional. If it is not included, all
                attached entities (users, groups, and roles) are returned. The
                argument for this parameter must be one of the valid values
                listed below.</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all entities.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy for which
                you want the versions.</p> <p>For more information about ARNs,
                see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        PolicyUsageFilter:
          allOf:
            - $ref: '#/components/schemas/PolicyUsageType'
            - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
      required:
        - PolicyArn
      title: ListEntitiesForPolicyRequest
      type: object
    ListEntitiesForPolicyResponse:
      description: >-
        Contains the response to a successful <a>ListEntitiesForPolicy</a>
        request. 
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyGroups:
          allOf:
            - $ref: '#/components/schemas/PolicyGroupListType'
            - description: A list of IAM groups that the policy is attached to.
        PolicyRoles:
          allOf:
            - $ref: '#/components/schemas/PolicyRoleListType'
            - description: A list of IAM roles that the policy is attached to.
        PolicyUsers:
          allOf:
            - $ref: '#/components/schemas/PolicyUserListType'
            - description: A list of IAM users that the policy is attached to.
      type: object
    ListGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
      required:
        - GroupName
      title: ListGroupPoliciesRequest
      type: object
    ListGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListGroupPolicies</a> request. '
      example:
        PolicyNames:
          - AdminRoot
          - KeyPolicy
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: >-
                <p>A list of policy names.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - PolicyNames
      type: object
    ListGroupsForUserRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user to list groups for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: ListGroupsForUserRequest
      type: object
    ListGroupsForUserResponse:
      description: 'Contains the response to a successful <a>ListGroupsForUser</a> request. '
      example:
        Groups:
          - Arn: >-
              arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test
            CreateDate: '2016-11-30T14:10:01.156Z'
            GroupId: AGP2111111111EXAMPLE
            GroupName: Test
            Path: /division_abc/subdivision_xyz/product_1234/engineering/
          - Arn: >-
              arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers
            CreateDate: '2016-06-12T20:14:52.032Z'
            GroupId: AGPI222222222SEXAMPLE
            GroupName: Managers
            Path: /division_abc/subdivision_xyz/product_1234/
      properties:
        Groups:
          allOf:
            - $ref: '#/components/schemas/groupListType'
            - description: A list of groups.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - Groups
      type: object
    ListInstanceProfilesForRoleRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role to list instance profiles for.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
      title: ListInstanceProfilesForRoleRequest
      type: object
    ListInstanceProfilesForRoleResponse:
      description: >-
        Contains the response to a successful <a>ListInstanceProfilesForRole</a>
        request. 
      properties:
        InstanceProfiles:
          allOf:
            - $ref: '#/components/schemas/instanceProfileListType'
            - description: A list of instance profiles.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - InstanceProfiles
      type: object
    ListMFADeviceTagsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>The unique identifier for the IAM virtual MFA device whose
                tags you want to see. For virtual MFA devices, the serial number
                is the same as the ARN.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - SerialNumber
      title: ListMFADeviceTagsRequest
      type: object
    ListMFADeviceTagsResponse:
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                The list of tags that are currently attached to the virtual MFA
                device. Each tag consists of a key name and an associated value.
                If no tags are attached to the specified resource, the response
                contains an empty list.
      required:
        - Tags
      type: object
    ListMFADevicesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user whose MFA devices you want to list.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: ListMFADevicesRequest
      type: object
    ListMFADevicesResponse:
      description: 'Contains the response to a successful <a>ListMFADevices</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        MFADevices:
          allOf:
            - $ref: '#/components/schemas/mfaDeviceListType'
            - description: A list of MFA devices.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - MFADevices
      type: object
    ListPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        OnlyAttached:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>A flag to filter the results to only the attached
                policies.</p> <p>When <code>OnlyAttached</code> is
                <code>true</code>, the returned list contains only the policies
                that are attached to an IAM user, group, or role. When
                <code>OnlyAttached</code> is <code>false</code>, or when the
                parameter is not included, all policies are returned.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all policies. This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.
        PolicyUsageFilter:
          allOf:
            - $ref: '#/components/schemas/PolicyUsageType'
            - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
        Scope:
          allOf:
            - $ref: '#/components/schemas/policyScopeType'
            - description: >-
                <p>The scope to use for filtering the results.</p> <p>To list
                only Amazon Web Services managed policies, set
                <code>Scope</code> to <code>AWS</code>. To list only the
                customer managed policies in your Amazon Web Services account,
                set <code>Scope</code> to <code>Local</code>.</p> <p>This
                parameter is optional. If it is not included, or if it is set to
                <code>All</code>, all policies are returned.</p>
      title: ListPoliciesRequest
      type: object
    ListPoliciesResponse:
      description: 'Contains the response to a successful <a>ListPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Policies:
          allOf:
            - $ref: '#/components/schemas/policyListType'
            - description: A list of policies.
      type: object
    ListPolicyTagsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of the IAM customer managed policy whose tags you
                want to see.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - PolicyArn
      title: ListPolicyTagsRequest
      type: object
    ListPolicyTagsResponse:
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                The list of tags that are currently attached to the IAM customer
                managed policy. Each tag consists of a key name and an
                associated value. If no tags are attached to the specified
                resource, the response contains an empty list.
      required:
        - Tags
      type: object
    ListPolicyVersionsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy for which
                you want the versions.</p> <p>For more information about ARNs,
                see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicyArn
      title: ListPolicyVersionsRequest
      type: object
    ListPolicyVersionsResponse:
      description: >-
        Contains the response to a successful <a>ListPolicyVersions</a>
        request. 
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Versions:
          allOf:
            - $ref: '#/components/schemas/policyDocumentVersionListType'
            - description: >-
                <p>A list of policy versions.</p> <p>For more information about
                managed policy versions, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
                for managed policies</a> in the <i>IAM User Guide</i>.</p>
      type: object
    ListRolePoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
      title: ListRolePoliciesRequest
      type: object
    ListRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListRolePolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    ListSSHPublicKeysRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user to list SSH public keys for. If none
                is specified, the <code>UserName</code> field is determined
                implicitly based on the Amazon Web Services access key used to
                sign the request.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: ListSSHPublicKeysRequest
      type: object
    ListSSHPublicKeysResponse:
      description: Contains the response to a successful <a>ListSSHPublicKeys</a> request.
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        SSHPublicKeys:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKeyListType'
            - description: A list of the SSH public keys assigned to IAM user.
      type: object
    ListServiceSpecificCredentialsRequest:
      properties:
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: >-
                Filters the returned results to only those for the specified
                Amazon Web Services service. If not specified, then Amazon Web
                Services returns service-specific credentials for all services.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the user whose service-specific credentials you
                want information about. If this value is not specified, then the
                operation assumes the user whose credentials are used to call
                the operation.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: ListServiceSpecificCredentialsRequest
      type: object
    ListServiceSpecificCredentialsResponse:
      properties:
        ServiceSpecificCredentials:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredentialsListType'
            - description: >-
                A list of structures that each contain details about a
                service-specific credential.
      type: object
    ListSigningCertificatesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the IAM user whose signing certificates you want
                to examine.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      title: ListSigningCertificatesRequest
      type: object
    ListSigningCertificatesResponse:
      description: >-
        Contains the response to a successful <a>ListSigningCertificates</a>
        request. 
      example:
        Certificates:
          - CertificateBody: >-
              -----BEGIN CERTIFICATE-----<certificate-body>-----END
              CERTIFICATE-----
            CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
            Status: Active
            UploadDate: '2013-06-06T21:40:08Z'
            UserName: Bob
      properties:
        Certificates:
          allOf:
            - $ref: '#/components/schemas/certificateListType'
            - description: A list of the user's signing certificate information.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
      required:
        - Certificates
      type: object
    ListUserPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: ListUserPoliciesRequest
      type: object
    ListUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListUserPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    LoginProfile:
      description: >-
        <p>Contains the user name and password create date for a user.</p> <p>
        This data type is used as a response element in the
        <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> operations. </p>
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the password for the user was created.
        PasswordResetRequired:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the user is required to set a new password on
                next sign-in.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                The name of the user, which can be used for signing in to the
                Amazon Web Services Management Console.
      required:
        - UserName
        - CreateDate
      type: object
    MFADevice:
      description: >-
        <p>Contains information about an MFA device.</p> <p>This data type is
        used as a response element in the <a>ListMFADevices</a> operation.</p>
      properties:
        EnableDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the MFA device was enabled for the user.
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                The serial number that uniquely identifies the MFA device. For
                virtual MFA devices, the serial number is the device ARN.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The user with whom the MFA device is associated.
      required:
        - UserName
        - SerialNumber
        - EnableDate
      type: object
    MalformedCertificateException: {}
    MalformedPolicyDocumentException: {}
    ManagedPolicyDetail:
      description: >-
        <p>Contains information about a managed policy, including the policy's
        ARN, versions, and the number of principal entities (users, groups, and
        roles) that the policy is attached to.</p> <p>This data type is used as
        a response element in the <a>GetAccountAuthorizationDetails</a>
        operation.</p> <p>For more information about managed policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                The number of principal entities (users, groups, and roles) that
                the policy is attached to.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                <p>The identifier for the version of the policy that is set as
                the default (operative) version.</p> <p>For more information
                about policy versions, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
                for managed policies</a> in the <i>IAM User Guide</i>. </p>
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: A friendly description of the policy.
        IsAttachable:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the policy can be attached to an IAM user,
                group, or role.
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path to the policy.</p> <p>For more information about
                paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                <p>The number of entities (users and roles) for which the policy
                is used as the permissions boundary. </p> <p>For more
                information about permissions boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        PolicyId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                <p>The stable and unique string identifying the policy.</p>
                <p>For more information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name (not ARN) identifying the policy.
        PolicyVersionList:
          allOf:
            - $ref: '#/components/schemas/policyDocumentVersionListType'
            - description: A list containing information about the versions of the policy.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                <p>The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was last updated.</p> <p>When a
                policy has only one version, this field contains the date and
                time when the policy was created. When a policy has more than
                one version, this field contains the date and time when the most
                recent policy version was created.</p>
      type: object
    ManagedPolicyDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ManagedPolicyDetail'
          - xml:
              name: member
      type: array
    NoSuchEntityException: {}
    PasswordPolicy:
      description: >-
        <p>Contains information about the account password policy.</p> <p> This
        data type is used as a response element in the
        <a>GetAccountPasswordPolicy</a> operation. </p>
      properties:
        AllowUsersToChangePassword:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether IAM users are allowed to change their own
                password. Gives IAM users permissions to
                <code>iam:ChangePassword</code> for only their user and to the
                <code>iam:GetAccountPasswordPolicy</code> action. This option
                does not attach a permissions policy to each user, rather the
                permissions are applied at the account-level for all users by
                IAM.
        ExpirePasswords:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Indicates whether passwords in the account expire. Returns true
                if <code>MaxPasswordAge</code> contains a value greater than 0.
                Returns false if MaxPasswordAge is 0 or not present.
        HardExpiry:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: >-
                Specifies whether IAM users are prevented from setting a new
                password via the Amazon Web Services Management Console after
                their password has expired. The IAM user cannot access the
                console until an administrator resets the password. IAM users
                with <code>iam:ChangePassword</code> permission and active
                access keys can reset their own expired console password using
                the CLI or API.
        MaxPasswordAge:
          allOf:
            - $ref: '#/components/schemas/maxPasswordAgeType'
            - description: The number of days that an IAM user password is valid.
        MinimumPasswordLength:
          allOf:
            - $ref: '#/components/schemas/minimumPasswordLengthType'
            - description: Minimum length to require for IAM user passwords.
        PasswordReusePrevention:
          allOf:
            - $ref: '#/components/schemas/passwordReusePreventionType'
            - description: >-
                Specifies the number of previous passwords that IAM users are
                prevented from reusing.
        RequireLowercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether IAM user passwords must contain at least one
                lowercase character (a to z).
        RequireNumbers:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether IAM user passwords must contain at least one
                numeric character (0 to 9).
        RequireSymbols:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether IAM user passwords must contain at least
                one of the following symbols:</p> <p>! @ # $ % ^ &amp; * ( ) _ +
                - = [ ] { } | '</p>
        RequireUppercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether IAM user passwords must contain at least one
                uppercase character (A to Z).
      type: object
    PasswordPolicyViolationException: {}
    PermissionsBoundaryAttachmentType:
      enum:
        - PermissionsBoundaryPolicy
      type: string
    Policy:
      description: >-
        <p>Contains information about a managed policy.</p> <p>This data type is
        used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>,
        and <a>ListPolicies</a> operations. </p> <p>For more information about
        managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                The number of entities (users, groups, and roles) that the
                policy is attached to.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                The identifier for the version of the policy that is set as the
                default version.
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: >-
                <p>A friendly description of the policy.</p> <p>This element is
                included in the response to the <a>GetPolicy</a> operation. It
                is not included in the response to the <a>ListPolicies</a>
                operation. </p>
        IsAttachable:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the policy can be attached to an IAM user,
                group, or role.
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path to the policy.</p> <p>For more information about
                paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                <p>The number of entities (users and roles) for which the policy
                is used to set the permissions boundary. </p> <p>For more
                information about permissions boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        PolicyId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                <p>The stable and unique string identifying the policy.</p>
                <p>For more information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name (not ARN) identifying the policy.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the instance profile. For
                more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                <p>The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was last updated.</p> <p>When a
                policy has only one version, this field contains the date and
                time when the policy was created. When a policy has more than
                one version, this field contains the date and time when the most
                recent policy version was created.</p>
      type: object
    PolicyDetail:
      description: >-
        <p>Contains information about an IAM policy, including the policy
        document.</p> <p>This data type is used as a response element in the
        <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: The policy document.
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
      type: object
    PolicyGroup:
      description: >-
        <p>Contains information about a group that a managed policy is attached
        to.</p> <p>This data type is used as a response element in the
        <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information
        about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        GroupId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the group. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The name (friendly name, not ARN) identifying the group.
      type: object
    PolicyGroupListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyGroup'
          - xml:
              name: member
      type: array
    PolicyNotAttachableException: {}
    PolicyRole:
      description: >-
        <p>Contains information about a role that a managed policy is attached
        to.</p> <p>This data type is used as a response element in the
        <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information
        about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        RoleId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the role. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The name (friendly name, not ARN) identifying the role.
      type: object
    PolicyRoleListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyRole'
          - xml:
              name: member
      type: array
    PolicyUsageType:
      description: >-
        <p>The policy usage type that indicates whether the policy is used as a
        permissions policy or as the permissions boundary for an entity.</p>
        <p>For more information about permissions boundaries, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
        boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      enum:
        - PermissionsPolicy
        - PermissionsBoundary
      type: string
    PolicyUser:
      description: >-
        <p>Contains information about a user that a managed policy is attached
        to.</p> <p>This data type is used as a response element in the
        <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information
        about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        UserId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the user. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name (friendly name, not ARN) identifying the user.
      type: object
    PolicyUserListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyUser'
          - xml:
              name: member
      type: array
    PolicyVersion:
      description: >-
        <p>Contains information about a version of a managed policy.</p> <p>This
        data type is used as a response element in the
        <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>,
        <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a>
        operations. </p> <p>For more information about managed policies, refer
        to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy version was created.
        Document:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>The policy document is returned
                in the response to the <a>GetPolicyVersion</a> and
                <a>GetAccountAuthorizationDetails</a> operations. It is not
                returned in the response to the <a>CreatePolicyVersion</a> or
                <a>ListPolicyVersions</a> operations. </p> <p>The policy
                document returned in this structure is URL-encoded compliant
                with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>.
                You can use a URL decoding method to convert the policy back to
                plain JSON text. For example, if you use Java, you can use the
                <code>decode</code> method of the
                <code>java.net.URLDecoder</code> utility class in the Java SDK.
                Other languages and SDKs provide similar functionality.</p>
        IsDefaultVersion:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the policy version is set as the policy's
                default version.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                <p>The identifier for the policy version.</p> <p>Policy version
                identifiers always begin with <code>v</code> (always lowercase).
                When a policy is created, the first policy version is
                <code>v1</code>. </p>
      type: object
    PutGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-.</p>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to = IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      title: PutGroupPolicyRequest
      type: object
    PutRolePolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      title: PutRolePolicyRequest
      type: object
    PutUserPolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      title: PutUserPolicyRequest
      type: object
    ReasonType:
      maxLength: 1000
      type: string
    RegionNameType:
      maxLength: 100
      minLength: 1
      type: string
    ResetServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: >-
                <p>The unique identifier of the service-specific credential.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the service-specific
                credential. If this value is not specified, then the operation
                assumes the user whose credentials are used to call the
                operation.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - ServiceSpecificCredentialId
      title: ResetServiceSpecificCredentialRequest
      type: object
    ResetServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredential'
            - description: >-
                <p>A structure with details about the updated service-specific
                credential, including the new password.</p> <important> <p>This
                is the <b>only</b> time that you can access the password. You
                cannot recover the password later, but you can reset it
                again.</p> </important>
      type: object
    ResyncMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>An authentication code emitted by the device.</p> <p>The
                format for this parameter is a sequence of six digits.</p>
        AuthenticationCode2:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>A subsequent authentication code emitted by the device.</p>
                <p>The format for this parameter is a sequence of six
                digits.</p>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>Serial number that uniquely identifies the MFA device.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user whose MFA device you want to
                resynchronize.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SerialNumber
        - AuthenticationCode1
        - AuthenticationCode2
      title: ResyncMFADeviceRequest
      type: object
    Role:
      description: >-
        Contains information about an IAM role. This structure is returned as a
        response element in several API operations that interact with roles.
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i> guide. '
        AssumeRolePolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: The policy that grants an entity permission to assume the role.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the role was created.
        Description:
          allOf:
            - $ref: '#/components/schemas/roleDescriptionType'
            - description: A description of the role that you provide.
        MaxSessionDuration:
          allOf:
            - $ref: '#/components/schemas/roleMaxSessionDurationType'
            - description: >-
                The maximum session duration (in seconds) for the specified
                role. Anyone who uses the CLI, or API to assume the role can
                specify the duration using the optional
                <code>DurationSeconds</code> API parameter or
                <code>duration-seconds</code> CLI parameter.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: ' The path to the role. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        PermissionsBoundary:
          allOf:
            - $ref: '#/components/schemas/AttachedPermissionsBoundary'
            - description: >-
                <p>The ARN of the policy used to set the permissions boundary
                for the role.</p> <p>For more information about permissions
                boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        RoleId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: ' The stable and unique string identifying the role. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        RoleLastUsed:
          allOf:
            - $ref: '#/components/schemas/RoleLastUsed'
            - description: >-
                Contains information about the last time that an IAM role was
                used. This includes the date and time and the Region in which
                the role was last used. Activity is only reported for the
                trailing 400 days. This period can be shorter if your Region
                began supporting these features within the last year. The role
                might have been used more than 400 days ago. For more
                information, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
                where data is tracked</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The friendly name that identifies the role.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the role. For more
                information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
      required:
        - Path
        - RoleName
        - RoleId
        - Arn
        - CreateDate
      type: object
    RoleDetail:
      description: >-
        <p>Contains information about an IAM role, including all of the role's
        policies.</p> <p>This data type is used as a response element in the
        <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AssumeRolePolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: The trust policy that grants permission to assume the role.
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: >-
                A list of managed policies attached to the role. These policies
                are the role's access (permissions) policies.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the role was created.
        InstanceProfileList:
          allOf:
            - $ref: '#/components/schemas/instanceProfileListType'
            - description: A list of instance profiles that contain this role.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                The path to the role. For more information about paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
            - $ref: '#/components/schemas/AttachedPermissionsBoundary'
            - description: >-
                <p>The ARN of the policy used to set the permissions boundary
                for the role.</p> <p>For more information about permissions
                boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        RoleId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the role. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        RoleLastUsed:
          allOf:
            - $ref: '#/components/schemas/RoleLastUsed'
            - description: >-
                Contains information about the last time that an IAM role was
                used. This includes the date and time and the Region in which
                the role was last used. Activity is only reported for the
                trailing 400 days. This period can be shorter if your Region
                began supporting these features within the last year. The role
                might have been used more than 400 days ago. For more
                information, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
                where data is tracked</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The friendly name that identifies the role.
        RolePolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: >-
                A list of inline policies embedded in the role. These policies
                are the role's access (permissions) policies.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the role. For more
                information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    RoleLastUsed:
      description: >-
        <p>Contains information about the last time that an IAM role was used.
        This includes the date and time and the Region in which the role was
        last used. Activity is only reported for the trailing 400 days. This
        period can be shorter if your Region began supporting these features
        within the last year. The role might have been used more than 400 days
        ago. For more information, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions
        where data is tracked</a> in the <i>IAM User Guide</i>.</p> <p>This data
        type is returned as a response element in the <a>GetRole</a> and
        <a>GetAccountAuthorizationDetails</a> operations.</p>
      properties:
        LastUsedDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a> that the role was last used.</p> <p>This field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\">Regions where data is tracked</a> in the <i>IAM User Guide</i>. </p>"
        Region:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: >-
                The name of the Amazon Web Services Region in which the role was
                last used.
      type: object
    RoleUsageListType:
      items:
        allOf:
          - $ref: '#/components/schemas/RoleUsageType'
          - xml:
              name: member
      type: array
    RoleUsageType:
      description: >-
        <p>An object that contains details about how a service-linked role is
        used, if that information is returned by the service.</p> <p>This data
        type is used as a response element in the
        <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
      properties:
        Region:
          allOf:
            - $ref: '#/components/schemas/RegionNameType'
            - description: >-
                The name of the Region where the service-linked role is being
                used.
        Resources:
          allOf:
            - $ref: '#/components/schemas/ArnListType'
            - description: The name of the resource that is using the service-linked role.
      type: object
    SSHPublicKey:
      description: >-
        <p>Contains information about an SSH public key.</p> <p>This data type
        is used as a response element in the <a>GetSSHPublicKey</a> and
        <a>UploadSSHPublicKey</a> operations. </p>
      properties:
        Fingerprint:
          allOf:
            - $ref: '#/components/schemas/publicKeyFingerprintType'
            - description: The MD5 message digest of the SSH public key.
        SSHPublicKeyBody:
          allOf:
            - $ref: '#/components/schemas/publicKeyMaterialType'
            - description: The SSH public key.
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: The unique identifier for the SSH public key.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the SSH public key. <code>Active</code> means that
                the key can be used for authentication with an CodeCommit
                repository. <code>Inactive</code> means that the key cannot be
                used.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the SSH public key.
      required:
        - UserName
        - SSHPublicKeyId
        - Fingerprint
        - SSHPublicKeyBody
        - Status
      type: object
    SSHPublicKeyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/SSHPublicKeyMetadata'
          - xml:
              name: member
      type: array
    SSHPublicKeyMetadata:
      description: >-
        <p>Contains information about an SSH public key, without the key's body
        or fingerprint.</p> <p>This data type is used as a response element in
        the <a>ListSSHPublicKeys</a> operation.</p>
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: The unique identifier for the SSH public key.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the SSH public key. <code>Active</code> means that
                the key can be used for authentication with an CodeCommit
                repository. <code>Inactive</code> means that the key cannot be
                used.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the SSH public key.
      required:
        - UserName
        - SSHPublicKeyId
        - Status
        - UploadDate
      type: object
    ServerCertificate:
      description: >-
        <p>Contains information about a server certificate.</p> <p> This data
        type is used as a response element in the <a>GetServerCertificate</a>
        operation. </p>
      properties:
        CertificateBody:
          allOf:
            - $ref: '#/components/schemas/certificateBodyType'
            - description: The contents of the public key certificate.
        CertificateChain:
          allOf:
            - $ref: '#/components/schemas/certificateChainType'
            - description: The contents of the public key certificate chain.
        ServerCertificateMetadata:
          allOf:
            - $ref: '#/components/schemas/ServerCertificateMetadata'
            - description: >-
                The meta information of the server certificate, such as its
                name, path, ID, and ARN.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the server certificate. For
                more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
      required:
        - ServerCertificateMetadata
        - CertificateBody
      type: object
    ServerCertificateMetadata:
      description: >-
        <p>Contains information about a server certificate without its
        certificate body, certificate chain, and private key.</p> <p> This data
        type is used as a response element in the <a>UploadServerCertificate</a>
        and <a>ListServerCertificates</a> operations. </p>
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        Expiration:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date on which the certificate is set to expire.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: ' The path to the server certificate. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: ' The stable and unique string identifying the server certificate. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateName:
          allOf:
            - $ref: '#/components/schemas/serverCertificateNameType'
            - description: The name that identifies the server certificate.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the server certificate was uploaded.
      required:
        - Path
        - ServerCertificateName
        - ServerCertificateId
        - Arn
      type: object
    ServiceFailureException: {}
    ServiceNotSupportedException: {}
    ServiceSpecificCredential:
      description: Contains the details of a service-specific credential.
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the service-specific credential were created.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: >-
                The name of the service associated with the service-specific
                credential.
        ServicePassword:
          allOf:
            - $ref: '#/components/schemas/servicePassword'
            - description: The generated password for the service-specific credential.
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
            - $ref: '#/components/schemas/serviceUserName'
            - description: >-
                The generated user name for the service-specific credential.
                This value is generated by combining the IAM user's name
                combined with the ID number of the Amazon Web Services account,
                as in <code>jane-at-123456789012</code>, for example. This value
                cannot be configured by the user.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the service-specific credential.
                <code>Active</code> means that the key is valid for API calls,
                while <code>Inactive</code> means it is not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                The name of the IAM user associated with the service-specific
                credential.
      required:
        - CreateDate
        - ServiceName
        - ServiceUserName
        - ServicePassword
        - ServiceSpecificCredentialId
        - UserName
        - Status
      type: object
    ServiceSpecificCredentialMetadata:
      description: Contains additional details about a service-specific credential.
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the service-specific credential were created.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: >-
                The name of the service associated with the service-specific
                credential.
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
            - $ref: '#/components/schemas/serviceUserName'
            - description: The generated user name for the service-specific credential.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the service-specific credential.
                <code>Active</code> means that the key is valid for API calls,
                while <code>Inactive</code> means it is not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                The name of the IAM user associated with the service-specific
                credential.
      required:
        - UserName
        - Status
        - ServiceUserName
        - CreateDate
        - ServiceSpecificCredentialId
        - ServiceName
      type: object
    ServiceSpecificCredentialsListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceSpecificCredentialMetadata'
          - xml:
              name: member
      type: array
    SigningCertificate:
      description: >-
        <p>Contains information about an X.509 signing certificate.</p> <p>This
        data type is used as a response element in the
        <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a>
        operations. </p>
      properties:
        CertificateBody:
          allOf:
            - $ref: '#/components/schemas/certificateBodyType'
            - description: The contents of the signing certificate.
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: The ID for the signing certificate.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status of the signing certificate. <code>Active</code> means
                that the key is valid for API calls, while <code>Inactive</code>
                means it is not.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the signing certificate was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the user the signing certificate is associated with.
      required:
        - UserName
        - CertificateId
        - CertificateBody
        - Status
      type: object
    SimulationPolicyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - xml:
              name: member
      type: array
    Tag:
      description: >-
        A structure that represents user-provided metadata that can be
        associated with an IAM resource. For more information about tagging, see
        <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/tagKeyType'
            - description: >-
                The key name that can be used to look up or retrieve the
                associated value. For example, <code>Department</code> or
                <code>Cost Center</code> are common choices.
        Value:
          allOf:
            - $ref: '#/components/schemas/tagValueType'
            - description: >-
                <p>The value associated with this tag. For example, tags with a
                key name of <code>Department</code> could have values such as
                <code>Human Resources</code>, <code>Accounting</code>, and
                <code>Support</code>. Tags with a key name of <code>Cost
                Center</code> might have values that consist of the number
                associated with the different cost centers in your company.
                Typically, many resources have tags with the same key name but
                with different values.</p> <note> <p>Amazon Web Services always
                interprets the tag <code>Value</code> as a single string. If you
                need to store an array, you can store comma-separated values in
                the string. However, you must interpret the value in your
                code.</p> </note>
      required:
        - Key
        - Value
      type: object
    TagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>The unique identifier for the IAM virtual MFA device to which
                you want to add tags. For virtual MFA devices, the serial number
                is the same as the ARN.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                The list of tags that you want to attach to the IAM virtual MFA
                device. Each tag consists of a key name and an associated value.
      required:
        - SerialNumber
        - Tags
      title: TagMFADeviceRequest
      type: object
    TagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of the IAM customer managed policy to which you want
                to add tags.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                The list of tags that you want to attach to the IAM customer
                managed policy. Each tag consists of a key name and an
                associated value.
      required:
        - PolicyArn
        - Tags
      title: TagPolicyRequest
      type: object
    UnmodifiableEntityException: {}
    UnrecognizedPublicKeyEncodingException: {}
    UntagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: >-
                <p>The unique identifier for the IAM virtual MFA device from
                which you want to remove tags. For virtual MFA devices, the
                serial number is the same as the ARN.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/tagKeyListType'
            - description: >-
                A list of key names as a simple array of strings. The tags with
                matching keys are removed from the specified instance profile.
      required:
        - SerialNumber
        - TagKeys
      title: UntagMFADeviceRequest
      type: object
    UntagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of the IAM customer managed policy from which you
                want to remove tags.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/tagKeyListType'
            - description: >-
                A list of key names as a simple array of strings. The tags with
                matching keys are removed from the specified policy.
      required:
        - PolicyArn
        - TagKeys
      title: UntagPolicyRequest
      type: object
    UpdateAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: >-
                <p>The access key ID of the secret access key you want to
                update.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: ' The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for programmatic calls to Amazon Web Services, while <code>Inactive</code> means that the key cannot be used.'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user whose key you want to update.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - AccessKeyId
        - Status
      title: UpdateAccessKeyRequest
      type: object
    UpdateAccountPasswordPolicyRequest:
      properties:
        AllowUsersToChangePassword:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p> Allows all IAM users in your account to use the Amazon Web
                Services Management Console to change their own passwords. For
                more information, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting
                IAM users to change their own passwords</a> in the <i>IAM User
                Guide</i>.</p> <p>If you do not specify a value for this
                parameter, then the operation uses the default value of
                <code>false</code>. The result is that IAM users in the account
                do not automatically have permissions to change their own
                password.</p>
        HardExpiry:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: >-
                <p> Prevents IAM users who are accessing the account via the
                Amazon Web Services Management Console from setting a new
                console password after their password has expired. The IAM user
                cannot access the console until an administrator resets the
                password.</p> <p>If you do not specify a value for this
                parameter, then the operation uses the default value of
                <code>false</code>. The result is that IAM users can change
                their passwords after they expire and continue to sign in as the
                user.</p> <note> <p> In the Amazon Web Services Management
                Console, the custom password policy option <b>Allow users to
                change their own password</b> gives IAM users permissions to
                <code>iam:ChangePassword</code> for only their user and to the
                <code>iam:GetAccountPasswordPolicy</code> action. This option
                does not attach a permissions policy to each user, rather the
                permissions are applied at the account-level for all users by
                IAM. IAM users with <code>iam:ChangePassword</code> permission
                and active access keys can reset their own expired console
                password using the CLI or API.</p> </note>
        MaxPasswordAge:
          allOf:
            - $ref: '#/components/schemas/maxPasswordAgeType'
            - description: >-
                <p>The number of days that an IAM user password is valid.</p>
                <p>If you do not specify a value for this parameter, then the
                operation uses the default value of <code>0</code>. The result
                is that IAM user passwords never expire.</p>
        MinimumPasswordLength:
          allOf:
            - $ref: '#/components/schemas/minimumPasswordLengthType'
            - description: >-
                <p>The minimum number of characters allowed in an IAM user
                password.</p> <p>If you do not specify a value for this
                parameter, then the operation uses the default value of
                <code>6</code>.</p>
        PasswordReusePrevention:
          allOf:
            - $ref: '#/components/schemas/passwordReusePreventionType'
            - description: >-
                <p>Specifies the number of previous passwords that IAM users are
                prevented from reusing.</p> <p>If you do not specify a value for
                this parameter, then the operation uses the default value of
                <code>0</code>. The result is that IAM users are not prevented
                from reusing previous passwords.</p>
        RequireLowercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether IAM user passwords must contain at least
                one lowercase character from the ISO basic Latin alphabet (a to
                z).</p> <p>If you do not specify a value for this parameter,
                then the operation uses the default value of <code>false</code>.
                The result is that passwords do not require at least one
                lowercase character.</p>
        RequireNumbers:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether IAM user passwords must contain at least
                one numeric character (0 to 9).</p> <p>If you do not specify a
                value for this parameter, then the operation uses the default
                value of <code>false</code>. The result is that passwords do not
                require at least one numeric character.</p>
        RequireSymbols:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether IAM user passwords must contain at least
                one of the following non-alphanumeric characters:</p> <p>! @ # $
                % ^ &amp; * ( ) _ + - = [ ] { } | '</p> <p>If you do not specify
                a value for this parameter, then the operation uses the default
                value of <code>false</code>. The result is that passwords do not
                require at least one symbol character.</p>
        RequireUppercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether IAM user passwords must contain at least
                one uppercase character from the ISO basic Latin alphabet (A to
                Z).</p> <p>If you do not specify a value for this parameter,
                then the operation uses the default value of <code>false</code>.
                The result is that passwords do not require at least one
                uppercase character.</p>
      title: UpdateAccountPasswordPolicyRequest
      type: object
    UpdateLoginProfileRequest:
      properties:
        Password:
          allOf:
            - $ref: '#/components/schemas/passwordType'
            - description: >-
                <p>The new password for the specified IAM user.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul> <p>However, the format can
                be further restricted by the account administrator by setting a
                password policy on the Amazon Web Services account. For more
                information, see <a>UpdateAccountPasswordPolicy</a>.</p>
        PasswordResetRequired:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: >-
                Allows this new password to be used only once by requiring the
                specified IAM user to set a new password on next sign-in.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the user whose password you want to update.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: UpdateLoginProfileRequest
      type: object
    UpdateSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: >-
                <p>The unique identifier for the SSH public key.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: >-
                The status to assign to the SSH public key. <code>Active</code>
                means that the key can be used for authentication with an
                CodeCommit repository. <code>Inactive</code> means that the key
                cannot be used.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the SSH public
                key.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SSHPublicKeyId
        - Status
      title: UpdateSSHPublicKeyRequest
      type: object
    UpdateServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: >-
                <p>The unique identifier of the service-specific credential.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status to be assigned to the service-specific credential.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user associated with the service-specific
                credential. If you do not specify this value, then the operation
                assumes the user whose credentials are used to call the
                operation.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - ServiceSpecificCredentialId
        - Status
      title: UpdateServiceSpecificCredentialRequest
      type: object
    UpdateSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: >-
                <p>The ID of the signing certificate you want to update.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters that can consist of any upper or lowercased
                letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: ' The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for programmatic calls to Amazon Web Services <code>Inactive</code> means that the certificate cannot be used.'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the IAM user the signing certificate belongs
                to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - CertificateId
        - Status
      title: UpdateSigningCertificateRequest
      type: object
    UploadSSHPublicKeyRequest:
      properties:
        SSHPublicKeyBody:
          allOf:
            - $ref: '#/components/schemas/publicKeyMaterialType'
            - description: >-
                <p>The SSH public key. The public key must be encoded in ssh-rsa
                format or PEM format. The minimum bit-length of the public key
                is 2048 bits. For example, you can generate a 2048-bit key, and
                the resulting PEM file is 1679 bytes long.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user to associate the SSH public key
                with.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - SSHPublicKeyBody
      title: UploadSSHPublicKeyRequest
      type: object
    UploadSSHPublicKeyResponse:
      description: Contains the response to a successful <a>UploadSSHPublicKey</a> request.
      properties:
        SSHPublicKey:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKey'
            - description: Contains information about the SSH public key.
      type: object
    UploadSigningCertificateRequest:
      properties:
        CertificateBody:
          allOf:
            - $ref: '#/components/schemas/certificateBodyType'
            - description: >-
                <p>The contents of the signing certificate.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user the signing certificate is for.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - CertificateBody
      title: UploadSigningCertificateRequest
      type: object
    UploadSigningCertificateResponse:
      description: >-
        Contains the response to a successful <a>UploadSigningCertificate</a>
        request. 
      example:
        Certificate:
          CertificateBody: >-
            -----BEGIN CERTIFICATE-----<certificate-body>-----END
            CERTIFICATE-----
          CertificateId: ID123456789012345EXAMPLE
          Status: Active
          UploadDate: '2015-06-06T21:40:08.121Z'
          UserName: Bob
      properties:
        Certificate:
          allOf:
            - $ref: '#/components/schemas/SigningCertificate'
            - description: Information about the certificate.
      required:
        - Certificate
      type: object
    UserDetail:
      description: >-
        <p>Contains information about an IAM user, including all the user's
        policies and all the IAM groups the user is in.</p> <p>This data type is
        used as a response element in the <a>GetAccountAuthorizationDetails</a>
        operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the managed policies attached to the user.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the user was created.
        GroupList:
          allOf:
            - $ref: '#/components/schemas/groupNameListType'
            - description: A list of IAM groups that the user is in.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                The path to the user. For more information about paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
            - $ref: '#/components/schemas/AttachedPermissionsBoundary'
            - description: >-
                <p>The ARN of the policy used to set the permissions boundary
                for the user.</p> <p>For more information about permissions
                boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are associated with the user. For more
                information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
        UserId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                The stable and unique string identifying the user. For more
                information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The friendly name identifying the user.
        UserPolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: A list of the inline policies embedded in the user.
      type: object
    accessKeyIdType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    accessKeyMetadataListType:
      description: >-
        <p>Contains a list of access key metadata.</p> <p>This data type is used
        as a response element in the <a>ListAccessKeys</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/AccessKeyMetadata'
          - xml:
              name: member
      type: array
    accessKeySecretType:
      format: password
      type: string
    accountAliasListType:
      items:
        allOf:
          - $ref: '#/components/schemas/accountAliasType'
          - xml:
              name: member
      type: array
    accountAliasType:
      maxLength: 63
      minLength: 3
      pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
      type: string
    arnType:
      description: >-
        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for
        Amazon Web Services resources.</p> <p>For more information about ARNs,
        go to <a
        href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
        Resource Names (ARNs)</a> in the <i>Amazon Web Services General
        Reference</i>. </p>
      maxLength: 2048
      minLength: 20
      type: string
    attachedPoliciesListType:
      items:
        allOf:
          - $ref: '#/components/schemas/AttachedPolicy'
          - xml:
              name: member
      type: array
    attachmentCountType:
      type: integer
    authenticationCodeType:
      maxLength: 6
      minLength: 6
      pattern: '[\d]+'
      type: string
    booleanObjectType:
      type: boolean
    booleanType:
      type: boolean
    certificateBodyType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateChainType:
      maxLength: 2097152
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateIdType:
      maxLength: 128
      minLength: 24
      pattern: '[\w]+'
      type: string
    certificateListType:
      description: >-
        <p>Contains a list of signing certificates.</p> <p>This data type is
        used as a response element in the <a>ListSigningCertificates</a>
        operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/SigningCertificate'
          - xml:
              name: member
      type: array
    customSuffixType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    dateType:
      format: date-time
      type: string
    encodingType:
      enum:
        - SSH
        - PEM
      type: string
    entityDetailsListType:
      items:
        allOf:
          - $ref: '#/components/schemas/EntityDetails'
          - xml:
              name: member
      type: array
    entityListType:
      items:
        allOf:
          - $ref: '#/components/schemas/EntityType'
          - xml:
              name: member
      type: array
    existingUserNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    groupDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/GroupDetail'
          - xml:
              name: member
      type: array
    groupListType:
      description: >-
        <p>Contains a list of IAM groups.</p> <p>This data type is used as a
        response element in the <a>ListGroups</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/Group'
          - xml:
              name: member
      type: array
    groupNameListType:
      items:
        allOf:
          - $ref: '#/components/schemas/groupNameType'
          - xml:
              name: member
      type: array
    groupNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    idType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    instanceProfileListType:
      description: Contains a list of instance profiles.
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceProfile'
          - xml:
              name: member
      type: array
    instanceProfileNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    jobIDType:
      maxLength: 36
      minLength: 36
      type: string
    jobStatusType:
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
      type: string
    markerType:
      maxLength: 320
      minLength: 1
      pattern: '[\u0020-\u00FF]+'
      type: string
    maxItemsType:
      maximum: 1000
      minimum: 1
      type: integer
    maxPasswordAgeType:
      maximum: 1095
      minimum: 1
      type: integer
    mfaDeviceListType:
      description: >-
        <p>Contains a list of MFA devices.</p> <p>This data type is used as a
        response element in the <a>ListMFADevices</a> and
        <a>ListVirtualMFADevices</a> operations. </p>
      items:
        allOf:
          - $ref: '#/components/schemas/MFADevice'
          - xml:
              name: member
      type: array
    minimumPasswordLengthType:
      maximum: 128
      minimum: 6
      type: integer
    passwordReusePreventionType:
      maximum: 24
      minimum: 1
      type: integer
    passwordType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    pathType:
      maxLength: 512
      minLength: 1
      pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
      type: string
    policyDescriptionType:
      maxLength: 1000
      type: string
    policyDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyDetail'
          - xml:
              name: member
      type: array
    policyDocumentType:
      maxLength: 131072
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    policyDocumentVersionListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - xml:
              name: member
      type: array
    policyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Policy'
          - xml:
              name: member
      type: array
    policyNameListType:
      description: >-
        <p>Contains a list of policy names.</p> <p>This data type is used as a
        response element in the <a>ListPolicies</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/policyNameType'
          - xml:
              name: member
      type: array
    policyNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    policyOwnerEntityType:
      enum:
        - USER
        - ROLE
        - GROUP
      type: string
    policyPathType:
      maxLength: 512
      minLength: 1
      pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
      type: string
    policyScopeType:
      enum:
        - All
        - AWS
        - Local
      type: string
    policyVersionIdType:
      pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
      type: string
    publicKeyFingerprintType:
      maxLength: 48
      minLength: 48
      pattern: '[:\w]+'
      type: string
    publicKeyIdType:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    publicKeyMaterialType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    responseMarkerType:
      type: string
    roleDescriptionType:
      maxLength: 1000
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      type: string
    roleDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/RoleDetail'
          - xml:
              name: member
      type: array
    roleListType:
      description: >-
        <p>Contains a list of IAM roles.</p> <p>This data type is used as a
        response element in the <a>ListRoles</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/Role'
          - xml:
              name: member
      type: array
    roleMaxSessionDurationType:
      maximum: 43200
      minimum: 3600
      type: integer
    roleNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serialNumberType:
      maxLength: 256
      minLength: 9
      pattern: '[\w+=/:,.@-]+'
      type: string
    serverCertificateNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serviceName:
      type: string
    serviceNamespaceType:
      maxLength: 64
      minLength: 1
      pattern: '[\w-]*'
      type: string
    servicePassword:
      format: password
      type: string
    serviceSpecificCredentialId:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    serviceUserName:
      maxLength: 200
      minLength: 17
      pattern: '[\w+=,.@-]+'
      type: string
    statusType:
      enum:
        - Active
        - Inactive
      type: string
    stringType:
      type: string
    summaryMapType:
      additionalProperties:
        $ref: '#/components/schemas/summaryValueType'
      type: object
    tagKeyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/tagKeyType'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagKeyType:
      maxLength: 128
      minLength: 1
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]+'
      type: string
    tagListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagValueType:
      maxLength: 256
      minLength: 0
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]*'
      type: string
    userDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/UserDetail'
          - xml:
              name: member
      type: array
    userNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
