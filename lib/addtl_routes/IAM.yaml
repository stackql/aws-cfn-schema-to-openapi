openapi: 3.0.0
info:
  title: IAM
  description: Additional stackql resources for IAM
  version: 1.0.0
paths:
  /?Action=AttachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Attaches the specified managed policy to the specified IAM group.</p>
        <p>You use this operation to attach a managed policy to a group. To embed
        an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the group to attach
          the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified IAM group.</p>
        <p>You use this operation to attach a managed policy to a group. To embed
        an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
  /?Action=AttachRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Attaches the specified managed policy to the specified IAM role.
        When you attach a managed policy to a role, the managed policy becomes part
        of the role's permission (access) policy.</p> <note> <p>You cannot use a managed
        policy as the role's trust policy. The role's trust policy is created at the
        same time as the role, using <a>CreateRole</a>. You can update a role's trust
        policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation
        to attach a <i>managed</i> policy to a role. To embed an inline policy in
        a role, use <a>PutRolePolicy</a>. For more information about policies, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a
        best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the role to attach the
          policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified IAM role.
        When you attach a managed policy to a role, the managed policy becomes part
        of the role's permission (access) policy.</p> <note> <p>You cannot use a managed
        policy as the role's trust policy. The role's trust policy is created at the
        same time as the role, using <a>CreateRole</a>. You can update a role's trust
        policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation
        to attach a <i>managed</i> policy to a role. To embed an inline policy in
        a role, use <a>PutRolePolicy</a>. For more information about policies, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a
        best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
  /?Action=AttachUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Attaches the specified managed policy to the specified user.</p>
        <p>You use this operation to attach a <i>managed</i> policy to a user. To
        embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best
        practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM user to attach
          the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Attaches the specified managed policy to the specified user.</p>
        <p>You use this operation to attach a <i>managed</i> policy to a user. To
        embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best
        practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
  /?Action=CreatePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Creates a new managed policy for your Amazon Web Services account.</p>
        <p>This operation creates a policy version with a version identifier of <code>v1</code>
        and sets v1 as the policy's default version. For more information about policy
        versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreatePolicy
      parameters:
      - description: <p>The friendly name of the policy.</p> <p>IAM user, group, role,
          and policy names must be unique within the account. Names are not distinguished
          by case. For example, you cannot create resources named both "MyResource"
          and "myresource".</p>
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The path for the policy.</p> <p>For more information about
          paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
          identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional.
          If it is not included, it defaults to a slash (/).</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of either a forward slash (/) by itself
          or a string that must begin and end with forward slashes. In addition, it
          can contain any ASCII character from the ! (<code>\u0021</code>) through
          the DEL character (<code>\u007F</code>), including most punctuation characters,
          digits, and upper and lowercased letters.</p> <note> <p>You cannot use an
          asterisk (*) in the path name.</p> </note>
        in: query
        name: Path
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: <p>The JSON policy document that you want to use as the content
          for the new policy.</p> <p>You must provide policies in JSON format in IAM.
          However, for CloudFormation templates formatted in YAML, you can provide
          the policy in JSON or YAML format. CloudFormation always converts a YAML
          policy to JSON format before submitting it to IAM.</p> <p>The maximum length
          of the policy document that you can pass in this operation, including whitespace,
          is listed below. To view the maximum character counts of a managed policy
          with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
          and STS character quotas</a>.</p> <p>To learn more about JSON policy grammar,
          see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar
          of the IAM JSON policy language</a> in the <i>IAM User Guide</i>. </p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      - description: <p>A friendly description of the policy.</p> <p>Typically used
          to store information about the permissions defined in the policy. For example,
          "Grants access to production DynamoDB tables."</p> <p>The policy description
          is immutable. After a value is assigned, it cannot be changed.</p>
        in: query
        name: Description
        required: false
        schema:
          maxLength: 1000
          type: string
      - description: <p>A list of tags that you want to attach to the new IAM customer
          managed policy. Each tag consists of a key name and an associated value.
          For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
          IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one
          of the tags is invalid or if you exceed the allowed maximum number of tags,
          then the entire request fails and the resource is not created.</p> </note>
        in: query
        name: Tags
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/Tag'
            - xml:
                name: member
          maxItems: 50
          type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyResult:
                    $ref: '#/components/schemas/CreatePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Creates a new managed policy for your Amazon Web Services account.</p>
        <p>This operation creates a policy version with a version identifier of <code>v1</code>
        and sets v1 as the policy's default version. For more information about policy
        versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning
        for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice,
        you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating
        IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information
        about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreatePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyResult:
                    $ref: '#/components/schemas/CreatePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
  /?Action=DeleteGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM group.</p> <p>A group can also have managed policies attached
        to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the group that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name identifying the policy document to delete.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM group.</p> <p>A group can also have managed policies attached
        to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
  /?Action=DeletePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified managed policy.</p> <p>Before you can
        delete a managed policy, you must first detach the policy from all users,
        groups, and roles that it is attached to. In addition, you must delete all
        the policy's versions. The following steps describe the process for deleting
        a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups,
        and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>,
        or <a>DetachRolePolicy</a>. To list all the users, groups, and roles that
        a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li>
        <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To
        list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use
        <a>DeletePolicyVersion</a> to delete the version that is marked as the default
        version. You delete the policy's default version in the next step of the process.</p>
        </li> <li> <p>Delete the policy (this automatically deletes the policy's default
        version) using this operation.</p> </li> </ul> <p>For information about managed
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeletePolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to delete.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified managed policy.</p> <p>Before you can
        delete a managed policy, you must first detach the policy from all users,
        groups, and roles that it is attached to. In addition, you must delete all
        the policy's versions. The following steps describe the process for deleting
        a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups,
        and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>,
        or <a>DetachRolePolicy</a>. To list all the users, groups, and roles that
        a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li>
        <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To
        list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use
        <a>DeletePolicyVersion</a> to delete the version that is marked as the default
        version. You delete the policy's default version in the next step of the process.</p>
        </li> <li> <p>Delete the policy (this automatically deletes the policy's default
        version) using this operation.</p> </li> </ul> <p>For information about managed
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeletePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
  /?Action=DeleteRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM role.</p> <p>A role can also have managed policies attached
        to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the role that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the inline policy to delete from the specified
          IAM role.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM role.</p> <p>A role can also have managed policies attached
        to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
  /?Action=DeleteUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM user.</p> <p>A user can also have managed policies attached
        to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) identifying the user that
          the policy is embedded in.</p> <p>This parameter allows (through its <a
          href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters
          consisting of upper and lowercase alphanumeric characters with no spaces.
          You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name identifying the policy document to delete.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the
        specified IAM user.</p> <p>A user can also have managed policies attached
        to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>.
        For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
  /?Action=DetachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified IAM
        group.</p> <p>A group can also have inline policies embedded with it. To delete
        an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachGroupPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM group to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified IAM
        group.</p> <p>A group can also have inline policies embedded with it. To delete
        an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
  /?Action=DetachRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified role.</p>
        <p>A role can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachRolePolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM role to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified role.</p>
        <p>A role can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
  /?Action=DetachUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified user.</p>
        <p>A user can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachUserPolicy
      parameters:
      - description: '<p>The name (friendly name, not ARN) of the IAM user to detach
          the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want
          to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified user.</p>
        <p>A user can also have inline policies embedded with it. To delete an inline
        policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
  /?Action=GetGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1    
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM group.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM group can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a group, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetGroupPolicy
      parameters:
      - description: '<p>The name of the group the policy is associated with.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetGroupPolicyResult:
                    $ref: '#/components/schemas/GetGroupPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM group.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM group can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a group, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGroupPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetGroupPolicyResult:
                    $ref: '#/components/schemas/GetGroupPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
  /?Action=GetPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Retrieves information about the specified managed policy, including
        the policy's default version and the total number of IAM users, groups, and
        roles to which the policy is attached. To retrieve the list of the specific
        users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>.
        This operation returns metadata about the policy. To retrieve the actual policy
        document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded with an IAM user, group,
        or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetPolicy
      parameters:
      - description: <p>The Amazon Resource Name (ARN) of the managed policy that
          you want information about.</p> <p>For more information about ARNs, see
          <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
          Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyResult:
                    $ref: '#/components/schemas/GetPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified managed policy, including
        the policy's default version and the total number of IAM users, groups, and
        roles to which the policy is attached. To retrieve the list of the specific
        users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>.
        This operation returns metadata about the policy. To retrieve the actual policy
        document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p>
        <p>This operation retrieves information about managed policies. To retrieve
        information about an inline policy that is embedded with an IAM user, group,
        or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p>
        <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyResult:
                    $ref: '#/components/schemas/GetPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
  /?Action=GetRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        with the specified IAM role.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM role can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a role, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p>
      operationId: GET_GetRolePolicy
      parameters:
      - description: '<p>The name of the role associated with the policy.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetRolePolicyResult:
                    $ref: '#/components/schemas/GetRolePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        with the specified IAM role.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM role can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a role, use <a>GetPolicy</a> to determine
        the policy's default version, then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p>
      operationId: POST_GetRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetRolePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetRolePolicyResult:
                    $ref: '#/components/schemas/GetRolePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
  /?Action=GetUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM user.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM user can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a user, use <a>GetPolicy</a> to determine
        the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetUserPolicy
      parameters:
      - description: '<p>The name of the user who the policy is associated with.</p>
          <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document to get.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetUserPolicyResult:
                    $ref: '#/components/schemas/GetUserPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified inline policy document that is embedded
        in the specified IAM user.</p> <note> <p>Policies returned by this operation
        are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC
        3986</a>. You can use a URL decoding method to convert the policy back to
        plain JSON text. For example, if you use Java, you can use the <code>decode</code>
        method of the <code>java.net.URLDecoder</code> utility class in the Java SDK.
        Other languages and SDKs provide similar functionality.</p> </note> <p>An
        IAM user can also have managed policies attached to it. To retrieve a managed
        policy document that is attached to a user, use <a>GetPolicy</a> to determine
        the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve
        the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetUserPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetUserPolicyResult:
                    $ref: '#/components/schemas/GetUserPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
  /?Action=ListGroupPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM group.</p> <p>An IAM group can also have managed policies
        attached to it. To list the managed policies that are attached to a group,
        use <a>ListAttachedGroupPolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified group,
        the operation returns an empty list.</p>
      operationId: GET_ListGroupPolicies
      parameters:
      - description: '<p>The name of the group to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupPoliciesResult:
                    $ref: '#/components/schemas/ListGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM group.</p> <p>An IAM group can also have managed policies
        attached to it. To list the managed policies that are attached to a group,
        use <a>ListAttachedGroupPolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified group,
        the operation returns an empty list.</p>
      operationId: POST_ListGroupPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupPoliciesResult:
                    $ref: '#/components/schemas/ListGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
  /?Action=ListPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Lists all the managed policies that are available in your Amazon
        Web Services account, including your own customer-defined managed policies
        and all Amazon Web Services managed policies.</p> <p>You can filter the list
        of policies that is returned using the optional <code>OnlyAttached</code>,
        <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to
        list only the customer managed policies in your Amazon Web Services account,
        set <code>Scope</code> to <code>Local</code>. To list only Amazon Web Services
        managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note>
        <p>IAM resource-listing operations return a subset of the available attributes
        for the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: GET_ListPolicies
      parameters:
      - description: <p>The scope to use for filtering the results.</p> <p>To list
          only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>.
          To list only the customer managed policies in your Amazon Web Services account,
          set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional.
          If it is not included, or if it is set to <code>All</code>, all policies
          are returned.</p>
        in: query
        name: Scope
        required: false
        schema:
          enum:
          - All
          - AWS
          - Local
          type: string
      - description: <p>A flag to filter the results to only the attached policies.</p>
          <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list
          contains only the policies that are attached to an IAM user, group, or role.
          When <code>OnlyAttached</code> is <code>false</code>, or when the parameter
          is not included, all policies are returned.</p>
        in: query
        name: OnlyAttached
        required: false
        schema:
          type: boolean
      - description: The path prefix for filtering the results. This parameter is
          optional. If it is not included, it defaults to a slash (/), listing all
          policies. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of either a forward slash
          (/) by itself or a string that must begin and end with forward slashes.
          In addition, it can contain any ASCII character from the ! (<code>\u0021</code>)
          through the DEL character (<code>\u007F</code>), including most punctuation
          characters, digits, and upper and lowercased letters.
        in: query
        name: PathPrefix
        required: false
        schema:
          maxLength: 512
          minLength: 1
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          type: string
      - description: "<p>The policy usage method to use for filtering the results.</p>\
          \ <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_\
          to\_<code>PermissionsPolicy</code>. To list only the policies used to set\
          \ permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p>\
          \ <p>This parameter is optional. If it is not included, all policies are\
          \ returned. </p>"
        in: query
        name: PolicyUsageFilter
        required: false
        schema:
          description: <p>The policy usage type that indicates whether the policy
            is used as a permissions policy or as the permissions boundary for an
            entity.</p> <p>For more information about permissions boundaries, see
            <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
            boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
          enum:
          - PermissionsPolicy
          - PermissionsBoundary
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPoliciesResult:
                    $ref: '#/components/schemas/ListPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all the managed policies that are available in your Amazon
        Web Services account, including your own customer-defined managed policies
        and all Amazon Web Services managed policies.</p> <p>You can filter the list
        of policies that is returned using the optional <code>OnlyAttached</code>,
        <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to
        list only the customer managed policies in your Amazon Web Services account,
        set <code>Scope</code> to <code>Local</code>. To list only Amazon Web Services
        managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can
        paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note>
        <p>IAM resource-listing operations return a subset of the available attributes
        for the resource. For example, this operation does not return tags, even though
        they are an attribute of the returned object. To view all of the information
        for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: POST_ListPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPoliciesResult:
                    $ref: '#/components/schemas/ListPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
  /?Action=ListRolePolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM role.</p> <p>An IAM role can also have managed policies
        attached to it. To list the managed policies that are attached to a role,
        use <a>ListAttachedRolePolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified role,
        the operation returns an empty list.</p>
      operationId: GET_ListRolePolicies
      parameters:
      - description: '<p>The name of the role to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListRolePoliciesResult:
                    $ref: '#/components/schemas/ListRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies that are embedded in
        the specified IAM role.</p> <p>An IAM role can also have managed policies
        attached to it. To list the managed policies that are attached to a role,
        use <a>ListAttachedRolePolicies</a>. For more information about policies,
        see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified role,
        the operation returns an empty list.</p>
      operationId: POST_ListRolePolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListRolePoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListRolePoliciesResult:
                    $ref: '#/components/schemas/ListRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
  /?Action=ListUserPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Lists the names of the inline policies embedded in the specified
        IAM user.</p> <p>An IAM user can also have managed policies attached to it.
        To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>.
        For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified user,
        the operation returns an empty list.</p>
      operationId: GET_ListUserPolicies
      parameters:
      - description: '<p>The name of the user to list policies for.</p> <p>This parameter
          allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: Use this parameter only when paginating results and only after
          you receive a response indicating that the results are truncated. Set it
          to the value of the <code>Marker</code> element in the response that you
          received to indicate where the next call should start.
        in: query
        name: Marker
        required: false
        schema:
          maxLength: 320
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          type: string
      - description: <p>Use this only when paginating results to indicate the maximum
          number of items you want in the response. If additional items exist beyond
          the maximum you specify, the <code>IsTruncated</code> response element is
          <code>true</code>.</p> <p>If you do not include this parameter, the number
          of items defaults to 100. Note that IAM might return fewer results, even
          when there are more results available. In that case, the <code>IsTruncated</code>
          response element returns <code>true</code>, and <code>Marker</code> contains
          a value to include in the subsequent call that tells the service where to
          continue from.</p>
        in: query
        name: MaxItems
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListUserPoliciesResult:
                    $ref: '#/components/schemas/ListUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the names of the inline policies embedded in the specified
        IAM user.</p> <p>An IAM user can also have managed policies attached to it.
        To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>.
        For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You
        can paginate the results using the <code>MaxItems</code> and <code>Marker</code>
        parameters. If there are no inline policies embedded with the specified user,
        the operation returns an empty list.</p>
      operationId: POST_ListUserPolicies
      parameters:
      - description: Pagination limit
        in: query
        name: MaxItems
        required: false
        schema:
          type: string
      - description: Pagination token
        in: query
        name: Marker
        required: false
        schema:
          type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListUserPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListUserPoliciesResult:
                    $ref: '#/components/schemas/ListUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
  /?Action=PutGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM group.</p> <p>A user can also have managed policies attached
        to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutGroupPolicy
      parameters:
      - description: '<p>The name of the group to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-.</p>'
        in: query
        name: GroupName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to = IAM.</p>
          <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used
          to validate this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM group.</p> <p>A user can also have managed policies attached
        to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
  /?Action=PutRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM role.</p> <p>When you embed an inline policy in a role,
        the inline policy is used as part of the role's access (permissions) policy.
        The role's trust policy is created at the same time as the role, using <a>CreateRole</a>.
        You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.
        For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p> <p>A role can
        also have a managed policy attached to it. To attach a managed policy to a
        role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutRolePolicy
      parameters:
      - description: '<p>The name of the role to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: RoleName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM role.</p> <p>When you embed an inline policy in a role,
        the inline policy is used as part of the role's access (permissions) policy.
        The role's trust policy is created at the same time as the role, using <a>CreateRole</a>.
        You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.
        For more information about IAM roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using
        roles to delegate permissions and federate identities</a>.</p> <p>A role can
        also have a managed policy attached to it. To attach a managed policy to a
        role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>.
        For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
  /?Action=PutUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM user.</p> <p>An IAM user can also have a managed policy
        attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutUserPolicy
      parameters:
      - description: '<p>The name of the user to associate the policy with.</p> <p>This
          parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: UserName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: '<p>The name of the policy document.</p> <p>This parameter allows
          (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
          a string of characters consisting of upper and lowercase alphanumeric characters
          with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        in: query
        name: PolicyName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: '[\w+=,.@-]+'
          type: string
      - description: <p>The policy document.</p> <p>You must provide policies in JSON
          format in IAM. However, for CloudFormation templates formatted in YAML,
          you can provide the policy in JSON or YAML format. CloudFormation always
          converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The
          <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate
          this parameter is a string of characters consisting of the following:</p>
          <ul> <li> <p>Any printable ASCII character ranging from the space character
          (<code>\u0020</code>) through the end of the ASCII character range</p> </li>
          <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement
          character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special
          characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
          carriage return (<code>\u000D</code>)</p> </li> </ul>
        in: query
        name: PolicyDocument
        required: true
        schema:
          maxLength: 131072
          minLength: 1
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds or updates an inline policy document that is embedded in
        the specified IAM user.</p> <p>An IAM user can also have a managed policy
        attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>.
        To create a new managed policy, use <a>CreatePolicy</a>. For information about
        policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed
        in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM
        and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy
        documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>.
        For general information about using the Query API with IAM, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making
        query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
  /?Action=UntagPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: Removes the specified tags from the customer managed policy. For
        more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagPolicy
      parameters:
      - description: '<p>The ARN of the IAM customer managed policy from which you
          want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: A list of key names as a simple array of strings. The tags with
          matching keys are removed from the specified policy.
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/tagKeyType'
            - xml:
                name: member
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the customer managed policy. For
        more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
  /?Action=TagPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
    - description: The general IAM multi-region endpoint
      url: https://iam.amazonaws.com
      variables:
        region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Adds one or more tags to an IAM customer managed policy. If
        a tag with the same key name already exists, then that tag is overwritten
        with the new value.</p> <p>A tag consists of a key name and an associated
        value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM customer managed policy that has a specified tag attached.
        For examples of policies that show how to use tags to control access, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: GET_TagPolicy
      parameters:
      - description: '<p>The ARN of the IAM customer managed policy to which you want
          to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex
          pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
          characters with no spaces. You can also include any of the following characters:
          _+=,.@-</p>'
        in: query
        name: PolicyArn
        required: true
        schema:
          description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers
            for Amazon Web Services resources.</p> <p>For more information about ARNs,
            go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </p>
          maxLength: 2048
          minLength: 20
          type: string
      - description: The list of tags that you want to attach to the IAM customer
          managed policy. Each tag consists of a key name and an associated value.
        in: query
        name: Tags
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/Tag'
            - xml:
                name: member
          maxItems: 50
          type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
    parameters:
    - $ref: '#/components/parameters/X-Amz-Content-Sha256'
    - $ref: '#/components/parameters/X-Amz-Date'
    - $ref: '#/components/parameters/X-Amz-Algorithm'
    - $ref: '#/components/parameters/X-Amz-Credential'
    - $ref: '#/components/parameters/X-Amz-Security-Token'
    - $ref: '#/components/parameters/X-Amz-Signature'
    - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Adds one or more tags to an IAM customer managed policy. If
        a tag with the same key name already exists, then that tag is overwritten
        with the new value.</p> <p>A tag consists of a key name and an associated
        value. By assigning tags to your resources, you can do the following:</p>
        <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to
        resources to aid in organization and search. For example, you could search
        for all resources with the key name <i>Project</i> and the value <i>MyImportantProject</i>.
        Or search for all resources with the key name <i>Cost Center</i> and the value
        <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in
        IAM user-based and resource-based policies. You can use tags to restrict access
        to only an IAM customer managed policy that has a specified tag attached.
        For examples of policies that show how to use tags to control access, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control
        access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note>
        <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed
        maximum number of tags, then the entire request fails and the resource is
        not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.</p> </li> <li> <p>Amazon Web
        Services always interprets the tag <code>Value</code> as a single string.
        If you need to store an array, you can store comma-separated values in the
        string. However, you must interpret the value in your code.</p> </li> </ul>
        </note>
      operationId: POST_TagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  schemas:
    AttachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the group to attach the
                policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: AttachGroupPolicyRequest
      type: object
    AttachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the role to attach the
                policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyArn
      title: AttachRolePolicyRequest
      type: object
    AttachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                attach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM user to attach
                the policy to.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyArn
      title: AttachUserPolicyRequest
      type: object
    ConcurrentModificationException: {}
    CreatePolicyRequest:
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: >-
                <p>A friendly description of the policy.</p> <p>Typically used
                to store information about the permissions defined in the
                policy. For example, "Grants access to production DynamoDB
                tables."</p> <p>The policy description is immutable. After a
                value is assigned, it cannot be changed.</p>
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path for the policy.</p> <p>For more information about
                paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This
                parameter is optional. If it is not included, it defaults to a
                slash (/).</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.</p> <note> <p>You
                cannot use an asterisk (*) in the path name.</p> </note>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The JSON policy document that you want to use as the content
                for the new policy.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The maximum length of the
                policy document that you can pass in this operation, including
                whitespace, is listed below. To view the maximum character
                counts of a managed policy with no whitespaces, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM
                and STS character quotas</a>.</p> <p>To learn more about JSON
                policy grammar, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar
                of the IAM JSON policy language</a> in the <i>IAM User
                Guide</i>. </p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The friendly name of the policy.</p> <p>IAM user, group,
                role, and policy names must be unique within the account. Names
                are not distinguished by case. For example, you cannot create
                resources named both "MyResource" and "myresource".</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                <p>A list of tags that you want to attach to the new IAM
                customer managed policy. Each tag consists of a key name and an
                associated value. For more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If
                any one of the tags is invalid or if you exceed the allowed
                maximum number of tags, then the entire request fails and the
                resource is not created.</p> </note>
      required:
        - PolicyName
        - PolicyDocument
      title: CreatePolicyRequest
      type: object
    CreatePolicyResponse:
      description: 'Contains the response to a successful <a>CreatePolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the new policy.
      type: object
    DeleteConflictException: {}
    DeleteGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the group that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name identifying the policy document to delete.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
      title: DeleteGroupPolicyRequest
      type: object
    DeletePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                delete.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicyArn
      title: DeletePolicyRequest
      type: object
    DeleteRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the inline policy to delete from the specified
                IAM role.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the role that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
      title: DeleteRolePolicyRequest
      type: object
    DeleteUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name identifying the policy document to delete.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name (friendly name, not ARN) identifying the user that
                the policy is embedded in.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
      title: DeleteUserPolicyRequest
      type: object
    DetachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM group to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: DetachGroupPolicyRequest
      type: object
    DetachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM role to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyArn
      title: DetachRolePolicyRequest
      type: object
    DetachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the IAM policy you want to
                detach.</p> <p>For more information about ARNs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name (friendly name, not ARN) of the IAM user to detach
                the policy from.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyArn
      title: DetachUserPolicyRequest
      type: object
    EntityAlreadyExistsException: {}
    GetGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group the policy is associated with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
      title: GetGroupPolicyRequest
      type: object
    GetGroupPolicyResponse:
      description: 'Contains the response to a successful <a>GetGroupPolicy</a> request. '
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The group the policy is associated with.
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      type: object
    GetPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The Amazon Resource Name (ARN) of the managed policy that you
                want information about.</p> <p>For more information about ARNs,
                see <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
                Resource Names (ARNs)</a> in the <i>Amazon Web Services General
                Reference</i>.</p>
      required:
        - PolicyArn
      title: GetPolicyRequest
      type: object
    GetPolicyResponse:
      description: 'Contains the response to a successful <a>GetPolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the policy.
      type: object
    GetRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role associated with the policy.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
      title: GetRolePolicyRequest
      type: object
    GetRolePolicyResponse:
      description: 'Contains the response to a successful <a>GetRolePolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The role the policy is associated with.
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      type: object
    GetUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document to get.</p> <p>This parameter
                allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user who the policy is associated with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
      title: GetUserPolicyRequest
      type: object
    GetUserPolicyResponse:
      description: 'Contains the response to a successful <a>GetUserPolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>IAM stores policies in JSON
                format. However, resources that were created using
                CloudFormation templates can be formatted in YAML.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: The user the policy is associated with.
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      type: object
    InvalidInputException: {}
    LimitExceededException: {}
    ListGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
      required:
        - GroupName
      title: ListGroupPoliciesRequest
      type: object
    ListGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListGroupPolicies</a> request. '
      example:
        PolicyNames:
          - AdminRoot
          - KeyPolicy
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: >-
                <p>A list of policy names.</p> <p>This parameter allows (through
                its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>)
                a string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - PolicyNames
      type: object
    ListPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        OnlyAttached:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>A flag to filter the results to only the attached
                policies.</p> <p>When <code>OnlyAttached</code> is
                <code>true</code>, the returned list contains only the policies
                that are attached to an IAM user, group, or role. When
                <code>OnlyAttached</code> is <code>false</code>, or when the
                parameter is not included, all policies are returned.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                The path prefix for filtering the results. This parameter is
                optional. If it is not included, it defaults to a slash (/),
                listing all policies. This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of either a forward slash (/) by
                itself or a string that must begin and end with forward slashes.
                In addition, it can contain any ASCII character from the !
                (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters,
                digits, and upper and lowercased letters.
        PolicyUsageFilter:
          allOf:
            - $ref: '#/components/schemas/PolicyUsageType'
            - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
        Scope:
          allOf:
            - $ref: '#/components/schemas/policyScopeType'
            - description: >-
                <p>The scope to use for filtering the results.</p> <p>To list
                only Amazon Web Services managed policies, set
                <code>Scope</code> to <code>AWS</code>. To list only the
                customer managed policies in your Amazon Web Services account,
                set <code>Scope</code> to <code>Local</code>.</p> <p>This
                parameter is optional. If it is not included, or if it is set to
                <code>All</code>, all policies are returned.</p>
      title: ListPoliciesRequest
      type: object
    ListPoliciesResponse:
      description: 'Contains the response to a successful <a>ListPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        Policies:
          allOf:
            - $ref: '#/components/schemas/policyListType'
            - description: A list of policies.
      type: object
    ListRolePoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
      title: ListRolePoliciesRequest
      type: object
    ListRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListRolePolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    ListUserPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: >-
                Use this parameter only when paginating results and only after
                you receive a response indicating that the results are
                truncated. Set it to the value of the <code>Marker</code>
                element in the response that you received to indicate where the
                next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum
                number of items you want in the response. If additional items
                exist beyond the maximum you specify, the
                <code>IsTruncated</code> response element is
                <code>true</code>.</p> <p>If you do not include this parameter,
                the number of items defaults to 100. Note that IAM might return
                fewer results, even when there are more results available. In
                that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to
                include in the subsequent call that tells the service where to
                continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user to list policies for.</p> <p>This
                parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
      title: ListUserPoliciesRequest
      type: object
    ListUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListUserPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                A flag that indicates whether there are more items to return. If
                your results were truncated, you can make a subsequent
                pagination request using the <code>Marker</code> request
                parameter to retrieve more items. Note that IAM might return
                fewer than the <code>MaxItems</code> number of results even when
                there are more results available. We recommend that you check
                <code>IsTruncated</code> after every call to ensure that you
                receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: >-
                When <code>IsTruncated</code> is <code>true</code>, this element
                is present and contains the value to use for the
                <code>Marker</code> parameter in a subsequent pagination
                request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    MalformedPolicyDocumentException: {}
    NoSuchEntityException: {}
    Policy:
      description: >-
        <p>Contains information about a managed policy.</p> <p>This data type is
        used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>,
        and <a>ListPolicies</a> operations. </p> <p>For more information about
        managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed
        policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                The number of entities (users, groups, and roles) that the
                policy is attached to.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                The identifier for the version of the policy that is set as the
                default version.
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: >-
                <p>A friendly description of the policy.</p> <p>This element is
                included in the response to the <a>GetPolicy</a> operation. It
                is not included in the response to the <a>ListPolicies</a>
                operation. </p>
        IsAttachable:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                Specifies whether the policy can be attached to an IAM user,
                group, or role.
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path to the policy.</p> <p>For more information about
                paths, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: >-
                <p>The number of entities (users and roles) for which the policy
                is used to set the permissions boundary. </p> <p>For more
                information about permissions boundaries, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
                boundaries for IAM identities </a> in the <i>IAM User
                Guide</i>.</p>
        PolicyId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: >-
                <p>The stable and unique string identifying the policy.</p>
                <p>For more information about IDs, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
                identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name (not ARN) identifying the policy.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                A list of tags that are attached to the instance profile. For
                more information about tagging, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
                IAM resources</a> in the <i>IAM User Guide</i>.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: >-
                <p>The date and time, in <a
                href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
                format</a>, when the policy was last updated.</p> <p>When a
                policy has only one version, this field contains the date and
                time when the policy was created. When a policy has more than
                one version, this field contains the date and time when the most
                recent policy version was created.</p>
      type: object
    PolicyNotAttachableException: {}
    PolicyUsageType:
      description: >-
        <p>The policy usage type that indicates whether the policy is used as a
        permissions policy or as the permissions boundary for an entity.</p>
        <p>For more information about permissions boundaries, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions
        boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      enum:
        - PermissionsPolicy
        - PermissionsBoundary
      type: string
    PutGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: >-
                <p>The name of the group to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-.</p>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to = IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      title: PutGroupPolicyRequest
      type: object
    PutRolePolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: >-
                <p>The name of the role to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      title: PutRolePolicyRequest
      type: object
    PutUserPolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON
                format in IAM. However, for CloudFormation templates formatted
                in YAML, you can provide the policy in JSON or YAML format.
                CloudFormation always converts a YAML policy to JSON format
                before submitting it to IAM.</p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to
                validate this parameter is a string of characters consisting of
                the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through
                the end of the ASCII character range</p> </li> <li> <p>The
                printable characters in the Basic Latin and Latin-1 Supplement
                character set (through <code>\u00FF</code>)</p> </li> <li>
                <p>The special characters tab (<code>\u0009</code>), line feed
                (<code>\u000A</code>), and carriage return
                (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: >-
                <p>The name of the policy document.</p> <p>This parameter allows
                (through its <a href="http://wikipedia.org/wiki/regex">regex
                pattern</a>) a string of characters consisting of upper and
                lowercase alphanumeric characters with no spaces. You can also
                include any of the following characters: _+=,.@-</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: >-
                <p>The name of the user to associate the policy with.</p>
                <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      title: PutUserPolicyRequest
      type: object
    ServiceFailureException: {}
    Tag:
      description: >-
        A structure that represents user-provided metadata that can be
        associated with an IAM resource. For more information about tagging, see
        <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging
        IAM resources</a> in the <i>IAM User Guide</i>.
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/tagKeyType'
            - description: >-
                The key name that can be used to look up or retrieve the
                associated value. For example, <code>Department</code> or
                <code>Cost Center</code> are common choices.
        Value:
          allOf:
            - $ref: '#/components/schemas/tagValueType'
            - description: >-
                <p>The value associated with this tag. For example, tags with a
                key name of <code>Department</code> could have values such as
                <code>Human Resources</code>, <code>Accounting</code>, and
                <code>Support</code>. Tags with a key name of <code>Cost
                Center</code> might have values that consist of the number
                associated with the different cost centers in your company.
                Typically, many resources have tags with the same key name but
                with different values.</p> <note> <p>Amazon Web Services always
                interprets the tag <code>Value</code> as a single string. If you
                need to store an array, you can store comma-separated values in
                the string. However, you must interpret the value in your
                code.</p> </note>
      required:
        - Key
        - Value
      type: object
    TagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of the IAM customer managed policy to which you want
                to add tags.</p> <p>This parameter allows (through its <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: >-
                The list of tags that you want to attach to the IAM customer
                managed policy. Each tag consists of a key name and an
                associated value.
      required:
        - PolicyArn
        - Tags
      title: TagPolicyRequest
      type: object
    UnmodifiableEntityException: {}
    UntagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of the IAM customer managed policy from which you
                want to remove tags.</p> <p>This parameter allows (through its
                <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a
                string of characters consisting of upper and lowercase
                alphanumeric characters with no spaces. You can also include any
                of the following characters: _+=,.@-</p>
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/tagKeyListType'
            - description: >-
                A list of key names as a simple array of strings. The tags with
                matching keys are removed from the specified policy.
      required:
        - PolicyArn
        - TagKeys
      title: UntagPolicyRequest
      type: object
    arnType:
      description: >-
        <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for
        Amazon Web Services resources.</p> <p>For more information about ARNs,
        go to <a
        href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
        Resource Names (ARNs)</a> in the <i>Amazon Web Services General
        Reference</i>. </p>
      maxLength: 2048
      minLength: 20
      type: string
    attachmentCountType:
      type: integer
    booleanType:
      type: boolean
    dateType:
      format: date-time
      type: string
    existingUserNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    groupNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    idType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    markerType:
      maxLength: 320
      minLength: 1
      pattern: '[\u0020-\u00FF]+'
      type: string
    maxItemsType:
      maximum: 1000
      minimum: 1
      type: integer
    policyDescriptionType:
      maxLength: 1000
      type: string
    policyDocumentType:
      maxLength: 131072
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    policyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Policy'
          - xml:
              name: member
      type: array
    policyNameListType:
      description: >-
        <p>Contains a list of policy names.</p> <p>This data type is used as a
        response element in the <a>ListPolicies</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/policyNameType'
          - xml:
              name: member
      type: array
    policyNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    policyPathType:
      maxLength: 512
      minLength: 1
      pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
      type: string
    policyScopeType:
      enum:
        - All
        - AWS
        - Local
      type: string
    policyVersionIdType:
      pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
      type: string
    responseMarkerType:
      type: string
    roleNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    tagKeyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/tagKeyType'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagKeyType:
      maxLength: 128
      minLength: 1
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]+'
      type: string
    tagListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagValueType:
      maxLength: 256
      minLength: 0
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]*'
      type: string
    userNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
  x-stackQL-resources:
    user_policies:
      id: aws.iam.user_policies
      x-cfn-schema-name: GetUserPolicyResponse
      x-example-where-clause: "WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND UserName = '<UserName>' AND PolicyName = '<PolicyName>'"
      x-type: custom
      methods:
        attach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=AttachUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        delete:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DeleteUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        detach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DetachUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetUserPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListUserPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListUserPoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
        put:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=PutUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: user_policies
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/user_policies/methods/delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/user_policies/methods/get'
        - $ref: '#/components/x-stackQL-resources/user_policies/methods/list'
        update: 
        - $ref: '#/components/x-stackQL-resources/user_policies/methods/put'
      title: user_policies
    group_policies:
      id: aws.iam.group_policies
      x-cfn-schema-name: GetGroupPolicyResponse
      x-example-where-clause: "WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND GroupName = '<GroupName>' AND PolicyName = '<PolicyName>'"      
      x-type: custom
      methods:
        attach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=AttachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        delete:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DeleteGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        detach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DetachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetGroupPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListGroupPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListGroupPoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
        put:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=PutGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: group_policies
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/group_policies/methods/delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/group_policies/methods/get'
        - $ref: '#/components/x-stackQL-resources/group_policies/methods/list'
        update:
        - $ref: '#/components/x-stackQL-resources/group_policies/methods/put'
      title: group_policies
    policies:
      id: aws.iam.policies
      x-cfn-schema-name: GetPolicyResponse
      x-example-where-clause: "WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND PolicyArn = '<PolicyArn>'"
      x-type: custom      
      methods:
        create:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=CreatePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        delete:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DeletePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListPoliciesResult/Policies/member
            openAPIDocKey: '200'
        tag:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=TagPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        untag:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=UntagPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: policies
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
        insert:
        - $ref: '#/components/x-stackQL-resources/policies/methods/create'
        select:
        - $ref: '#/components/x-stackQL-resources/policies/methods/get'
        - $ref: '#/components/x-stackQL-resources/policies/methods/list'
        update: []
      title: policies
    role_policies:
      id: aws.iam.role_policies
      x-cfn-schema-name: GetRolePolicyResponse
      x-example-where-clause: "WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND RoleName = '<RoleName>' AND PolicyName = '<PolicyName>'"      
      x-type: custom      
      methods:
        attach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=AttachRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        delete:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DeleteRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        detach:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=DetachRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetRolePolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListRolePolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListRolePoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
        put:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=PutRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: role_policies
      sqlVerbs:
        delete:
        - $ref: '#/components/x-stackQL-resources/role_policies/methods/delete'
        insert: []
        select:
        - $ref: '#/components/x-stackQL-resources/role_policies/methods/get'
        - $ref: '#/components/x-stackQL-resources/role_policies/methods/list'
        update:
        - $ref: '#/components/x-stackQL-resources/role_policies/methods/put'
      title: role_policies
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
  requestTranslate:
    algorithm: drop_double_underscore_params