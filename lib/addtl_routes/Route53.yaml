openapi: 3.0.0
info:
  title: Route53
  description: Additional stackql resources for Route53
  version: 1.0.0
paths:
  "/2013-04-01/hostedzone/{Id}/rrset/?__nativeEndpoint=true":
    post:
      operationId: ChangeResourceRecordSets
      description: "<p>Creates, changes, or deletes a resource record set, which contains authoritative DNS information for a specified domain name or subdomain name. For example, you can use <code>ChangeResourceRecordSets</code> to create a resource record set that routes traffic for test.example.com to a web server that has an IP address of 192.0.2.44.</p> <p> <b>Deleting Resource Record Sets</b> </p> <p>To delete a resource record set, you must specify all the same values that you specified when you created it.</p> <p> <b>Change Batches and Transactional Changes</b> </p> <p>The request body must include a document with a <code>ChangeResourceRecordSetsRequest</code> element. The request body contains a list of change items, known as a change batch. Change batches are considered transactional changes. Route 53 validates the changes in the request and then either makes all or none of the changes in the change batch request. This ensures that DNS routing isn't adversely affected by partial changes to the resource record sets in a hosted zone. </p> <p>For example, suppose a change batch request contains two changes: it deletes the <code>CNAME</code> resource record set for www.example.com and creates an alias resource record set for www.example.com. If validation for both records succeeds, Route 53 deletes the first resource record set and creates the second resource record set in a single operation. If validation for either the <code>DELETE</code> or the <code>CREATE</code> action fails, then the request is canceled, and the original <code>CNAME</code> record continues to exist.</p> <note> <p>If you try to delete the same resource record set more than once in a single change batch, Route 53 returns an <code>InvalidChangeBatch</code> error.</p> </note> <p> <b>Traffic Flow</b> </p> <p>To create resource record sets for complex routing configurations, use either the traffic flow visual editor in the Route 53 console or the API actions for traffic policies and traffic policy instances. Save the configuration as a traffic policy, then associate the traffic policy with one or more domain names (such as example.com) or subdomain names (such as www.example.com), in the same hosted zone or in multiple hosted zones. You can roll back the updates if the new configuration isn't performing as expected. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html\">Using Traffic Flow to Route DNS Traffic</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Create, Delete, and Upsert</b> </p> <p>Use <code>ChangeResourceRecordsSetsRequest</code> to perform the following actions:</p> <ul> <li> <p> <code>CREATE</code>: Creates a resource record set that has the specified values.</p> </li> <li> <p> <code>DELETE</code>: Deletes an existing resource record set that has the specified values.</p> </li> <li> <p> <code>UPSERT</code>: If a resource set exists Route 53 updates it with the values in the request. </p> </li> </ul> <p> <b>Syntaxes for Creating, Updating, and Deleting Resource Record Sets</b> </p> <p>The syntax for a request depends on the type of resource record set that you want to create, delete, or update, such as weighted, alias, or failover. The XML elements in your request must appear in the order listed in the syntax. </p> <p>For an example for each type of resource record set, see \"Examples.\"</p> <p>Don't refer to the syntax in the \"Parameter Syntax\" section, which includes all of the elements for every kind of resource record set that you can create, delete, or update by using <code>ChangeResourceRecordSets</code>. </p> <p> <b>Change Propagation to Route 53 DNS Servers</b> </p> <p>When you submit a <code>ChangeResourceRecordSets</code> request, Route 53 propagates your changes to all of the Route 53 authoritative DNS servers. While your changes are propagating, <code>GetChange</code> returns a status of <code>PENDING</code>. When propagation is complete, <code>GetChange</code> returns a status of <code>INSYNC</code>. Changes generally propagate to all Route 53 name servers within 60 seconds. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetChange.html\">GetChange</a>.</p> <p> <b>Limits on ChangeResourceRecordSets Requests</b> </p> <p>For information about the limits on a <code>ChangeResourceRecordSets</code> request, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html\">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeResourceRecordSetsResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "482":
          description: InvalidChangeBatch
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidChangeBatch"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "484":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that contains the resource record sets that you want to change.
          schema:
            type: string
            maxLength: 32
        - in: header
          name: region
          required: false
          schema:
            default: us-east-1
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              xml:
                name: ChangeResourceRecordSetsRequest
              type: object
              required:
                - ChangeBatch
              properties:
                ChangeBatch:
                  description: The information for a change request.
                  type: object
                  xml:
                    name: ChangeBatch
                  properties:
                    Comment:
                      $ref: "#/components/schemas/ResourceDescription"
                    Changes:
                      $ref: "#/components/schemas/Changes"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzone/{Id}/rrset?__nativeEndpoint=true":
    get:
      operationId: ListResourceRecordSets
      description: "<p>Lists the resource record sets in a specified hosted zone.</p> <p> <code>ListResourceRecordSets</code> returns up to 300 resource record sets at a time in ASCII order, beginning at a position specified by the <code>name</code> and <code>type</code> elements.</p> <p> <b>Sort order</b> </p> <p> <code>ListResourceRecordSets</code> sorts results first by DNS name with the labels reversed, for example:</p> <p> <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change the sort order when the record name contains characters that appear before <code>.</code> (decimal 46) in the ASCII table. These characters include the following: <code>! \" # $ % &amp; ' ( ) * + , -</code> </p> <p>When multiple records have the same DNS name, <code>ListResourceRecordSets</code> sorts results by the record type.</p> <p> <b>Specifying where to start listing records</b> </p> <p>You can use the name and type elements to specify the resource record set that the list begins with:</p> <dl> <dt>If you do not specify Name or Type</dt> <dd> <p>The results begin with the first resource record set that the hosted zone contains.</p> </dd> <dt>If you specify Name but not Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>.</p> </dd> <dt>If you specify Type but not Name</dt> <dd> <p>Amazon Route 53 returns the <code>InvalidInput</code> error.</p> </dd> <dt>If you specify both Name and Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>, and whose type is greater than or equal to <code>Type</code>.</p> </dd> </dl> <p> <b>Resource record sets that are PENDING</b> </p> <p>This action returns the most current version of the records. This includes records that are <code>PENDING</code>, and that are not yet available on all Route 53 DNS servers.</p> <p> <b>Changing resource record sets</b> </p> <p>To ensure that you get an accurate listing of the resource record sets for a hosted zone at a point in time, do not submit a <code>ChangeResourceRecordSets</code> request while you're paging through the results of a <code>ListResourceRecordSets</code> request. If you do, some pages may display results without the latest changes while other pages display results with the latest changes.</p> <p> <b>Displaying the next page of results</b> </p> <p>If a <code>ListResourceRecordSets</code> command returns more than one page of results, the value of <code>IsTruncated</code> is <code>true</code>. To display the next page of results, get the values of <code>NextRecordName</code>, <code>NextRecordType</code>, and <code>NextRecordIdentifier</code> (if any) from the response. Then submit another <code>ListResourceRecordSets</code> request, and specify those values for <code>StartRecordName</code>, <code>StartRecordType</code>, and <code>StartRecordIdentifier</code>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListResourceRecordSetsResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that contains the resource record sets that you want to list.
          schema:
            type: string
            maxLength: 32
        - name: name
          in: query
          required: false
          description: The first name in the lexicographic ordering of resource record sets that you want to list. If the specified record name doesn't exist, the results begin with the first resource record set that has a name greater than the value of <code>name</code>.
          schema:
            type: string
            maxLength: 1024
        - name: type
          in: query
          required: false
          description: "<p>The type of resource record set to begin the record listing from.</p> <p>Valid values for basic resource record sets: <code>A</code> | <code>AAAA</code> | <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p> <p>Values for weighted, latency, geolocation, and failover resource record sets: <code>A</code> | <code>AAAA</code> | <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p> <p>Values for alias resource record sets: </p> <ul> <li> <p> <b>API Gateway custom regional API or edge-optimized API</b>: A</p> </li> <li> <p> <b>CloudFront distribution</b>: A or AAAA</p> </li> <li> <p> <b>Elastic Beanstalk environment that has a regionalized subdomain</b>: A</p> </li> <li> <p> <b>Elastic Load Balancing load balancer</b>: A | AAAA</p> </li> <li> <p> <b>S3 bucket</b>: A</p> </li> <li> <p> <b>VPC interface VPC endpoint</b>: A</p> </li> <li> <p> <b>Another resource record set in this hosted zone:</b> The type of the resource record set that the alias references.</p> </li> </ul> <p>Constraint: Specifying <code>type</code> without specifying <code>name</code> returns an <code>InvalidInput</code> error.</p>"
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
              - DS
        - name: identifier
          in: query
          required: false
          description: " <i>Resource record sets that have a routing policy other than simple:</i> If results were truncated for a given DNS name and type, specify the value of <code>NextRecordIdentifier</code> from the previous response to get the next resource record set that has the current DNS name and type."
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: maxitems
          in: query
          required: false
          description: (Optional) The maximum number of resource records sets to include in the response body for this request. If the response includes more than <code>maxitems</code> resource record sets, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of the <code>NextRecordName</code> and <code>NextRecordType</code> elements in the response identify the first resource record set in the next group of <code>maxitems</code> resource record sets.
          schema:
            type: string
        - name: MaxItems
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: StartRecordName
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: StartRecordType
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: StartRecordIdentifier
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: region
          in: header
          schema:
            type: string
            default: us-east-1
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  x-stackQL-resources:
    resource_record_sets:
      name: resource_record_sets
      x-cfn-schema-name: ResourceRecordSet
      x-example-where-clause: "WHERE region = 'us-east-1' AND Id = '<HostedZoneId>'"
      x-type: custom
      methods:
        create_record_set:
          serviceName: route53
          operation:
            $ref: '#/paths/~12013-04-01~1hostedzone~1{Id}~1rrset~1?__nativeEndpoint=true/post'
          request:
            mediaType: text/xml
            xmlRootAnnotation: 'xmlns="https://route53.amazonaws.com/doc/2013-04-01/"'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        list_record_sets:
          serviceName: route53
          operation:
            $ref: '#/paths/~12013-04-01~1hostedzone~1{Id}~1rrset?__nativeEndpoint=true/get'
          response:
            objectKey: /*/ResourceRecordSets/ResourceRecordSet
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.route53_api.resource_record_sets
      sqlVerbs:
        delete: []
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/create_record_set'
            reqParams: data__ChangeBatch, Id, region
        select:
          - $ref: '#/components/x-stackQL-resources/resource_record_sets/methods/list_record_sets'
            reqParams: Id
        update: []
      title: resource_record_sets
  schemas:
    AliasHealthEnabled:
      type: boolean
    AliasTarget:
      type: object
      required:
        - HostedZoneId
        - DNSName
        - EvaluateTargetHealth
      properties:
        HostedZoneId:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: >-
                <p> <i>Alias resource records sets only</i>: The value used
                depends on where you want to route traffic:</p> <dl> <dt>Amazon
                API Gateway custom regional APIs and edge-optimized APIs</dt>
                <dd> <p>Specify the hosted zone ID for your API. You can get the
                applicable value using the CLI command <a
                href="https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html">get-domain-names</a>:</p>
                <ul> <li> <p>For regional APIs, specify the value of
                <code>regionalHostedZoneId</code>.</p> </li> <li> <p>For
                edge-optimized APIs, specify the value of
                <code>distributionHostedZoneId</code>.</p> </li> </ul> </dd>
                <dt>Amazon Virtual Private Cloud interface VPC endpoint</dt>
                <dd> <p>Specify the hosted zone ID for your interface endpoint.
                You can get the value of <code>HostedZoneId</code> using the CLI
                command <a
                href="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html">describe-vpc-endpoints</a>.</p>
                </dd> <dt>CloudFront distribution</dt> <dd> <p>Specify
                <code>Z2FDTNDATAQYW2</code>.</p> <note> <p>Alias resource record
                sets for CloudFront can't be created in a private zone.</p>
                </note> </dd> <dt>Elastic Beanstalk environment</dt> <dd>
                <p>Specify the hosted zone ID for the region that you created
                the environment in. The environment must have a regionalized
                subdomain. For a list of regions and the corresponding hosted
                zone IDs, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/elasticbeanstalk.html">Elastic
                Beanstalk endpoints and quotas</a> in the the <i>Amazon Web
                Services General Reference</i>.</p> </dd> <dt>ELB load
                balancer</dt> <dd> <p>Specify the value of the hosted zone ID
                for the load balancer. Use the following methods to get the
                hosted zone ID:</p> <ul> <li> <p> <a
                href="https://docs.aws.amazon.com/general/latest/gr/elb.html">Elastic
                Load Balancing endpoints and quotas</a> topic in the <i>Amazon
                Web Services General Reference</i>: Use the value that
                corresponds with the region that you created your load balancer
                in. Note that there are separate columns for Application and
                Classic Load Balancers and for Network Load Balancers.</p> </li>
                <li> <p> <b>Amazon Web Services Management Console</b>: Go to
                the Amazon EC2 page, choose <b>Load Balancers</b> in the
                navigation pane, select the load balancer, and get the value of
                the <b>Hosted zone</b> field on the <b>Description</b> tab.</p>
                </li> <li> <p> <b>Elastic Load Balancing API</b>: Use
                <code>DescribeLoadBalancers</code> to get the applicable value.
                For more information, see the applicable guide:</p> <ul> <li>
                <p>Classic Load Balancers: Use <a
                href="https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
                to get the value of <code>CanonicalHostedZoneNameId</code>.</p>
                </li> <li> <p>Application and Network Load Balancers: Use <a
                href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
                to get the value of <code>CanonicalHostedZoneId</code>.</p>
                </li> </ul> </li> <li> <p> <b>CLI</b>: Use
                <code>describe-load-balancers</code> to get the applicable
                value. For more information, see the applicable guide:</p> <ul>
                <li> <p>Classic Load Balancers: Use <a
                href="http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html">describe-load-balancers</a>
                to get the value of <code>CanonicalHostedZoneNameId</code>.</p>
                </li> <li> <p>Application and Network Load Balancers: Use <a
                href="http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html">describe-load-balancers</a>
                to get the value of <code>CanonicalHostedZoneId</code>.</p>
                </li> </ul> </li> </ul> </dd> <dt>Global Accelerator
                accelerator</dt> <dd> <p>Specify
                <code>Z2BJ6XQ5FK7U4H</code>.</p> </dd> <dt>An Amazon S3 bucket
                configured as a static website</dt> <dd> <p>Specify the hosted
                zone ID for the region that you created the bucket in. For more
                information about valid values, see the table <a
                href="https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_website_region_endpoints">Amazon
                S3 Website Endpoints</a> in the <i>Amazon Web Services General
                Reference</i>.</p> </dd> <dt>Another Route 53 resource record
                set in your hosted zone</dt> <dd> <p>Specify the hosted zone ID
                of your hosted zone. (An alias resource record set can't
                reference a resource record set in a different hosted zone.)</p>
                </dd> </dl>
        DNSName:
          allOf:
            - $ref: '#/components/schemas/DNSName'
            - description: >-
                <p> <i>Alias resource record sets only:</i> The value that you
                specify depends on where you want to route queries:</p> <dl>
                <dt>Amazon API Gateway custom regional APIs and edge-optimized
                APIs</dt> <dd> <p>Specify the applicable domain name for your
                API. You can get the applicable value using the CLI command <a
                href="https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-domain-names.html">get-domain-names</a>:</p>
                <ul> <li> <p>For regional APIs, specify the value of
                <code>regionalDomainName</code>.</p> </li> <li> <p>For
                edge-optimized APIs, specify the value of
                <code>distributionDomainName</code>. This is the name of the
                associated CloudFront distribution, such as
                <code>da1b2c3d4e5.cloudfront.net</code>.</p> </li> </ul> <note>
                <p>The name of the record that you're creating must match a
                custom domain name for your API, such as
                <code>api.example.com</code>.</p> </note> </dd> <dt>Amazon
                Virtual Private Cloud interface VPC endpoint</dt> <dd> <p>Enter
                the API endpoint for the interface endpoint, such as
                <code>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</code>.
                For edge-optimized APIs, this is the domain name for the
                corresponding CloudFront distribution. You can get the value of
                <code>DnsName</code> using the CLI command <a
                href="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpc-endpoints.html">describe-vpc-endpoints</a>.</p>
                </dd> <dt>CloudFront distribution</dt> <dd> <p>Specify the
                domain name that CloudFront assigned when you created your
                distribution.</p> <p>Your CloudFront distribution must include
                an alternate domain name that matches the name of the resource
                record set. For example, if the name of the resource record set
                is <i>acme.example.com</i>, your CloudFront distribution must
                include <i>acme.example.com</i> as one of the alternate domain
                names. For more information, see <a
                href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html">Using
                Alternate Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront
                Developer Guide</i>.</p> <p>You can't create a resource record
                set in a private hosted zone to route traffic to a CloudFront
                distribution.</p> <note> <p>For failover alias records, you
                can't specify a CloudFront distribution for both the primary and
                secondary records. A distribution must include an alternate
                domain name that matches the name of the record. However, the
                primary and secondary records have the same name, and you can't
                include the same alternate domain name in more than one
                distribution. </p> </note> </dd> <dt>Elastic Beanstalk
                environment</dt> <dd> <p>If the domain name for your Elastic
                Beanstalk environment includes the region that you deployed the
                environment in, you can create an alias record that routes
                traffic to the environment. For example, the domain name
                <code>my-environment.<i>us-west-2</i>.elasticbeanstalk.com</code>
                is a regionalized domain name. </p> <important> <p>For
                environments that were created before early 2016, the domain
                name doesn't include the region. To route traffic to these
                environments, you must create a CNAME record instead of an alias
                record. Note that you can't create a CNAME record for the root
                domain name. For example, if your domain name is example.com,
                you can create a record that routes traffic for acme.example.com
                to your Elastic Beanstalk environment, but you can't create a
                record that routes traffic for example.com to your Elastic
                Beanstalk environment.</p> </important> <p>For Elastic Beanstalk
                environments that have regionalized subdomains, specify the
                <code>CNAME</code> attribute for the environment. You can use
                the following methods to get the value of the CNAME
                attribute:</p> <ul> <li> <p> <i>Amazon Web Services Management
                Console</i>: For information about how to get the value by using
                the console, see <a
                href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html">Using
                Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
                Beanstalk Developer Guide</i>.</p> </li> <li> <p> <i>Elastic
                Beanstalk API</i>: Use the <code>DescribeEnvironments</code>
                action to get the value of the <code>CNAME</code> attribute. For
                more information, see <a
                href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeEnvironments.html">DescribeEnvironments</a>
                in the <i>Elastic Beanstalk API Reference</i>.</p> </li> <li>
                <p> <i>CLI</i>: Use the <code>describe-environments</code>
                command to get the value of the <code>CNAME</code> attribute.
                For more information, see <a
                href="https://docs.aws.amazon.com/cli/latest/reference/elasticbeanstalk/describe-environments.html">describe-environments</a>
                in the <i>CLI Command Reference</i>.</p> </li> </ul> </dd>
                <dt>ELB load balancer</dt> <dd> <p>Specify the DNS name that is
                associated with the load balancer. Get the DNS name by using the
                Amazon Web Services Management Console, the ELB API, or the CLI.
                </p> <ul> <li> <p> <b>Amazon Web Services Management
                Console</b>: Go to the EC2 page, choose <b>Load Balancers</b> in
                the navigation pane, choose the load balancer, choose the
                <b>Description</b> tab, and get the value of the <b>DNS name</b>
                field. </p> <p>If you're routing traffic to a Classic Load
                Balancer, get the value that begins with <b>dualstack</b>. If
                you're routing traffic to another type of load balancer, get the
                value that applies to the record type, A or AAAA.</p> </li> <li>
                <p> <b>Elastic Load Balancing API</b>: Use
                <code>DescribeLoadBalancers</code> to get the value of
                <code>DNSName</code>. For more information, see the applicable
                guide:</p> <ul> <li> <p>Classic Load Balancers: <a
                href="https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
                </p> </li> <li> <p>Application and Network Load Balancers: <a
                href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
                </p> </li> </ul> </li> <li> <p> <b>CLI</b>: Use
                <code>describe-load-balancers</code> to get the value of
                <code>DNSName</code>. For more information, see the applicable
                guide:</p> <ul> <li> <p>Classic Load Balancers: <a
                href="http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html">describe-load-balancers</a>
                </p> </li> <li> <p>Application and Network Load Balancers: <a
                href="http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html">describe-load-balancers</a>
                </p> </li> </ul> </li> </ul> </dd> <dt>Global Accelerator
                accelerator</dt> <dd> <p>Specify the DNS name for your
                accelerator:</p> <ul> <li> <p> <b>Global Accelerator API:</b> To
                get the DNS name, use <a
                href="https://docs.aws.amazon.com/global-accelerator/latest/api/API_DescribeAccelerator.html">DescribeAccelerator</a>.</p>
                </li> <li> <p> <b>CLI:</b> To get the DNS name, use <a
                href="https://docs.aws.amazon.com/cli/latest/reference/globalaccelerator/describe-accelerator.html">describe-accelerator</a>.</p>
                </li> </ul> </dd> <dt>Amazon S3 bucket that is configured as a
                static website</dt> <dd> <p>Specify the domain name of the
                Amazon S3 website endpoint that you created the bucket in, for
                example, <code>s3-website.us-east-2.amazonaws.com</code>. For
                more information about valid values, see the table <a
                href="https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_website_region_endpoints">Amazon
                S3 Website Endpoints</a> in the <i>Amazon Web Services General
                Reference</i>. For more information about using S3 buckets for
                websites, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/getting-started.html">Getting
                Started with Amazon Route 53</a> in the <i>Amazon Route 53
                Developer Guide.</i> </p> </dd> <dt>Another Route 53 resource
                record set</dt> <dd> <p>Specify the value of the
                <code>Name</code> element for a resource record set in the
                current hosted zone.</p> <note> <p>If you're creating an alias
                record that has the same name as the hosted zone (known as the
                zone apex), you can't specify the domain name for a record for
                which the value of <code>Type</code> is <code>CNAME</code>. This
                is because the alias record must have the same type as the
                record that you're routing traffic to, and creating a CNAME
                record for the zone apex isn't supported even for an alias
                record.</p> </note> </dd> </dl>
        EvaluateTargetHealth:
          allOf:
            - $ref: '#/components/schemas/AliasHealthEnabled'
            - description: >-
                <p> <i>Applies only to alias, failover alias, geolocation alias,
                latency alias, and weighted alias resource record sets:</i> When
                <code>EvaluateTargetHealth</code> is <code>true</code>, an alias
                resource record set inherits the health of the referenced Amazon
                Web Services resource, such as an ELB load balancer or another
                resource record set in the hosted zone.</p> <p>Note the
                following:</p> <dl> <dt>CloudFront distributions</dt> <dd>
                <p>You can't set <code>EvaluateTargetHealth</code> to
                <code>true</code> when the alias target is a CloudFront
                distribution.</p> </dd> <dt>Elastic Beanstalk environments that
                have regionalized subdomains</dt> <dd> <p>If you specify an
                Elastic Beanstalk environment in <code>DNSName</code> and the
                environment contains an ELB load balancer, Elastic Load
                Balancing routes queries only to the healthy Amazon EC2
                instances that are registered with the load balancer. (An
                environment automatically contains an ELB load balancer if it
                includes more than one Amazon EC2 instance.) If you set
                <code>EvaluateTargetHealth</code> to <code>true</code> and
                either no Amazon EC2 instances are healthy or the load balancer
                itself is unhealthy, Route 53 routes queries to other available
                resources that are healthy, if any. </p> <p>If the environment
                contains a single Amazon EC2 instance, there are no special
                requirements.</p> </dd> <dt>ELB load balancers</dt> <dd>
                <p>Health checking behavior depends on the type of load
                balancer:</p> <ul> <li> <p> <b>Classic Load Balancers</b>: If
                you specify an ELB Classic Load Balancer in
                <code>DNSName</code>, Elastic Load Balancing routes queries only
                to the healthy Amazon EC2 instances that are registered with the
                load balancer. If you set <code>EvaluateTargetHealth</code> to
                <code>true</code> and either no EC2 instances are healthy or the
                load balancer itself is unhealthy, Route 53 routes queries to
                other resources.</p> </li> <li> <p> <b>Application and Network
                Load Balancers</b>: If you specify an ELB Application or Network
                Load Balancer and you set <code>EvaluateTargetHealth</code> to
                <code>true</code>, Route 53 routes queries to the load balancer
                based on the health of the target groups that are associated
                with the load balancer:</p> <ul> <li> <p>For an Application or
                Network Load Balancer to be considered healthy, every target
                group that contains targets must contain at least one healthy
                target. If any target group contains only unhealthy targets, the
                load balancer is considered unhealthy, and Route 53 routes
                queries to other resources.</p> </li> <li> <p>A target group
                that has no registered targets is considered unhealthy.</p>
                </li> </ul> </li> </ul> <note> <p>When you create a load
                balancer, you configure settings for Elastic Load Balancing
                health checks; they're not Route 53 health checks, but they
                perform a similar function. Do not create Route 53 health checks
                for the EC2 instances that you register with an ELB load
                balancer. </p> </note> </dd> <dt>S3 buckets</dt> <dd> <p>There
                are no special requirements for setting
                <code>EvaluateTargetHealth</code> to <code>true</code> when the
                alias target is an S3 bucket.</p> </dd> <dt>Other records in the
                same hosted zone</dt> <dd> <p>If the Amazon Web Services
                resource that you specify in <code>DNSName</code> is a record or
                a group of records (for example, a group of weighted records)
                but is not another alias record, we recommend that you associate
                a health check with all of the records in the alias target. For
                more information, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html#dns-failover-complex-configs-hc-omitting">What
                Happens When You Omit Health Checks?</a> in the <i>Amazon Route
                53 Developer Guide</i>.</p> </dd> </dl> <p>For more information
                and examples, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon
                Route 53 Health Checks and DNS Failover</a> in the <i>Amazon
                Route 53 Developer Guide</i>.</p>
      description: >-
        <p> <i>Alias resource record sets only:</i> Information about the Amazon
        Web Services resource, such as a CloudFront distribution or an Amazon S3
        bucket, that you want to route traffic to.</p> <p>When creating resource
        record sets for a private hosted zone, note the following:</p> <ul> <li>
        <p>For information about creating failover resource record sets in a
        private hosted zone, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
        Failover in a Private Hosted Zone</a>.</p> </li> </ul>
    Change:
      type: object
      required:
        - Action
        - ResourceRecordSet
      properties:
        Action:
          allOf:
            - $ref: '#/components/schemas/ChangeAction'
            - description: >-
                <p>The action to perform:</p> <ul> <li> <p> <code>CREATE</code>:
                Creates a resource record set that has the specified values.</p>
                </li> <li> <p> <code>DELETE</code>: Deletes a existing resource
                record set.</p> <important> <p>To delete the resource record set
                that is associated with a traffic policy instance, use <a
                href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteTrafficPolicyInstance.html">DeleteTrafficPolicyInstance</a>.
                Amazon Route 53 will delete the resource record set
                automatically. If you delete the resource record set by using
                <code>ChangeResourceRecordSets</code>, Route 53 doesn't
                automatically delete the traffic policy instance, and you'll
                continue to be charged for it even though it's no longer in use.
                </p> </important> </li> <li> <p> <code>UPSERT</code>: If a
                resource record set doesn't already exist, Route 53 creates it.
                If a resource record set does exist, Route 53 updates it with
                the values in the request.</p> </li> </ul>
        ResourceRecordSet:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSet'
            - description: >-
                Information about the resource record set to create, delete, or
                update.
      description: The information for each resource record set that you want to change.
    ChangeAction:
      type: string
      enum:
        - CREATE
        - DELETE
        - UPSERT
    ChangeInfo:
      type: object
      required:
        - Id
        - Status
        - SubmittedAt
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - description: >-
                This element contains an ID that you use when performing a <a
                href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetChange.html">GetChange</a>
                action to get detailed information about the change.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChangeStatus'
            - description: >-
                The current state of the request. <code>PENDING</code> indicates
                that this request has not yet been applied to all Amazon Route
                53 DNS servers.
        SubmittedAt:
          allOf:
            - $ref: '#/components/schemas/TimeStamp'
            - description: >-
                The date and time that the change request was submitted in <a
                href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601
                format</a> and Coordinated Universal Time (UTC). For example,
                the value <code>2017-03-27T17:48:16.751Z</code> represents March
                27, 2017 at 17:48:16.751 UTC.
        Comment:
          allOf:
            - $ref: '#/components/schemas/ResourceDescription'
            - description: A comment you can provide.
      description: >-
        A complex type that describes change information about changes made to
        your hosted zone.
    ChangeResourceRecordSetsResponse:
      type: object
      required:
        - ChangeInfo
      example:
        ChangeInfo:
          Comment: Geolocation alias configuration for example.com
          Id: /change/C2682N5HXP0BZ4
          Status: PENDING
          SubmittedAt: '2017-02-10T01:36:41.958Z'
      properties:
        ChangeInfo:
          allOf:
            - $ref: '#/components/schemas/ChangeInfo'
            - description: >-
                <p>A complex type that contains information about changes made
                to your hosted zone.</p> <p>This element contains an ID that you
                use when performing a <a
                href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetChange.html">GetChange</a>
                action to get detailed information about the change.</p>
      description: A complex type containing the response for the request.
    ChangeStatus:
      type: string
      enum:
        - PENDING
        - INSYNC
    Changes:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Change'
          - xml:
              name: Change
      minItems: 1
    CidrLocationNameDefaultAllowed:
      type: string
      pattern: '[0-9A-Za-z_\-\*]+'
      minLength: 1
      maxLength: 16
    CidrRoutingConfig:
      type: object
      required:
        - CollectionId
        - LocationName
      properties:
        CollectionId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - description: The CIDR collection ID.
        LocationName:
          allOf:
            - $ref: '#/components/schemas/CidrLocationNameDefaultAllowed'
            - description: The CIDR collection location name.
      description: >-
        <p>The object that is specified in resource record set object when you
        are linking a resource record set to a CIDR location.</p> <p>A
        <code>LocationName</code> with an asterisk “*” can be used to create a
        default CIDR record. <code>CollectionId</code> is still required for
        default record.</p>
    DNSName:
      type: string
      maxLength: 1024
    GeoLocation:
      type: object
      properties:
        ContinentCode:
          allOf:
            - $ref: '#/components/schemas/GeoLocationContinentCode'
            - description: >-
                <p>The two-letter code for the continent.</p> <p>Amazon Route 53
                supports the following continent codes:</p> <ul> <li> <p>
                <b>AF</b>: Africa</p> </li> <li> <p> <b>AN</b>: Antarctica</p>
                </li> <li> <p> <b>AS</b>: Asia</p> </li> <li> <p> <b>EU</b>:
                Europe</p> </li> <li> <p> <b>OC</b>: Oceania</p> </li> <li> <p>
                <b>NA</b>: North America</p> </li> <li> <p> <b>SA</b>: South
                America</p> </li> </ul> <p>Constraint: Specifying
                <code>ContinentCode</code> with either <code>CountryCode</code>
                or <code>SubdivisionCode</code> returns an
                <code>InvalidInput</code> error.</p>
        CountryCode:
          allOf:
            - $ref: '#/components/schemas/GeoLocationCountryCode'
            - description: >-
                <p>For geolocation resource record sets, the two-letter code for
                a country.</p> <p>Amazon Route 53 uses the two-letter country
                codes that are specified in <a
                href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
                standard 3166-1 alpha-2</a>.</p>
        SubdivisionCode:
          allOf:
            - $ref: '#/components/schemas/GeoLocationSubdivisionCode'
            - description: >-
                <p>For geolocation resource record sets, the two-letter code for
                a state of the United States. Route 53 doesn't support any other
                values for <code>SubdivisionCode</code>. For a list of state
                abbreviations, see <a
                href="https://pe.usps.com/text/pub28/28apb.htm">Appendix B:
                Two–Letter State and Possession Abbreviations</a> on the United
                States Postal Service website. </p> <p>If you specify
                <code>subdivisioncode</code>, you must also specify
                <code>US</code> for <code>CountryCode</code>. </p>
      description: A complex type that contains information about a geographic location.
    GeoLocationContinentCode:
      type: string
      minLength: 2
      maxLength: 2
    GeoLocationCountryCode:
      type: string
      minLength: 1
      maxLength: 2
    GeoLocationSubdivisionCode:
      type: string
      minLength: 1
      maxLength: 3
    HealthCheckId:
      type: string
      maxLength: 64
    InvalidChangeBatch: {}
    InvalidInput: {}
    ListResourceRecordSetsResponse:
      type: object
      required:
        - ResourceRecordSets
        - IsTruncated
        - MaxItems
      properties:
        ResourceRecordSets:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSets'
            - description: Information about multiple resource record sets.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/PageTruncated'
            - description: >-
                A flag that indicates whether more resource record sets remain
                to be listed. If your results were truncated, you can make a
                follow-up pagination request by using the
                <code>NextRecordName</code> element.
        NextRecordName:
          allOf:
            - $ref: '#/components/schemas/DNSName'
            - description: >-
                <p>If the results were truncated, the name of the next record in
                the list.</p> <p>This element is present only if
                <code>IsTruncated</code> is true. </p>
        NextRecordType:
          allOf:
            - $ref: '#/components/schemas/RRType'
            - description: >-
                <p>If the results were truncated, the type of the next record in
                the list.</p> <p>This element is present only if
                <code>IsTruncated</code> is true. </p>
        NextRecordIdentifier:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetIdentifier'
            - description: >-
                <p> <i>Resource record sets that have a routing policy other
                than simple:</i> If results were truncated for a given DNS name
                and type, the value of <code>SetIdentifier</code> for the next
                resource record set that has the current DNS name and type.</p>
                <p>For information about routing policies, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html">Choosing
                a Routing Policy</a> in the <i>Amazon Route 53 Developer
                Guide</i>.</p>
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/PageMaxItems'
            - description: The maximum number of records you requested.
      description: >-
        A complex type that contains list information for the resource record
        set.
    NoSuchHealthCheck: {}
    NoSuchHostedZone: {}
    PageMaxItems:
      type: string
    PageTruncated:
      type: boolean
    PriorRequestNotComplete: {}
    RData:
      type: string
      maxLength: 4000
    RRType:
      type: string
      enum:
        - SOA
        - A
        - TXT
        - NS
        - CNAME
        - MX
        - NAPTR
        - PTR
        - SRV
        - SPF
        - AAAA
        - CAA
        - DS
    ResourceDescription:
      type: string
      maxLength: 256
    ResourceId:
      type: string
      maxLength: 32
    ResourceRecord:
      type: object
      required:
        - Value
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/RData'
            - description: >-
                <p>The current or new DNS record value, not to exceed 4,000
                characters. In the case of a <code>DELETE</code> action, if the
                current value does not match the actual value, an error is
                returned. For descriptions about how to format
                <code>Value</code> for different record types, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html">Supported
                DNS Resource Record Types</a> in the <i>Amazon Route 53
                Developer Guide</i>.</p> <p>You can specify more than one value
                for all record types except <code>CNAME</code> and
                <code>SOA</code>. </p> <note> <p>If you're creating an alias
                resource record set, omit <code>Value</code>.</p> </note>
      description: >-
        <p>Information specific to the resource record.</p> <note> <p>If you're
        creating an alias resource record set, omit
        <code>ResourceRecord</code>.</p> </note>
    ResourceRecordSet:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/DNSName'
            - description: >-
                <p>For <code>ChangeResourceRecordSets</code> requests, the name
                of the record that you want to create, update, or delete. For
                <code>ListResourceRecordSets</code> responses, the name of a
                record in the specified hosted zone.</p> <p>
                <b>ChangeResourceRecordSets Only</b> </p> <p>Enter a fully
                qualified domain name, for example,
                <code>www.example.com</code>. You can optionally include a
                trailing dot. If you omit the trailing dot, Amazon Route 53
                assumes that the domain name that you specify is fully
                qualified. This means that Route 53 treats
                <code>www.example.com</code> (without a trailing dot) and
                <code>www.example.com.</code> (with a trailing dot) as
                identical.</p> <p>For information about how to specify
                characters other than <code>a-z</code>, <code>0-9</code>, and
                <code>-</code> (hyphen) and how to specify internationalized
                domain names, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS
                Domain Name Format</a> in the <i>Amazon Route 53 Developer
                Guide</i>.</p> <p>You can use the asterisk (*) wildcard to
                replace the leftmost label in a domain name, for example,
                <code>*.example.com</code>. Note the following:</p> <ul> <li>
                <p>The * must replace the entire label. For example, you can't
                specify <code>*prod.example.com</code> or
                <code>prod*.example.com</code>.</p> </li> <li> <p>The * can't
                replace any of the middle labels, for example,
                marketing.*.example.com.</p> </li> <li> <p>If you include * in
                any position other than the leftmost label in a domain name, DNS
                treats it as an * character (ASCII 42), not as a wildcard.</p>
                <important> <p>You can't use the * wildcard for resource records
                sets that have a type of NS.</p> </important> </li> </ul> <p>You
                can use the * wildcard as the leftmost label in a domain name,
                for example, <code>*.example.com</code>. You can't use an * for
                one of the middle labels, for example,
                <code>marketing.*.example.com</code>. In addition, the * must
                replace the entire label; for example, you can't specify
                <code>prod*.example.com</code>.</p>
        Type:
          allOf:
            - $ref: '#/components/schemas/RRType'
            - description: >-
                <p>The DNS record type. For information about different record
                types and how data is encoded for them, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html">Supported
                DNS Resource Record Types</a> in the <i>Amazon Route 53
                Developer Guide</i>.</p> <p>Valid values for basic resource
                record sets: <code>A</code> | <code>AAAA</code> |
                <code>CAA</code> | <code>CNAME</code> | <code>DS</code>
                |<code>MX</code> | <code>NAPTR</code> | <code>NS</code> |
                <code>PTR</code> | <code>SOA</code> | <code>SPF</code> |
                <code>SRV</code> | <code>TXT</code> </p> <p>Values for weighted,
                latency, geolocation, and failover resource record sets:
                <code>A</code> | <code>AAAA</code> | <code>CAA</code> |
                <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> |
                <code>PTR</code> | <code>SPF</code> | <code>SRV</code> |
                <code>TXT</code>. When creating a group of weighted, latency,
                geolocation, or failover resource record sets, specify the same
                value for all of the resource record sets in the group.</p>
                <p>Valid values for multivalue answer resource record sets:
                <code>A</code> | <code>AAAA</code> | <code>MX</code> |
                <code>NAPTR</code> | <code>PTR</code> | <code>SPF</code> |
                <code>SRV</code> | <code>TXT</code> </p> <note> <p>SPF records
                were formerly used to verify the identity of the sender of email
                messages. However, we no longer recommend that you create
                resource record sets for which the value of <code>Type</code> is
                <code>SPF</code>. RFC 7208, <i>Sender Policy Framework (SPF) for
                Authorizing Use of Domains in Email, Version 1</i>, has been
                updated to say, "...[I]ts existence and mechanism defined in
                [RFC4408] have led to some interoperability issues. Accordingly,
                its use is no longer appropriate for SPF version 1;
                implementations are not to use it." In RFC 7208, see section
                14.1, <a
                href="http://tools.ietf.org/html/rfc7208#section-14.1">The SPF
                DNS Record Type</a>.</p> </note> <p>Values for alias resource
                record sets:</p> <ul> <li> <p> <b>Amazon API Gateway custom
                regional APIs and edge-optimized APIs:</b> <code>A</code> </p>
                </li> <li> <p> <b>CloudFront distributions:</b> <code>A</code>
                </p> <p>If IPv6 is enabled for the distribution, create two
                resource record sets to route traffic to your distribution, one
                with a value of <code>A</code> and one with a value of
                <code>AAAA</code>. </p> </li> <li> <p> <b>Amazon API Gateway
                environment that has a regionalized subdomain</b>:
                <code>A</code> </p> </li> <li> <p> <b>ELB load balancers:</b>
                <code>A</code> | <code>AAAA</code> </p> </li> <li> <p> <b>Amazon
                S3 buckets:</b> <code>A</code> </p> </li> <li> <p> <b>Amazon
                Virtual Private Cloud interface VPC endpoints</b> <code>A</code>
                </p> </li> <li> <p> <b>Another resource record set in this
                hosted zone:</b> Specify the type of the resource record set
                that you're creating the alias for. All values are supported
                except <code>NS</code> and <code>SOA</code>.</p> <note> <p>If
                you're creating an alias record that has the same name as the
                hosted zone (known as the zone apex), you can't route traffic to
                a record for which the value of <code>Type</code> is
                <code>CNAME</code>. This is because the alias record must have
                the same type as the record you're routing traffic to, and
                creating a CNAME record for the zone apex isn't supported even
                for an alias record.</p> </note> </li> </ul>
        SetIdentifier:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetIdentifier'
            - description: >-
                <p> <i>Resource record sets that have a routing policy other
                than simple:</i> An identifier that differentiates among
                multiple resource record sets that have the same combination of
                name and type, such as multiple weighted resource record sets
                named acme.example.com that have a type of A. In a group of
                resource record sets that have the same name and type, the value
                of <code>SetIdentifier</code> must be unique for each resource
                record set. </p> <p>For information about routing policies, see
                <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html">Choosing
                a Routing Policy</a> in the <i>Amazon Route 53 Developer
                Guide</i>.</p>
        Weight:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetWeight'
            - description: >-
                <p> <i>Weighted resource record sets only:</i> Among resource
                record sets that have the same combination of DNS name and type,
                a value that determines the proportion of DNS queries that
                Amazon Route 53 responds to using the current resource record
                set. Route 53 calculates the sum of the weights for the resource
                record sets that have the same combination of DNS name and type.
                Route 53 then responds to queries based on the ratio of a
                resource's weight to the total. Note the following:</p> <ul>
                <li> <p>You must specify a value for the <code>Weight</code>
                element for every weighted resource record set.</p> </li> <li>
                <p>You can only specify one <code>ResourceRecord</code> per
                weighted resource record set.</p> </li> <li> <p>You can't create
                latency, failover, or geolocation resource record sets that have
                the same values for the <code>Name</code> and <code>Type</code>
                elements as weighted resource record sets.</p> </li> <li> <p>You
                can create a maximum of 100 weighted resource record sets that
                have the same values for the <code>Name</code> and
                <code>Type</code> elements.</p> </li> <li> <p>For weighted (but
                not weighted alias) resource record sets, if you set
                <code>Weight</code> to <code>0</code> for a resource record set,
                Route 53 never responds to queries with the applicable value for
                that resource record set. However, if you set
                <code>Weight</code> to <code>0</code> for all resource record
                sets that have the same combination of DNS name and type,
                traffic is routed to all resources with equal probability.</p>
                <p>The effect of setting <code>Weight</code> to <code>0</code>
                is different when you associate health checks with weighted
                resource record sets. For more information, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html">Options
                for Configuring Route 53 Active-Active and Active-Passive
                Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
                </li> </ul>
        Region:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetRegion'
            - description: >-
                <p> <i>Latency-based resource record sets only:</i> The Amazon
                EC2 Region where you created the resource that this resource
                record set refers to. The resource typically is an Amazon Web
                Services resource, such as an EC2 instance or an ELB load
                balancer, and is referred to by an IP address or a DNS domain
                name, depending on the record type.</p> <p>When Amazon Route 53
                receives a DNS query for a domain name and type for which you
                have created latency resource record sets, Route 53 selects the
                latency resource record set that has the lowest latency between
                the end user and the associated Amazon EC2 Region. Route 53 then
                returns the value that is associated with the selected resource
                record set.</p> <p>Note the following:</p> <ul> <li> <p>You can
                only specify one <code>ResourceRecord</code> per latency
                resource record set.</p> </li> <li> <p>You can only create one
                latency resource record set for each Amazon EC2 Region.</p>
                </li> <li> <p>You aren't required to create latency resource
                record sets for all Amazon EC2 Regions. Route 53 will choose the
                region with the best latency from among the regions that you
                create latency resource record sets for.</p> </li> <li> <p>You
                can't create non-latency resource record sets that have the same
                values for the <code>Name</code> and <code>Type</code> elements
                as latency resource record sets.</p> </li> </ul>
        GeoLocation:
          allOf:
            - $ref: '#/components/schemas/GeoLocation'
            - description: >-
                <p> <i>Geolocation resource record sets only:</i> A complex type
                that lets you control how Amazon Route 53 responds to DNS
                queries based on the geographic origin of the query. For
                example, if you want all queries from Africa to be routed to a
                web server with an IP address of <code>192.0.2.111</code>,
                create a resource record set with a <code>Type</code> of
                <code>A</code> and a <code>ContinentCode</code> of
                <code>AF</code>.</p> <note> <p>Although creating geolocation and
                geolocation alias resource record sets in a private hosted zone
                is allowed, it's not supported.</p> </note> <p>If you create
                separate resource record sets for overlapping geographic regions
                (for example, one resource record set for a continent and one
                for a country on the same continent), priority goes to the
                smallest geographic region. This allows you to route most
                queries for a continent to one resource and to route queries for
                a country on that continent to a different resource.</p> <p>You
                can't create two geolocation resource record sets that specify
                the same geographic location.</p> <p>The value <code>*</code> in
                the <code>CountryCode</code> element matches all geographic
                locations that aren't specified in other geolocation resource
                record sets that have the same values for the <code>Name</code>
                and <code>Type</code> elements.</p> <important> <p>Geolocation
                works by mapping IP addresses to locations. However, some IP
                addresses aren't mapped to geographic locations, so even if you
                create geolocation resource record sets that cover all seven
                continents, Route 53 will receive some DNS queries from
                locations that it can't identify. We recommend that you create a
                resource record set for which the value of
                <code>CountryCode</code> is <code>*</code>. Two groups of
                queries are routed to the resource that you specify in this
                record: queries that come from locations for which you haven't
                created geolocation resource record sets and queries from IP
                addresses that aren't mapped to a location. If you don't create
                a <code>*</code> resource record set, Route 53 returns a "no
                answer" response for queries from those locations.</p>
                </important> <p>You can't create non-geolocation resource record
                sets that have the same values for the <code>Name</code> and
                <code>Type</code> elements as geolocation resource record
                sets.</p>
        Failover:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetFailover'
            - description: >-
                <p> <i>Failover resource record sets only:</i> To configure
                failover, you add the <code>Failover</code> element to two
                resource record sets. For one resource record set, you specify
                <code>PRIMARY</code> as the value for <code>Failover</code>; for
                the other resource record set, you specify
                <code>SECONDARY</code>. In addition, you include the
                <code>HealthCheckId</code> element and specify the health check
                that you want Amazon Route 53 to perform for each resource
                record set.</p> <p>Except where noted, the following failover
                behaviors assume that you have included the
                <code>HealthCheckId</code> element in both resource record
                sets:</p> <ul> <li> <p>When the primary resource record set is
                healthy, Route 53 responds to DNS queries with the applicable
                value from the primary resource record set regardless of the
                health of the secondary resource record set.</p> </li> <li>
                <p>When the primary resource record set is unhealthy and the
                secondary resource record set is healthy, Route 53 responds to
                DNS queries with the applicable value from the secondary
                resource record set.</p> </li> <li> <p>When the secondary
                resource record set is unhealthy, Route 53 responds to DNS
                queries with the applicable value from the primary resource
                record set regardless of the health of the primary resource
                record set.</p> </li> <li> <p>If you omit the
                <code>HealthCheckId</code> element for the secondary resource
                record set, and if the primary resource record set is unhealthy,
                Route 53 always responds to DNS queries with the applicable
                value from the secondary resource record set. This is true
                regardless of the health of the associated endpoint.</p> </li>
                </ul> <p>You can't create non-failover resource record sets that
                have the same values for the <code>Name</code> and
                <code>Type</code> elements as failover resource record sets.</p>
                <p>For failover alias resource record sets, you must also
                include the <code>EvaluateTargetHealth</code> element and set
                the value to true.</p> <p>For more information about configuring
                failover for Route 53, see the following topics in the <i>Amazon
                Route 53 Developer Guide</i>: </p> <ul> <li> <p> <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Route
                53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
                Failover in a Private Hosted Zone</a> </p> </li> </ul>
        MultiValueAnswer:
          allOf:
            - $ref: '#/components/schemas/ResourceRecordSetMultiValueAnswer'
            - description: >-
                <p> <i>Multivalue answer resource record sets only</i>: To route
                traffic approximately randomly to multiple resources, such as
                web servers, create one multivalue answer record for each
                resource and specify <code>true</code> for
                <code>MultiValueAnswer</code>. Note the following:</p> <ul> <li>
                <p>If you associate a health check with a multivalue answer
                resource record set, Amazon Route 53 responds to DNS queries
                with the corresponding IP address only when the health check is
                healthy.</p> </li> <li> <p>If you don't associate a health check
                with a multivalue answer record, Route 53 always considers the
                record to be healthy.</p> </li> <li> <p>Route 53 responds to DNS
                queries with up to eight healthy records; if you have eight or
                fewer healthy records, Route 53 responds to all DNS queries with
                all the healthy records.</p> </li> <li> <p>If you have more than
                eight healthy records, Route 53 responds to different DNS
                resolvers with different combinations of healthy records.</p>
                </li> <li> <p>When all records are unhealthy, Route 53 responds
                to DNS queries with up to eight unhealthy records.</p> </li>
                <li> <p>If a resource becomes unavailable after a resolver
                caches a response, client software typically tries another of
                the IP addresses in the response.</p> </li> </ul> <p>You can't
                create multivalue answer alias records.</p>
        TTL:
          allOf:
            - $ref: '#/components/schemas/TTL'
            - description: >-
                <p>The resource record cache time to live (TTL), in seconds.
                Note the following:</p> <ul> <li> <p>If you're creating or
                updating an alias resource record set, omit <code>TTL</code>.
                Amazon Route 53 uses the value of <code>TTL</code> for the alias
                target. </p> </li> <li> <p>If you're associating this resource
                record set with a health check (if you're adding a
                <code>HealthCheckId</code> element), we recommend that you
                specify a <code>TTL</code> of 60 seconds or less so clients
                respond quickly to changes in health status.</p> </li> <li>
                <p>All of the resource record sets in a group of weighted
                resource record sets must have the same value for
                <code>TTL</code>.</p> </li> <li> <p>If a group of weighted
                resource record sets includes one or more weighted alias
                resource record sets for which the alias target is an ELB load
                balancer, we recommend that you specify a <code>TTL</code> of 60
                seconds for all of the non-alias weighted resource record sets
                that have the same name and type. Values other than 60 seconds
                (the TTL for load balancers) will change the effect of the
                values that you specify for <code>Weight</code>.</p> </li> </ul>
        ResourceRecords:
          allOf:
            - $ref: '#/components/schemas/ResourceRecords'
            - description: >-
                <p>Information about the resource records to act upon.</p>
                <note> <p>If you're creating an alias resource record set, omit
                <code>ResourceRecords</code>.</p> </note>
        AliasTarget:
          allOf:
            - $ref: '#/components/schemas/AliasTarget'
            - description: >-
                <p> <i>Alias resource record sets only:</i> Information about
                the Amazon Web Services resource, such as a CloudFront
                distribution or an Amazon S3 bucket, that you want to route
                traffic to. </p> <p>If you're creating resource records sets for
                a private hosted zone, note the following:</p> <ul> <li> <p>You
                can't create an alias resource record set in a private hosted
                zone to route traffic to a CloudFront distribution.</p> </li>
                <li> <p>For information about creating failover resource record
                sets in a private hosted zone, see <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
                Failover in a Private Hosted Zone</a> in the <i>Amazon Route 53
                Developer Guide</i>.</p> </li> </ul>
        HealthCheckId:
          allOf:
            - $ref: '#/components/schemas/HealthCheckId'
            - description: >-
                <p>If you want Amazon Route 53 to return this resource record
                set in response to a DNS query only when the status of a health
                check is healthy, include the <code>HealthCheckId</code> element
                and specify the ID of the applicable health check.</p> <p>Route
                53 determines whether a resource record set is healthy based on
                one of the following:</p> <ul> <li> <p>By periodically sending a
                request to the endpoint that is specified in the health
                check</p> </li> <li> <p>By aggregating the status of a specified
                group of health checks (calculated health checks)</p> </li> <li>
                <p>By determining the current state of a CloudWatch alarm
                (CloudWatch metric health checks)</p> </li> </ul> <important>
                <p>Route 53 doesn't check the health of the endpoint that is
                specified in the resource record set, for example, the endpoint
                specified by the IP address in the <code>Value</code> element.
                When you add a <code>HealthCheckId</code> element to a resource
                record set, Route 53 checks the health of the endpoint that you
                specified in the health check. </p> </important> <p>For more
                information, see the following topics in the <i>Amazon Route 53
                Developer Guide</i>:</p> <ul> <li> <p> <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
                Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
                </p> </li> <li> <p> <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Route
                53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a
                href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
                Failover in a Private Hosted Zone</a> </p> </li> </ul> <p>
                <b>When to Specify HealthCheckId</b> </p> <p>Specifying a value
                for <code>HealthCheckId</code> is useful only when Route 53 is
                choosing between two or more resource record sets to respond to
                a DNS query, and you want Route 53 to base the choice in part on
                the status of a health check. Configuring health checks makes
                sense only in the following configurations:</p> <ul> <li> <p>
                <b>Non-alias resource record sets</b>: You're checking the
                health of a group of non-alias resource record sets that have
                the same routing policy, name, and type (such as multiple
                weighted records named www.example.com with a type of A) and you
                specify health check IDs for all the resource record sets. </p>
                <p>If the health check status for a resource record set is
                healthy, Route 53 includes the record among the records that it
                responds to DNS queries with.</p> <p>If the health check status
                for a resource record set is unhealthy, Route 53 stops
                responding to DNS queries using the value for that resource
                record set.</p> <p>If the health check status for all resource
                record sets in the group is unhealthy, Route 53 considers all
                resource record sets in the group healthy and responds to DNS
                queries accordingly. </p> </li> <li> <p> <b>Alias resource
                record sets</b>: You specify the following settings:</p> <ul>
                <li> <p>You set <code>EvaluateTargetHealth</code> to true for an
                alias resource record set in a group of resource record sets
                that have the same routing policy, name, and type (such as
                multiple weighted records named www.example.com with a type of
                A). </p> </li> <li> <p>You configure the alias resource record
                set to route traffic to a non-alias resource record set in the
                same hosted zone.</p> </li> <li> <p>You specify a health check
                ID for the non-alias resource record set. </p> </li> </ul> <p>If
                the health check status is healthy, Route 53 considers the alias
                resource record set to be healthy and includes the alias record
                among the records that it responds to DNS queries with.</p>
                <p>If the health check status is unhealthy, Route 53 stops
                responding to DNS queries using the alias resource record
                set.</p> <note> <p>The alias resource record set can also route
                traffic to a <i>group</i> of non-alias resource record sets that
                have the same routing policy, name, and type. In that
                configuration, associate health checks with all of the resource
                record sets in the group of non-alias resource record sets.</p>
                </note> </li> </ul> <p> <b>Geolocation Routing</b> </p> <p>For
                geolocation resource record sets, if an endpoint is unhealthy,
                Route 53 looks for a resource record set for the larger,
                associated geographic region. For example, suppose you have
                resource record sets for a state in the United States, for the
                entire United States, for North America, and a resource record
                set that has <code>*</code> for <code>CountryCode</code> is
                <code>*</code>, which applies to all locations. If the endpoint
                for the state resource record set is unhealthy, Route 53 checks
                for healthy resource record sets in the following order until it
                finds a resource record set for which the endpoint is
                healthy:</p> <ul> <li> <p>The United States</p> </li> <li>
                <p>North America</p> </li> <li> <p>The default resource record
                set</p> </li> </ul> <p> <b>Specifying the Health Check Endpoint
                by Domain Name</b> </p> <p>If your health checks specify the
                endpoint only by domain name, we recommend that you create a
                separate health check for each endpoint. For example, create a
                health check for each <code>HTTP</code> server that is serving
                content for <code>www.example.com</code>. For the value of
                <code>FullyQualifiedDomainName</code>, specify the domain name
                of the server (such as <code>us-east-2-www.example.com</code>),
                not the name of the resource record sets
                (<code>www.example.com</code>).</p> <important> <p>Health check
                results will be unpredictable if you do the following:</p> <ul>
                <li> <p>Create a health check that has the same value for
                <code>FullyQualifiedDomainName</code> as the name of a resource
                record set.</p> </li> <li> <p>Associate that health check with
                the resource record set.</p> </li> </ul> </important>
        TrafficPolicyInstanceId:
          allOf:
            - $ref: '#/components/schemas/TrafficPolicyInstanceId'
            - description: >-
                <p>When you create a traffic policy instance, Amazon Route 53
                automatically creates a resource record set.
                <code>TrafficPolicyInstanceId</code> is the ID of the traffic
                policy instance that Route 53 created this resource record set
                for.</p> <important> <p>To delete the resource record set that
                is associated with a traffic policy instance, use
                <code>DeleteTrafficPolicyInstance</code>. Route 53 will delete
                the resource record set automatically. If you delete the
                resource record set by using
                <code>ChangeResourceRecordSets</code>, Route 53 doesn't
                automatically delete the traffic policy instance, and you'll
                continue to be charged for it even though it's no longer in use.
                </p> </important>
        CidrRoutingConfig:
          $ref: '#/components/schemas/CidrRoutingConfig'
      description: Information about the resource record set to create or delete.
    ResourceRecordSetFailover:
      type: string
      enum:
        - PRIMARY
        - SECONDARY
    ResourceRecordSetIdentifier:
      type: string
      minLength: 1
      maxLength: 128
    ResourceRecordSetMultiValueAnswer:
      type: boolean
    ResourceRecordSetRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - ca-central-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - eu-central-2
        - ap-southeast-1
        - ap-southeast-2
        - ap-southeast-3
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - eu-north-1
        - sa-east-1
        - cn-north-1
        - cn-northwest-1
        - ap-east-1
        - me-south-1
        - me-central-1
        - ap-south-1
        - ap-south-2
        - af-south-1
        - eu-south-1
        - eu-south-2
        - ap-southeast-4
        - il-central-1
      minLength: 1
      maxLength: 64
    ResourceRecordSetWeight:
      type: integer
      minimum: 0
      maximum: 255
    ResourceRecordSets:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ResourceRecordSet'
          - xml:
              name: ResourceRecordSet
    ResourceRecords:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ResourceRecord'
          - xml:
              name: ResourceRecord
      minItems: 1
    TTL:
      type: integer
      minimum: 0
      maximum: 2147483647
    TimeStamp:
      type: string
      format: date-time
    TrafficPolicyInstanceId:
      type: string
      minLength: 1
      maxLength: 36
    UUID:
      type: string
      pattern: '[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}'
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
