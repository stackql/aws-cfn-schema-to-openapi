openapi: 3.0.0
info:
  title: Transfer
  description: Additional stackql resources for Transfer
  version: 1.0.0
paths:
  /?__X-Amz-Target=TransferService.DeleteSshPublicKey?__nativeEndpoint=true:
    post:
      operationId: DeleteSshPublicKey
      description: Deletes a user's Secure Shell (SSH) public key.
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DeleteSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DeleteSshPublicKey
            enum:
              - TransferService.DeleteSshPublicKey
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.ImportSshPublicKey?__nativeEndpoint=true:
    post:
      operationId: ImportSshPublicKey
      description: '<p>Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a <code>UserName</code> value assigned to the specific file transfer protocol-enabled server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSshPublicKeyResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/ImportSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.ImportSshPublicKey
            enum:
              - TransferService.ImportSshPublicKey
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.StartServer?__nativeEndpoint=true:
    post:
      operationId: StartServer
      description: '<p>Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/StartServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.StartServer
            enum:
              - TransferService.StartServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.StopServer?__nativeEndpoint=true:
    post:
      operationId: StopServer
      description: '<p>Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server, such as server and user properties, are not affected by stopping your server.</p> <note> <p>Stopping the server does not reduce or impact your file transfer protocol endpoint billing; you must delete the server to stop being billed.</p> </note> <p>The state of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/StopServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.StopServer
            enum:
              - TransferService.StopServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-stackQL-resources:
    servers:
      name: servers
      x-cfn-schema-name: DescribedServer
      x-example-where-clause: "WHERE region = 'us-east-1' AND ServerId = '<ServerId>'"
      x-type: native      
      methods:
        start_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.StartServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
        stop_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.StopServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
      id: aws.transfer.servers
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
      title: servers
    public_keys:
      name: public_keys
      x-description: Imports or deletes a public key for a user
      x-type: native      
      methods:
        import_public_key:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.ImportSshPublicKey?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_public_key:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DeleteSshPublicKey?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
      id: aws.transfer.public_keys
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/delete_public_key'
        insert:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/import_public_key'
        select: []
        update: []
      title: public_keys
    user_public_keys:
      name: user_public_keys
      id: aws.transfer.user_public_keys
      x-cfn-schema-name: user_public_keys
      x-type: view
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |- 
              SELECT
              region,
              server_id,
              user_name,
              JSON_EXTRACT(json_each.value, '$.SshPublicKeyBody') as ssh_public_key_body,
              JSON_EXTRACT(json_each.value, '$.SshPublicKeyId') as ssh_public_key_id,
              JSON_EXTRACT(json_each.value, '$.DateImported') as date_imported
              FROM aws.transfer.users, json_each(ssh_public_keys)
              WHERE region = 'us-east-1'
              AND server_id = 's-ab1234567890123cd'
              AND user_name = 'my_user_name'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                  region,
                  server_id,
                  user_name,
                  json_array_elements_text(ssh_public_keys)::jsonb ->> 'SshPublicKeyBody' as ssh_public_key_body,
                  json_array_elements_text(ssh_public_keys)::jsonb ->> 'SshPublicKeyId' as ssh_public_key_id,
                  json_array_elements_text(ssh_public_keys)::jsonb ->> 'DateImported' as date_imported
                FROM 
                  aws.transfer.users
                WHERE 
                  region = 'us-east-1'
                  AND server_id = 's-ab1234567890123cd'
                  AND user_name = 'my_user_name'
  schemas:
    DeleteSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      title: DeleteSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
        UserName:
          $ref: '#/components/schemas/UserName'
    ImportSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyBody
        - UserName
      title: ImportSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
        UserName:
          $ref: '#/components/schemas/UserName'
    ImportSshPublicKeyResponse:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
        UserName:
          $ref: '#/components/schemas/UserName'
      description: >-
        Identifies the user, the server they belong to, and the identifier of
        the SSH public key associated with that user. A user can have more than
        one key on each server that they are associated with.
    InternalServiceError: {}
    InvalidRequestException: {}
    ResourceExistsException: {}
    ResourceNotFoundException: {}
    ServerId:
      type: string
      pattern: ^s-([0-9a-f]{17})$
      minLength: 19
      maxLength: 19
    ServiceUnavailableException: {}
    SshPublicKeyBody:
      type: string
      maxLength: 2048
    SshPublicKeyId:
      type: string
      pattern: ^key-[0-9a-f]{17}$
      minLength: 21
      maxLength: 21
    StartServerRequest:
      type: object
      required:
        - ServerId
      title: StartServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    StopServerRequest:
      type: object
      title: StopServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    ThrottlingException: {}
    UserName:
      type: string
      pattern: ^[\w][\w@.-]{2,99}$
      minLength: 3
      maxLength: 100
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
  requestTranslate:
    algorithm: drop_double_underscore_params
