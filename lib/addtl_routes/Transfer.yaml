openapi: 3.0.0
info:
  title: Transfer
  description: Additional stackql resources for Transfer
  version: 1.0.0
paths:
  /?__X-Amz-Target=TransferService.CreateServer?__nativeEndpoint=true:
    post:
      operationId: CreateServer
      description: 'Instantiates an auto-scaling virtual server based on the selected file transfer protocol in Amazon Web Services. When you make updates to your file transfer protocol-enabled server or when you work with users, use the service-generated <code>ServerId</code> property that is assigned to the newly created server.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.CreateServer
            enum:
              - TransferService.CreateServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.CreateUser?__nativeEndpoint=true:
    post:
      operationId: CreateUser
      description: 'Creates a user and associates them with an existing file transfer protocol-enabled server. You can only create and associate users with servers that have the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user''s public key, and assign the user''s Identity and Access Management (IAM) role. You can also optionally add a session policy, and assign metadata with tags that can be used to group and search for users.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.CreateUser
            enum:
              - TransferService.CreateUser
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.DeleteServer?__nativeEndpoint=true:
    post:
      operationId: DeleteServer
      description: <p>Deletes the file transfer protocol-enabled server that you specify.</p> <p>No response returns from this operation.</p>
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DeleteServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DeleteServer
            enum:
              - TransferService.DeleteServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.DeleteSshPublicKey?__nativeEndpoint=true:
    post:
      operationId: DeleteSshPublicKey
      description: Deletes a user's Secure Shell (SSH) public key.
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DeleteSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DeleteSshPublicKey
            enum:
              - TransferService.DeleteSshPublicKey
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.DeleteUser?__nativeEndpoint=true:
    post:
      operationId: DeleteUser
      description: '<p>Deletes the user belonging to a file transfer protocol-enabled server you specify.</p> <p>No response returns from this operation.</p> <note> <p>When you delete a user from a server, the user''s information is lost.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DeleteUser
            enum:
              - TransferService.DeleteUser
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.DescribeServer?__nativeEndpoint=true:
    post:
      operationId: DescribeServer
      description: '<p>Describes a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of a server''s properties. When you set <code>EndpointType</code> to VPC, the response will contain the <code>EndpointDetails</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServerResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DescribeServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DescribeServer
            enum:
              - TransferService.DescribeServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.DescribeUser?__nativeEndpoint=true:
    post:
      operationId: DescribeUser
      description: '<p>Describes the user assigned to the specific file transfer protocol-enabled server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/DescribeUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.DescribeUser
            enum:
              - TransferService.DescribeUser
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.ImportSshPublicKey?__nativeEndpoint=true:
    post:
      operationId: ImportSshPublicKey
      description: '<p>Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a <code>UserName</code> value assigned to the specific file transfer protocol-enabled server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSshPublicKeyResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/ImportSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.ImportSshPublicKey
            enum:
              - TransferService.ImportSshPublicKey
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.ListServers?__nativeEndpoint=true:
    post:
      operationId: ListServers
      description: |
        Lists the file transfer protocol-enabled 
        servers that are associated with your 
        Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServersResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/ListServersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.ListServers
            enum:
              - TransferService.ListServers
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.ListUsers?__nativeEndpoint=true:
    post:
      operationId: ListUsers
      description: Lists the users for a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.ListUsers
            enum:
              - TransferService.ListUsers
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.StartServer?__nativeEndpoint=true:
    post:
      operationId: StartServer
      description: '<p>Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/StartServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.StartServer
            enum:
              - TransferService.StartServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.StopServer?__nativeEndpoint=true:
    post:
      operationId: StopServer
      description: '<p>Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server, such as server and user properties, are not affected by stopping your server.</p> <note> <p>Stopping the server does not reduce or impact your file transfer protocol endpoint billing; you must delete the server to stop being billed.</p> </note> <p>The state of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/StopServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.StopServer
            enum:
              - TransferService.StopServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.UpdateServer?__nativeEndpoint=true:
    post:
      operationId: UpdateServer
      description: <p>Updates the file transfer protocol-enabled server's properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server you updated.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '484':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '485':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/UpdateServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.UpdateServer
            enum:
              - TransferService.UpdateServer
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?__X-Amz-Target=TransferService.UpdateUser?__nativeEndpoint=true:
    post:
      operationId: UpdateUser
      description: '<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/x-amz-json-1.1:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          schema:
            type: string
            default: TransferService.UpdateUser
            enum:
              - TransferService.UpdateUser
    servers:
      - url: 'https://transfer.{region}.amazonaws.com'
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
        description: The AWS Transfer multi-region endpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-stackQL-resources:
    servers:
      name: servers
      x-cfn-schema-name: DescribedServer
      x-example-where-clause: "WHERE region = 'us-east-1' AND ServerId = '<ServerId>'"
      x-type: custom      
      methods:
        create_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.CreateServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
            default: |
              {}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_servers:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.ListServers?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
            default: |
              {}
          response:
            objectKey: '$.Servers'
            mediaType: application/json
            openAPIDocKey: '200'
        describe_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DescribeServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            objectKey: '$.Server'
            mediaType: application/json
            openAPIDocKey: '200'
        update_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.UpdateServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DeleteServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
        start_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.StartServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
        stop_server:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.StopServer?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
      id: aws.transfer.servers
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/delete_server'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/create_server'
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/describe_server'
          - $ref: '#/components/x-stackQL-resources/servers/methods/list_servers'
        update:
          - $ref: '#/components/x-stackQL-resources/servers/methods/update_server'
      title: servers
    users:
      name: users
      x-cfn-schema-name: DescribedUser
      x-example-where-clause: "WHERE region = 'us-east-1' AND ServerId = '<ServerId>' AND UserName = '<UserName>'"
      x-type: custom      
      methods:
        list_users:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.ListUsers?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            objectKey: '$.Users'
            mediaType: application/json
            openAPIDocKey: '200'
        describe_user:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DescribeUser?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            objectKey: '$.User'
            mediaType: application/json
            openAPIDocKey: '200'
        create_user:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.CreateUser?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_user:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.UpdateUser?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DeleteUser?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
      id: aws.transfer.users
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_user'
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/describe_user'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_users'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update_user'
      title: users
    public_keys:
      name: public_keys
      x-description: Imports or deletes a public key for a user
      x-type: custom      
      methods:
        import_public_key:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.ImportSshPublicKey?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_public_key:
          serviceName: transfer
          operation:
            $ref: '#/paths/~1?__X-Amz-Target=TransferService.DeleteSshPublicKey?__nativeEndpoint=true/post'
          request:
            mediaType: application/x-amz-json-1.1
          response:
            openAPIDocKey: '200'
      id: aws.transfer.public_keys
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/delete_public_key'
        insert:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/import_public_key'
        select: []
        update: []
      title: public_keys
    server_tags:
      name: server_tags
      id: aws.transfer.server_tags
      x-cfn-schema-name: server_tags
      x-type: custom_list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |- 
              SELECT
              data__ServerId,
              region,
              JSON_EXTRACT(json_each.value, '$.Key') as key,
              JSON_EXTRACT(json_each.value, '$.Value') as value
              FROM aws.transfer.servers, json_each(Tags)
              WHERE region = 'us-east-1'
              AND data__ServerId = 's-ab1234567890123cd'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                  data__ServerId,
                  region,
                  json_array_elements_text(Tags)::jsonb ->> 'Key' as key,
                  json_array_elements_text(Tags)::jsonb ->> 'Value' as value
                FROM 
                  aws.transfer.servers
                WHERE 
                  region = 'us-east-1'
                  AND data__ServerId = 's-ab1234567890123cd'
    user_public_keys:
      name: user_public_keys
      id: aws.transfer.user_public_keys
      x-cfn-schema-name: user_public_keys
      x-type: custom_list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |- 
              SELECT
              data__ServerId,
              data__UserName,
              region,
              JSON_EXTRACT(json_each.value, '$.SshPublicKeyBody') as ssh_public_key_body,
              JSON_EXTRACT(json_each.value, '$.SshPublicKeyId') as ssh_public_key_id,
              JSON_EXTRACT(json_each.value, '$.DateImported') as date_imported
              FROM aws.transfer.users, json_each(SshPublicKeys)
              WHERE region = 'us-east-1'
              AND data__ServerId = 's-ab1234567890123cd'
              AND data__UserName = 'my_user_name'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                  data__ServerId,
                  data__UserName,
                  region,
                  json_array_elements_text(SshPublicKeys)::jsonb ->> 'SshPublicKeyBody' as ssh_public_key_body,
                  json_array_elements_text(SshPublicKeys)::jsonb ->> 'SshPublicKeyId' as ssh_public_key_id,
                  json_array_elements_text(SshPublicKeys)::jsonb ->> 'DateImported' as date_imported
                FROM 
                  aws.transfer.users
                WHERE 
                  region = 'us-east-1'
                  AND data__ServerId = 's-ab1234567890123cd'
                  AND data__UserName = 'my_user_name'
  schemas:
    user_public_keys:
      description: Details of a Transfer family server tags
      type: object
      additionalProperties: false
      properties:
        data__ServerId:
          type: string
          description: The server id
        data__UserName:
          type: string
          description: The user name
        region:
          type: string
          description: The AWS region
        ssh_public_key_body:
          type: string
          description: The SSH public key body
        ssh_public_key_id:
          type: string
          description: The SSH public key id
        date_imported:
          type: string
          description: The date imported          
      x-example-where-clause: WHERE region = '<region>' AND data__ServerId = '<s-serverid>' AND data__UserName = '<my_user_name>'
    server_tags:
      description: Details of a Transfer family server tags
      type: object
      additionalProperties: false
      properties:
        data__ServerId:
          type: string
          description: The server id
        region:
          type: string
          description: The AWS region
        key:
          type: string
          description: The key of the tag
        value:
          type: string
          description: The value of the tag
      x-example-where-clause: WHERE region = '<region>' AND data__ServerId = '<s-serverid>'
    AccessDeniedException: {}
    AddressAllocationId:
      type: string
    AddressAllocationIds:
      type: array
      items:
        $ref: '#/components/schemas/AddressAllocationId'
    Arn:
      type: string
      pattern: arn:.*
      minLength: 20
      maxLength: 1600
    As2Transport:
      type: string
      enum:
        - HTTP
    As2Transports:
      type: array
      items:
        $ref: '#/components/schemas/As2Transport'
      minItems: 1
      maxItems: 1
    Certificate:
      type: string
      maxLength: 1600
    ConflictException: {}
    CreateServerRequest:
      type: object
      title: CreateServerRequest
      properties:
        Certificate:
          $ref: '#/components/schemas/Certificate'
        Domain:
          $ref: '#/components/schemas/Domain'
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
        HostKey:
          $ref: '#/components/schemas/HostKey'
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
        LoggingRole:
          $ref: '#/components/schemas/Role'
        PostAuthenticationLoginBanner:
          $ref: '#/components/schemas/PostAuthenticationLoginBanner'
        PreAuthenticationLoginBanner:
          $ref: '#/components/schemas/PreAuthenticationLoginBanner'
        Protocols:
          $ref: '#/components/schemas/Protocols'
        ProtocolDetails:
          $ref: '#/components/schemas/ProtocolDetails'
        SecurityPolicyName:
          $ref: '#/components/schemas/SecurityPolicyName'
        Tags:
          $ref: '#/components/schemas/Tags'
        WorkflowDetails:
          $ref: '#/components/schemas/WorkflowDetails'
        StructuredLogDestinations:
          $ref: '#/components/schemas/StructuredLogDestinations'
    CreateServerResponse:
      type: object
      required:
        - ServerId
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    CreateUserRequest:
      type: object
      required:
        - Role
        - ServerId
        - UserName
      title: CreateUserRequest
      properties:
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
        Policy:
          $ref: '#/components/schemas/Policy'
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          $ref: '#/components/schemas/Role'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
        Tags:
          $ref: '#/components/schemas/Tags'
        UserName:
          $ref: '#/components/schemas/UserName'
    CreateUserResponse:
      type: object
      required:
        - ServerId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        UserName:
          $ref: '#/components/schemas/UserName'
    DateImported:
      type: string
      format: date-time
    DeleteServerRequest:
      type: object
      required:
        - ServerId
      title: DeleteServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    DeleteSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      title: DeleteSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
        UserName:
          $ref: '#/components/schemas/UserName'
    DeleteUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: DeleteUserRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        UserName:
          $ref: '#/components/schemas/UserName'
    DescribeServerRequest:
      type: object
      required:
        - ServerId
      title: DescribeServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    DescribeServerResponse:
      type: object
      required:
        - Server
      properties:
        Server:
          $ref: '#/components/schemas/DescribedServer'
    DescribeUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: DescribeUserRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        UserName:
          $ref: '#/components/schemas/UserName'
    DescribeUserResponse:
      type: object
      required:
        - ServerId
        - User
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        User:
          $ref: '#/components/schemas/DescribedUser'
    DescribedServer:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Certificate:
          $ref: '#/components/schemas/Certificate'
        ProtocolDetails:
          $ref: '#/components/schemas/ProtocolDetails'
        Domain:
          $ref: '#/components/schemas/Domain'
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
        HostKeyFingerprint:
          $ref: '#/components/schemas/HostKeyFingerprint'
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
        LoggingRole:
          $ref: '#/components/schemas/Role'
        PostAuthenticationLoginBanner:
          $ref: '#/components/schemas/PostAuthenticationLoginBanner'
        PreAuthenticationLoginBanner:
          $ref: '#/components/schemas/PreAuthenticationLoginBanner'
        Protocols:
          $ref: '#/components/schemas/Protocols'
        S3StorageOptions:
          type: object
        SecurityPolicyName:
          $ref: '#/components/schemas/SecurityPolicyName'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        State:
          $ref: '#/components/schemas/State'
        Tags:
          $ref: '#/components/schemas/Tags'
        UserCount:
          $ref: '#/components/schemas/UserCount'
        WorkflowDetails:
          $ref: '#/components/schemas/WorkflowDetails'
        StructuredLogDestinations:
          $ref: '#/components/schemas/StructuredLogDestinations'
      description: >-
        Describes the properties of a file transfer protocol-enabled server that
        was specified.
    DescribedUser:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
        Policy:
          $ref: '#/components/schemas/Policy'
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          $ref: '#/components/schemas/Role'
        SshPublicKeys:
          $ref: '#/components/schemas/SshPublicKeys'
        Tags:
          $ref: '#/components/schemas/Tags'
        UserName:
          $ref: '#/components/schemas/UserName'
      description: Describes the properties of a user that was specified.
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{10}$
      minLength: 12
      maxLength: 12
    Domain:
      type: string
      enum:
        - S3
        - EFS
    EndpointDetails:
      type: object
      properties:
        AddressAllocationIds:
          $ref: '#/components/schemas/AddressAllocationIds'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
        VpcEndpointId:
          $ref: '#/components/schemas/VpcEndpointId'
        VpcId:
          $ref: '#/components/schemas/VpcId'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
      description: >-
        <p>The virtual private cloud (VPC) endpoint settings that are configured
        for your file transfer protocol-enabled server. With a VPC endpoint, you
        can restrict access to your server and resources only within your VPC.
        To control incoming internet traffic, invoke the
        <code>UpdateServer</code> API and attach an Elastic IP address to your
        server's endpoint.</p> <note> <p> After May 19, 2021, you won't be able
        to create a server using <code>EndpointType=VPC_ENDPOINT</code> in your
        Amazon Web Servicesaccount if your account hasn't already done so before
        May 19, 2021. If you have already created servers with
        <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web
        Servicesaccount on or before May 19, 2021, you will not be affected.
        After this date, use <code>EndpointType</code>=<code>VPC</code>.</p>
        <p>For more information, see
        https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p>
        </note>
    EndpointType:
      type: string
      enum:
        - PUBLIC
        - VPC
        - VPC_ENDPOINT
    Function:
      type: string
      pattern: ^arn:[a-z-]+:lambda:.*$
      minLength: 1
      maxLength: 170
    HomeDirectory:
      type: string
      pattern: ^$|/.*
      maxLength: 1024
    HomeDirectoryMapEntry:
      type: object
      required:
        - Entry
        - Target
      properties:
        Entry:
          $ref: '#/components/schemas/MapEntry'
        Target:
          $ref: '#/components/schemas/MapTarget'
      description: >-
        <p>Represents an object that contains entries and targets for
        <code>HomeDirectoryMappings</code>.</p> <p>The following is an
        <code>Entry</code> and <code>Target</code> pair example for
        <code>chroot</code>.</p> <p> <code>[ { "Entry": "/", "Target":
        "/bucket_name/home/mydirectory" } ]</code> </p>
    HomeDirectoryMappings:
      type: array
      items:
        $ref: '#/components/schemas/HomeDirectoryMapEntry'
      minItems: 1
      maxItems: 50
    HomeDirectoryType:
      type: string
      enum:
        - PATH
        - LOGICAL
    HostKey:
      type: string
      maxLength: 4096
      format: password
    HostKeyFingerprint:
      type: string
    IdentityProviderDetails:
      type: object
      properties:
        Url:
          $ref: '#/components/schemas/Url'
        InvocationRole:
          $ref: '#/components/schemas/Role'
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
        Function:
          $ref: '#/components/schemas/Function'
        SftpAuthenticationMethods:
          $ref: '#/components/schemas/SftpAuthenticationMethods'
      description: >-
        Returns information related to the type of user authentication that is
        in use for a file transfer protocol-enabled server's users. A server can
        have only one method of authentication.
    IdentityProviderType:
      type: string
      enum:
        - SERVICE_MANAGED
        - API_GATEWAY
        - AWS_DIRECTORY_SERVICE
        - AWS_LAMBDA
      description: >-
        <p>The mode of authentication for a server. The default value is
        <code>SERVICE_MANAGED</code>, which allows you to store and access user
        credentials within the Transfer Family service.</p> <p>Use
        <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory
        groups in Directory Service for Microsoft Active Directory or Microsoft
        Active Directory in your on-premises environment or in Amazon Web
        Services using AD Connector. This option also requires you to provide a
        Directory ID by using the <code>IdentityProviderDetails</code>
        parameter.</p> <p>Use the <code>API_GATEWAY</code> value to integrate
        with an identity provider of your choosing. The <code>API_GATEWAY</code>
        setting requires you to provide an Amazon API Gateway endpoint URL to
        call for authentication by using the
        <code>IdentityProviderDetails</code> parameter.</p> <p>Use the
        <code>AWS_LAMBDA</code> value to directly use an Lambda function as your
        identity provider. If you choose this value, you must specify the ARN
        for the Lambda function in the <code>Function</code> parameter for the
        <code>IdentityProviderDetails</code> data type.</p>
    ImportSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyBody
        - UserName
      title: ImportSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
        UserName:
          $ref: '#/components/schemas/UserName'
    ImportSshPublicKeyResponse:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
        UserName:
          $ref: '#/components/schemas/UserName'
      description: >-
        Identifies the user, the server they belong to, and the identifier of
        the SSH public key associated with that user. A user can have more than
        one key on each server that they are associated with.
    InternalServiceError: {}
    InvalidNextTokenException: {}
    InvalidRequestException: {}
    ListServersRequest:
      type: object
      title: ListServersRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListServersResponse:
      type: object
      required:
        - Servers
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Servers:
          $ref: '#/components/schemas/ListedServers'
    ListUsersRequest:
      type: object
      required:
        - ServerId
      title: ListUsersRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        ServerId:
          $ref: '#/components/schemas/ServerId'
    ListUsersResponse:
      type: object
      required:
        - ServerId
        - Users
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        Users:
          $ref: '#/components/schemas/ListedUsers'
    ListedServer:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Domain:
          $ref: '#/components/schemas/Domain'
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
        LoggingRole:
          $ref: '#/components/schemas/Role'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        State:
          $ref: '#/components/schemas/State'
        UserCount:
          $ref: '#/components/schemas/UserCount'
      description: >-
        Returns properties of a file transfer protocol-enabled server that was
        specified.
    ListedServers:
      type: array
      items:
        $ref: '#/components/schemas/ListedServer'
    ListedUser:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
        Role:
          $ref: '#/components/schemas/Role'
        SshPublicKeyCount:
          $ref: '#/components/schemas/SshPublicKeyCount'
        UserName:
          $ref: '#/components/schemas/UserName'
      description: Returns properties of the user that you specify.
    ListedUsers:
      type: array
      items:
        $ref: '#/components/schemas/ListedUser'
    MapEntry:
      type: string
      pattern: ^/.*
      maxLength: 1024
    MapTarget:
      type: string
      pattern: ^/.*
      maxLength: 1024
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    NextToken:
      type: string
      minLength: 1
      maxLength: 6144
    NullableRole:
      type: string
      pattern: ^$|arn:.*role/.*
      maxLength: 2048
    OnPartialUploadWorkflowDetails:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowDetail'
      maxItems: 1
    OnUploadWorkflowDetails:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowDetail'
      maxItems: 1
    PassiveIp:
      type: string
      maxLength: 15
    Policy:
      type: string
      maxLength: 2048
    PosixId:
      type: integer
      minimum: 0
      maximum: 4294967295
    PosixProfile:
      type: object
      required:
        - Uid
        - Gid
      properties:
        Uid:
          $ref: '#/components/schemas/PosixId'
        Gid:
          $ref: '#/components/schemas/PosixId'
        SecondaryGids:
          $ref: '#/components/schemas/SecondaryGids'
      description: >-
        The full POSIX identity, including user ID (<code>Uid</code>), group ID
        (<code>Gid</code>), and any secondary groups IDs
        (<code>SecondaryGids</code>), that controls your users' access to your
        Amazon EFS file systems. The POSIX permissions that are set on files and
        directories in your file system determine the level of access your users
        get when transferring files into and out of your Amazon EFS file
        systems.
    PostAuthenticationLoginBanner:
      type: string
      pattern: '[\x09-\x0D\x20-\x7E]*'
      maxLength: 512
    PreAuthenticationLoginBanner:
      type: string
      pattern: '[\x09-\x0D\x20-\x7E]*'
      maxLength: 512
    Protocol:
      type: string
      enum:
        - SFTP
        - FTP
        - FTPS
        - AS2
    ProtocolDetails:
      type: object
      properties:
        PassiveIp:
          $ref: '#/components/schemas/PassiveIp'
        TlsSessionResumptionMode:
          $ref: '#/components/schemas/TlsSessionResumptionMode'
        SetStatOption:
          $ref: '#/components/schemas/SetStatOption'
        As2Transports:
          $ref: '#/components/schemas/As2Transports'
      description: ' The protocol settings that are configured for your server. '
    Protocols:
      type: array
      items:
        $ref: '#/components/schemas/Protocol'
      minItems: 1
      maxItems: 4
    ResourceExistsException: {}
    ResourceNotFoundException: {}
    Role:
      type: string
      pattern: arn:.*role/.*
      minLength: 20
      maxLength: 2048
    SecondaryGids:
      type: array
      items:
        $ref: '#/components/schemas/PosixId'
      minItems: 0
      maxItems: 16
    SecurityGroupId:
      type: string
      pattern: ^sg-[0-9a-f]{8,17}$
      minLength: 11
      maxLength: 20
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SecurityPolicyName:
      type: string
      pattern: TransferSecurityPolicy-.+
      maxLength: 100
    ServerId:
      type: string
      pattern: ^s-([0-9a-f]{17})$
      minLength: 19
      maxLength: 19
    ServiceUnavailableException: {}
    SetStatOption:
      type: string
      enum:
        - DEFAULT
        - ENABLE_NO_OP
    SftpAuthenticationMethods:
      type: string
      enum:
        - PASSWORD
        - PUBLIC_KEY
        - PUBLIC_KEY_OR_PASSWORD
        - PUBLIC_KEY_AND_PASSWORD
    SshPublicKey:
      type: object
      required:
        - DateImported
        - SshPublicKeyBody
        - SshPublicKeyId
      properties:
        DateImported:
          $ref: '#/components/schemas/DateImported'
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
      description: >-
        Provides information about the public Secure Shell (SSH) key that is
        associated with a Transfer Family user for the specific file transfer
        protocol-enabled server (as identified by <code>ServerId</code>). The
        information returned includes the date the key was imported, the public
        key contents, and the public key ID. A user can store more than one SSH
        public key associated with their user name on a specific server.
    SshPublicKeyBody:
      type: string
      maxLength: 2048
    SshPublicKeyCount:
      type: integer
    SshPublicKeyId:
      type: string
      pattern: ^key-[0-9a-f]{17}$
      minLength: 21
      maxLength: 21
    SshPublicKeys:
      type: array
      items:
        $ref: '#/components/schemas/SshPublicKey'
      maxItems: 5
    StartServerRequest:
      type: object
      required:
        - ServerId
      title: StartServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    State:
      type: string
      enum:
        - OFFLINE
        - ONLINE
        - STARTING
        - STOPPING
        - START_FAILED
        - STOP_FAILED
      description: >-
        <p>Describes the condition of a file transfer protocol-enabled server
        with respect to its ability to perform file operations. There are six
        possible states: <code>OFFLINE</code>, <code>ONLINE</code>,
        <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>,
        and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates
        that the server exists, but that it is not available for file
        operations. <code>ONLINE</code> indicates that the server is available
        to perform file operations. <code>STARTING</code> indicates that the
        server's was instantiated, but the server is not yet available to
        perform file operations. Under normal conditions, it can take a couple
        of minutes for the server to be completely operational. Both
        <code>START_FAILED</code> and <code>STOP_FAILED</code> are error
        conditions.</p>
    StopServerRequest:
      type: object
      title: StopServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    StructuredLogDestinations:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 0
      maxItems: 1
    SubnetId:
      type: string
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: >-
        Creates a key-value pair for a specific resource. Tags are metadata that
        you can use to search for and group a resource for various purposes. You
        can apply tags to servers, users, and roles. A tag key can take more
        than one value. For example, to group servers for accounting purposes,
        you might create a tag called <code>Group</code> and assign the values
        <code>Research</code> and <code>Accounting</code> to that group.
    TagKey:
      type: string
      maxLength: 128
    TagValue:
      type: string
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    ThrottlingException: {}
    TlsSessionResumptionMode:
      type: string
      enum:
        - DISABLED
        - ENABLED
        - ENFORCED
    UpdateServerRequest:
      type: object
      required:
        - ServerId
      title: UpdateServerRequest
      properties:
        Certificate:
          $ref: '#/components/schemas/Certificate'
        ProtocolDetails:
          $ref: '#/components/schemas/ProtocolDetails'
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
        HostKey:
          $ref: '#/components/schemas/HostKey'
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
        LoggingRole:
          $ref: '#/components/schemas/NullableRole'
        PostAuthenticationLoginBanner:
          $ref: '#/components/schemas/PostAuthenticationLoginBanner'
        PreAuthenticationLoginBanner:
          $ref: '#/components/schemas/PreAuthenticationLoginBanner'
        Protocols:
          $ref: '#/components/schemas/Protocols'
        SecurityPolicyName:
          $ref: '#/components/schemas/SecurityPolicyName'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        WorkflowDetails:
          $ref: '#/components/schemas/WorkflowDetails'
        StructuredLogDestinations:
          $ref: '#/components/schemas/StructuredLogDestinations'
    UpdateServerResponse:
      type: object
      required:
        - ServerId
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
    UpdateUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: UpdateUserRequest
      properties:
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
        Policy:
          $ref: '#/components/schemas/Policy'
        PosixProfile:
          $ref: '#/components/schemas/PosixProfile'
        Role:
          $ref: '#/components/schemas/Role'
        ServerId:
          $ref: '#/components/schemas/ServerId'
        UserName:
          $ref: '#/components/schemas/UserName'
    UpdateUserResponse:
      type: object
      required:
        - ServerId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
        UserName:
          $ref: '#/components/schemas/UserName'
      description: ' <code>UpdateUserResponse</code> returns the user name and identifier for the request to update a user''s properties.'
    Url:
      type: string
      maxLength: 255
    UserCount:
      type: integer
    UserName:
      type: string
      pattern: ^[\w][\w@.-]{2,99}$
      minLength: 3
      maxLength: 100
    VpcEndpointId:
      type: string
      pattern: ^vpce-[0-9a-f]{17}$
      minLength: 22
      maxLength: 22
    VpcId:
      type: string
    WorkflowDetail:
      type: object
      required:
        - WorkflowId
        - ExecutionRole
      properties:
        WorkflowId:
          $ref: '#/components/schemas/WorkflowId'
        ExecutionRole:
          $ref: '#/components/schemas/Role'
      description: >-
        <p>Specifies the workflow ID for the workflow to assign and the
        execution role that's used for executing the workflow.</p> <p>In
        addition to a workflow to execute when a file is uploaded completely,
        <code>WorkflowDetails</code> can also contain a workflow ID (and
        execution role) for a workflow to execute on partial upload. A partial
        upload occurs when the server session disconnects while the file is
        still being uploaded.</p>
    WorkflowDetails:
      type: object
      properties:
        OnUpload:
          $ref: '#/components/schemas/OnUploadWorkflowDetails'
        OnPartialUpload:
          $ref: '#/components/schemas/OnPartialUploadWorkflowDetails'
      description: >-
        Container for the <code>WorkflowDetail</code> data type. It is used by
        actions that trigger a workflow to begin execution.
    WorkflowId:
      type: string
      pattern: ^w-([a-z0-9]{17})$
      minLength: 19
      maxLength: 19
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
  requestTranslate:
    algorithm: drop_double_underscore_params
