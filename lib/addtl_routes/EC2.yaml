openapi: 3.0.0
info:
  title: EC2
  description: Additional stackql resources for EC2
  version: 1.0.0
paths:
  /?Action=DescribeRouteTables&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: DescribeRouteTables
      operationId: GET_DescribeRouteTables
      description: '<p>Describes one or more of your route tables.</p> <p>Each subnet in your VPC must be associated with a route table. If a subnet is not explicitly associated with any route table, it is implicitly associated with the main route table. This command does not return the subnet ID for implicit associations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html">Route tables</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeRouteTablesResult'
      parameters:
        - name: Filter
          in: query
          required: false
          description: '<p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not have an association ID are not returned in the response.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the route table.</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the Amazon Web Service specified in a route in the table.</p> </li> <li> <p> <code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet gateway specified in a route in the route table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.transit-gateway-id</code> - The ID of a transit gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route''s target isn''t available (for example, the specified gateway isn''t attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/Filter'
                - xml:
                    name: Filter
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: RouteTableId
          in: query
          required: false
          description: '<p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>'
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/RouteTableId'
                - xml:
                    name: item
        - name: NextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: 'The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.'
          schema:
            type: integer
            minimum: 5
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=BundleInstance&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: BundleInstance
      operationId: GET_BundleInstance
      description: '<p>Bundles an Amazon instance store-backed Windows instance.</p> <p>During bundling, only the root device volume (C:\) is bundled. Data on other instance store volumes is not preserved.</p> <note> <p>This action is not applicable for Linux/Unix instances or Windows instances that are backed by Amazon EBS.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BundleInstanceResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: '<p>The ID of the instance to bundle.</p> <p>Type: String</p> <p>Default: None</p> <p>Required: Yes</p>'
          schema:
            type: string
        - name: Storage
          in: query
          required: true
          description: 'The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.'
          schema:
            type: object
            properties:
              undefined:
                allOf:
                  - $ref: '#/components/schemas/S3Storage'
                  - description: An Amazon S3 storage location.
            description: Describes the storage location for an instance store-backed AMI.
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=ImportInstance&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: ImportInstance
      operationId: GET_ImportInstance
      description: '<p>Creates an import instance task using metadata from the specified disk image.</p> <p>This API action supports only single-volume VMs. To import multi-volume VMs, use <a>ImportImage</a> instead.</p> <p>This API action is not supported by the Command Line Interface (CLI). For information about using the Amazon EC2 CLI, which is deprecated, see <a href="https://awsdocs.s3.amazonaws.com/EC2/ec2-clt.pdf#UsingVirtualMachinesinAmazonEC2">Importing a VM to Amazon EC2</a> in the <i>Amazon EC2 CLI Reference</i> PDF file.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportInstanceResult'
      parameters:
        - name: Description
          in: query
          required: false
          description: A description for the instance being imported.
          schema:
            type: string
        - name: DiskImage
          in: query
          required: false
          description: The disk image.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DiskImage'
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: LaunchSpecification
          in: query
          required: false
          description: The launch specification.
          schema:
            type: object
            properties:
              additionalInfo:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: Reserved.
              architecture:
                allOf:
                  - $ref: '#/components/schemas/ArchitectureValues'
                  - description: The architecture of the instance.
              GroupId:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupIdStringList'
                  - description: The security group IDs.
              GroupName:
                allOf:
                  - $ref: '#/components/schemas/SecurityGroupStringList'
                  - description: The security group names.
              instanceInitiatedShutdownBehavior:
                allOf:
                  - $ref: '#/components/schemas/ShutdownBehavior'
                  - description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
              instanceType:
                allOf:
                  - $ref: '#/components/schemas/InstanceType'
                  - description: 'The instance type. For more information about the instance types that you can import, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.'
              monitoring:
                allOf:
                  - $ref: '#/components/schemas/Boolean'
                  - description: Indicates whether monitoring is enabled.
              placement:
                allOf:
                  - $ref: '#/components/schemas/Placement'
                  - description: The placement information for the instance.
              privateIpAddress:
                allOf:
                  - $ref: '#/components/schemas/String'
                  - description: '[EC2-VPC] An available IP address from the IP address range of the subnet.'
              subnetId:
                allOf:
                  - $ref: '#/components/schemas/SubnetId'
                  - description: '[EC2-VPC] The ID of the subnet in which to launch the instance.'
              userData:
                allOf:
                  - $ref: '#/components/schemas/UserData'
                  - description: The Base64-encoded user data to make available to the instance.
            description: Describes the launch specification for VM import.
        - name: Platform
          in: query
          required: true
          description: The instance operating system.
          schema:
            type: string
            enum:
              - Windows
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=MonitorInstances&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: MonitorInstances
      operationId: GET_MonitorInstances
      description: '<p>Enables detailed monitoring for a running instance. Otherwise, basic monitoring is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitor your instances using CloudWatch</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>To disable detailed monitoring, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html">UnmonitorInstances</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MonitorInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=RebootInstances&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: RebootInstances
      operationId: GET_RebootInstances
      description: '<p>Requests a reboot of the specified instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.</p> <p>If an instance does not cleanly shut down within a few minutes, Amazon EC2 performs a hard reboot.</p> <p>For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html">Troubleshoot an unreachable instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The instance IDs.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=StartInstances&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: StartInstances
      operationId: GET_StartInstances
      description: '<p>Starts an Amazon EBS-backed instance that you''ve previously stopped.</p> <p>Instances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for instance usage. However, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>Before stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.</p> <p>Performing this operation on an instance that uses an instance store as its root device returns an error.</p> <p>If you attempt to start a T3 instance with <code>host</code> tenancy and the <code>unlimted</code> CPU credit option, the request fails. The <code>unlimited</code> CPU credit option is not supported on Dedicated Hosts. Before you start the instance, either change its CPU credit option to <code>standard</code>, or change its tenancy to <code>default</code> or <code>dedicated</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InstanceId'
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=StopInstances&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: StopInstances
      operationId: GET_StopInstances
      description: '<p>Stops an Amazon EBS-backed instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html">Stop and start your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can use the Stop action to hibernate an instance if the instance is <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#enabling-hibernation">enabled for hibernation</a> and it meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>We don''t charge usage for a stopped instance, or data transfer fees; however, your root partition Amazon EBS volume remains and continues to persist your data, and you are charged for Amazon EBS volume usage. Every time you start your instance, Amazon EC2 charges a one-minute minimum for instance usage, and thereafter charges per second for instance usage.</p> <p>You can''t stop or hibernate instance store-backed instances. You can''t use the Stop action to hibernate Spot Instances, but you can specify that Amazon EC2 should hibernate Spot Instances when they are interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html#hibernate-spot-instances">Hibernating interrupted Spot Instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop or hibernate an instance, we shut it down. You can restart your instance at any time. Before stopping or hibernating an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM, but hibernating an instance does preserve data stored in RAM. If an instance cannot hibernate successfully, a normal shutdown occurs.</p> <p>Stopping and hibernating an instance is different to rebooting or terminating it. For example, when you stop or hibernate an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between rebooting, stopping, hibernating, and terminating instances, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html">Instance lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>When you stop an instance, we attempt to shut it down forcibly after a short while. If your instance appears stuck in the stopping state after a period of time, there may be an issue with the underlying host computer. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html">Troubleshoot stopping your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: Hibernate
          in: query
          required: false
          description: '<p>Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> Default: <code>false</code> </p>'
          schema:
            type: boolean
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
        - name: Force
          in: query
          required: false
          description: '<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /?Action=UnmonitorInstances&Version=2016-11-15&__nativeEndpoint=true:
    get:
      x-aws-operation-name: UnmonitorInstances
      operationId: GET_UnmonitorInstances
      description: 'Disables detailed monitoring for a running instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html">Monitoring your instances and volumes</a> in the <i>Amazon EC2 User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmonitorInstancesResult'
      parameters:
        - name: InstanceId
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/InstanceId'
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: 'Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.'
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  schemas:
    ArchitectureValues:
      type: string
      enum:
        - i386
        - x86_64
        - arm64
        - x86_64_mac
    Blob:
      type: string
    Boolean:
      type: boolean
    BundleInstanceRequest:
      type: object
      required:
        - InstanceId
        - Storage
      title: BundleInstanceRequest
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/Storage'
            - description: >-
                The bucket in which to store the AMI. You can specify a bucket
                that you already own or a new bucket that Amazon EC2 creates on
                your behalf. If you specify a bucket that belongs to someone
                else, Amazon EC2 returns an error.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
      description: Contains the parameters for BundleInstance.
    BundleInstanceResult:
      type: object
      properties:
        bundleInstanceTask:
          allOf:
            - $ref: '#/components/schemas/BundleTask'
            - description: Information about the bundle task.
      description: Contains the output of BundleInstance.
    BundleTask:
      type: object
      properties:
        bundleId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the bundle task.
        error:
          allOf:
            - $ref: '#/components/schemas/BundleTaskError'
            - description: If the task fails, a description of the error.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance associated with this bundle task.
        progress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The level of task completion, as a percent (for example, 20%).
        startTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time this task started.
        state:
          allOf:
            - $ref: '#/components/schemas/BundleTaskState'
            - description: The state of the task.
        storage:
          allOf:
            - $ref: '#/components/schemas/Storage'
            - description: The Amazon S3 storage locations.
        updateTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - description: The time of the most recent update for the task.
      description: Describes a bundle task.
    BundleTaskError:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code.
        message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error message.
      description: Describes an error for <a>BundleInstance</a>.
    BundleTaskState:
      type: string
      enum:
        - pending
        - waiting-for-shutdown
        - bundling
        - storing
        - cancelling
        - complete
        - failed
    CarrierGatewayId:
      type: string
    ConversionTask:
      type: object
      properties:
        conversionTaskId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the conversion task.
        expirationTime:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The time when the task expires. If the upload isn't complete
                before the expiration time, we automatically cancel the task.
        importInstance:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceTaskDetails'
            - description: >-
                If the task is for importing an instance, this contains
                information about the import instance task.
        importVolume:
          allOf:
            - $ref: '#/components/schemas/ImportVolumeTaskDetails'
            - description: >-
                If the task is for importing a volume, this contains information
                about the import volume task.
        state:
          allOf:
            - $ref: '#/components/schemas/ConversionTaskState'
            - description: The state of the conversion task.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message related to the conversion task.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the task.
      description: Describes a conversion task.
    ConversionTaskState:
      type: string
      enum:
        - active
        - cancelling
        - cancelled
        - completed
    CoreNetworkArn:
      type: string
    DateTime:
      type: string
      format: date-time
    DescribeRouteTablesMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    DescribeRouteTablesRequest:
      type: object
      title: DescribeRouteTablesRequest
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: >-
                <p>One or more filters.</p> <ul> <li> <p>
                <code>association.route-table-association-id</code> - The ID of
                an association ID for the route table.</p> </li> <li> <p>
                <code>association.route-table-id</code> - The ID of the route
                table involved in the association.</p> </li> <li> <p>
                <code>association.subnet-id</code> - The ID of the subnet
                involved in the association.</p> </li> <li> <p>
                <code>association.main</code> - Indicates whether the route
                table is the main route table for the VPC (<code>true</code> |
                <code>false</code>). Route tables that do not have an
                association ID are not returned in the response.</p> </li> <li>
                <p> <code>owner-id</code> - The ID of the Amazon Web Services
                account that owns the route table.</p> </li> <li> <p>
                <code>route-table-id</code> - The ID of the route table.</p>
                </li> <li> <p> <code>route.destination-cidr-block</code> - The
                IPv4 CIDR range specified in a route in the table.</p> </li>
                <li> <p> <code>route.destination-ipv6-cidr-block</code> - The
                IPv6 CIDR range specified in a route in the route table.</p>
                </li> <li> <p> <code>route.destination-prefix-list-id</code> -
                The ID (prefix) of the Amazon Web Service specified in a route
                in the table.</p> </li> <li> <p>
                <code>route.egress-only-internet-gateway-id</code> - The ID of
                an egress-only Internet gateway specified in a route in the
                route table.</p> </li> <li> <p> <code>route.gateway-id</code> -
                The ID of a gateway specified in a route in the table.</p> </li>
                <li> <p> <code>route.instance-id</code> - The ID of an instance
                specified in a route in the table.</p> </li> <li> <p>
                <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p>
                </li> <li> <p> <code>route.transit-gateway-id</code> - The ID of
                a transit gateway.</p> </li> <li> <p> <code>route.origin</code>
                - Describes how the route was created.
                <code>CreateRouteTable</code> indicates that the route was
                automatically created when the route table was created;
                <code>CreateRoute</code> indicates that the route was manually
                added to the route table; <code>EnableVgwRoutePropagation</code>
                indicates that the route was propagated by route
                propagation.</p> </li> <li> <p> <code>route.state</code> - The
                state of a route in the route table (<code>active</code> |
                <code>blackhole</code>). The blackhole state indicates that the
                route's target isn't available (for example, the specified
                gateway isn't attached to the VPC, the specified NAT instance
                has been terminated, and so on).</p> </li> <li> <p>
                <code>route.vpc-peering-connection-id</code> - The ID of a VPC
                peering connection specified in a route in the table.</p> </li>
                <li> <p> <code>tag</code>:&lt;key&gt; - The key/value
                combination of a tag assigned to the resource. Use the tag key
                in the filter name and the tag value as the filter value. For
                example, to find all resources that have a tag with the key
                <code>Owner</code> and the value <code>TeamA</code>, specify
                <code>tag:Owner</code> for the filter name and
                <code>TeamA</code> for the filter value.</p> </li> <li> <p>
                <code>tag-key</code> - The key of a tag assigned to the
                resource. Use this filter to find all resources assigned a tag
                with a specific key, regardless of the tag value.</p> </li> <li>
                <p> <code>vpc-id</code> - The ID of the VPC for the route
                table.</p> </li> </ul>
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
        RouteTableId:
          allOf:
            - $ref: '#/components/schemas/DescribeRouteTablesMaxResults'
            - description: >-
                The maximum number of results to return with a single call. To
                retrieve the remaining results, make another call with the
                returned <code>nextToken</code> value.
    DescribeRouteTablesResult:
      type: object
      example:
        RouteTables:
          - Associations:
              - Main: true
                RouteTableAssociationId: rtbassoc-d8ccddba
                RouteTableId: rtb-1f382e7d
            PropagatingVgws: []
            RouteTableId: rtb-1f382e7d
            Routes:
              - DestinationCidrBlock: 10.0.0.0/16
                GatewayId: local
                State: active
            Tags: []
            VpcId: vpc-a01106c2
      properties:
        routeTableSet:
          allOf:
            - $ref: '#/components/schemas/RouteTableList'
            - description: Information about one or more route tables.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The token to use to retrieve the next page of results. This
                value is <code>null</code> when there are no more results to
                return.
      description: Contains the output of DescribeRouteTables.
    DiskImage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/VolumeDetail'
            - description: Information about the volume.
      description: Describes a disk image.
    DiskImageDescription:
      type: object
      properties:
        checksum:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The checksum computed for the disk image.
        format:
          allOf:
            - $ref: '#/components/schemas/DiskImageFormat'
            - description: The disk image format.
        importManifestUrl:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>A presigned URL for the import manifest stored in Amazon S3.
                For information about creating a presigned URL for an Amazon S3
                object, read the "Query String Request Authentication
                Alternative" section of the <a
                href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating
                REST Requests</a> topic in the <i>Amazon Simple Storage Service
                Developer Guide</i>.</p> <p>For information about the import
                manifest referenced by this API action, see <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM
                Import Manifest</a>.</p>
        size:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The size of the disk image, in GiB.
      description: Describes a disk image.
    DiskImageFormat:
      type: string
      enum:
        - VMDK
        - RAW
        - VHD
    DiskImageList:
      type: array
      items:
        $ref: '#/components/schemas/DiskImage'
    DiskImageVolumeDescription:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The volume identifier.
        size:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The size of the volume, in GiB.
      description: Describes a disk image volume.
    Filter:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The name of the filter. Filter names are case-sensitive.
        Value:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: >-
                The filter values. Filter values are case-sensitive. If you
                specify multiple values for a filter, the values are joined with
                an <code>OR</code>, and the request returns all results that
                match any of the specified values.
      description: >-
        <p>A filter name and value pair that is used to return a more specific
        list of results from a describe operation. Filters can be used to match
        a set of resources by specific criteria, such as tags, attributes, or
        IDs.</p> <p>If you specify multiple filters, the filters are joined with
        an <code>AND</code>, and the request returns only results that match all
        of the specified filters.</p>
    FilterList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Filter'
          - xml:
              name: Filter
    ImportInstanceLaunchSpecification:
      type: object
      properties:
        additionalInfo:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Reserved.
        architecture:
          allOf:
            - $ref: '#/components/schemas/ArchitectureValues'
            - description: The architecture of the instance.
        GroupId:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdStringList'
            - description: The security group IDs.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupStringList'
            - description: The security group names.
        instanceInitiatedShutdownBehavior:
          allOf:
            - $ref: '#/components/schemas/ShutdownBehavior'
            - description: >-
                Indicates whether an instance stops or terminates when you
                initiate shutdown from the instance (using the operating system
                command for system shutdown).
        instanceType:
          allOf:
            - $ref: '#/components/schemas/InstanceType'
            - description: >-
                The instance type. For more information about the instance types
                that you can import, see <a
                href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance
                Types</a> in the VM Import/Export User Guide.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether monitoring is enabled.
        placement:
          allOf:
            - $ref: '#/components/schemas/Placement'
            - description: The placement information for the instance.
        privateIpAddress:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                [EC2-VPC] An available IP address from the IP address range of
                the subnet.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/SubnetId'
            - description: '[EC2-VPC] The ID of the subnet in which to launch the instance.'
        userData:
          allOf:
            - $ref: '#/components/schemas/UserData'
            - description: The Base64-encoded user data to make available to the instance.
      description: Describes the launch specification for VM import.
    ImportInstanceRequest:
      type: object
      required:
        - Platform
      title: ImportInstanceRequest
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description for the instance being imported.
        diskImage:
          allOf:
            - $ref: '#/components/schemas/DiskImageList'
            - description: The disk image.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
        launchSpecification:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceLaunchSpecification'
            - description: The launch specification.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: The instance operating system.
    ImportInstanceResult:
      type: object
      properties:
        conversionTask:
          allOf:
            - $ref: '#/components/schemas/ConversionTask'
            - description: Information about the conversion task.
    ImportInstanceTaskDetails:
      type: object
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the task.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        platform:
          allOf:
            - $ref: '#/components/schemas/PlatformValues'
            - description: The instance operating system.
        volumes:
          allOf:
            - $ref: '#/components/schemas/ImportInstanceVolumeDetailSet'
            - description: The volumes.
      description: Describes an import instance task.
    ImportInstanceVolumeDetailItem:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone where the resulting instance will reside.
        bytesConverted:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of bytes converted so far.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the task.
        image:
          allOf:
            - $ref: '#/components/schemas/DiskImageDescription'
            - description: The image.
        status:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status of the import of this particular disk image.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status information or errors related to the disk image.
        volume:
          allOf:
            - $ref: '#/components/schemas/DiskImageVolumeDescription'
            - description: The volume.
      description: Describes an import volume task.
    ImportInstanceVolumeDetailSet:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ImportInstanceVolumeDetailItem'
          - xml:
              name: item
    ImportVolumeTaskDetails:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The Availability Zone where the resulting volume will reside.
        bytesConverted:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The number of bytes converted so far.
        description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The description you provided when starting the import volume
                task.
        image:
          allOf:
            - $ref: '#/components/schemas/DiskImageDescription'
            - description: The image.
        volume:
          allOf:
            - $ref: '#/components/schemas/DiskImageVolumeDescription'
            - description: The volume.
      description: Describes an import volume task.
    InstanceId:
      type: string
    InstanceIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceId'
          - xml:
              name: InstanceId
    InstanceMonitoring:
      type: object
      properties:
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        monitoring:
          allOf:
            - $ref: '#/components/schemas/Monitoring'
            - description: The monitoring for the instance.
      description: Describes the monitoring of an instance.
    InstanceMonitoringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceMonitoring'
          - xml:
              name: item
    InstanceState:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: >-
                <p>The state of the instance as a 16-bit unsigned integer. </p>
                <p>The high byte is all of the bits between 2^8 and (2^16)-1,
                which equals decimal values between 256 and 65,535. These
                numerical values are used for internal purposes and should be
                ignored.</p> <p>The low byte is all of the bits between 2^0 and
                (2^8)-1, which equals decimal values between 0 and 255. </p>
                <p>The valid values for instance-state-code will all be in the
                range of the low byte and they are:</p> <ul> <li> <p>
                <code>0</code> : <code>pending</code> </p> </li> <li> <p>
                <code>16</code> : <code>running</code> </p> </li> <li> <p>
                <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p>
                <code>48</code> : <code>terminated</code> </p> </li> <li> <p>
                <code>64</code> : <code>stopping</code> </p> </li> <li> <p>
                <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You
                can ignore the high byte value by zeroing out all of the bits
                above 2^8 or 256 in decimal.</p>
        name:
          allOf:
            - $ref: '#/components/schemas/InstanceStateName'
            - description: The current state of the instance.
      description: Describes the current state of an instance.
    InstanceStateChange:
      type: object
      properties:
        currentState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The current state of the instance.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the instance.
        previousState:
          allOf:
            - $ref: '#/components/schemas/InstanceState'
            - description: The previous state of the instance.
      description: Describes an instance state change.
    InstanceStateChangeList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceStateChange'
          - xml:
              name: item
    InstanceStateName:
      type: string
      enum:
        - pending
        - running
        - shutting-down
        - terminated
        - stopping
        - stopped
    InstanceType:
      type: string
      enum:
        - a1.medium
        - a1.large
        - a1.xlarge
        - a1.2xlarge
        - a1.4xlarge
        - a1.metal
        - c1.medium
        - c1.xlarge
        - c3.large
        - c3.xlarge
        - c3.2xlarge
        - c3.4xlarge
        - c3.8xlarge
        - c4.large
        - c4.xlarge
        - c4.2xlarge
        - c4.4xlarge
        - c4.8xlarge
        - c5.large
        - c5.xlarge
        - c5.2xlarge
        - c5.4xlarge
        - c5.9xlarge
        - c5.12xlarge
        - c5.18xlarge
        - c5.24xlarge
        - c5.metal
        - c5a.large
        - c5a.xlarge
        - c5a.2xlarge
        - c5a.4xlarge
        - c5a.8xlarge
        - c5a.12xlarge
        - c5a.16xlarge
        - c5a.24xlarge
        - c5ad.large
        - c5ad.xlarge
        - c5ad.2xlarge
        - c5ad.4xlarge
        - c5ad.8xlarge
        - c5ad.12xlarge
        - c5ad.16xlarge
        - c5ad.24xlarge
        - c5d.large
        - c5d.xlarge
        - c5d.2xlarge
        - c5d.4xlarge
        - c5d.9xlarge
        - c5d.12xlarge
        - c5d.18xlarge
        - c5d.24xlarge
        - c5d.metal
        - c5n.large
        - c5n.xlarge
        - c5n.2xlarge
        - c5n.4xlarge
        - c5n.9xlarge
        - c5n.18xlarge
        - c5n.metal
        - c6g.medium
        - c6g.large
        - c6g.xlarge
        - c6g.2xlarge
        - c6g.4xlarge
        - c6g.8xlarge
        - c6g.12xlarge
        - c6g.16xlarge
        - c6g.metal
        - c6gd.medium
        - c6gd.large
        - c6gd.xlarge
        - c6gd.2xlarge
        - c6gd.4xlarge
        - c6gd.8xlarge
        - c6gd.12xlarge
        - c6gd.16xlarge
        - c6gd.metal
        - c6gn.medium
        - c6gn.large
        - c6gn.xlarge
        - c6gn.2xlarge
        - c6gn.4xlarge
        - c6gn.8xlarge
        - c6gn.12xlarge
        - c6gn.16xlarge
        - c6i.large
        - c6i.xlarge
        - c6i.2xlarge
        - c6i.4xlarge
        - c6i.8xlarge
        - c6i.12xlarge
        - c6i.16xlarge
        - c6i.24xlarge
        - c6i.32xlarge
        - c6i.metal
        - cc1.4xlarge
        - cc2.8xlarge
        - cg1.4xlarge
        - cr1.8xlarge
        - d2.xlarge
        - d2.2xlarge
        - d2.4xlarge
        - d2.8xlarge
        - d3.xlarge
        - d3.2xlarge
        - d3.4xlarge
        - d3.8xlarge
        - d3en.xlarge
        - d3en.2xlarge
        - d3en.4xlarge
        - d3en.6xlarge
        - d3en.8xlarge
        - d3en.12xlarge
        - dl1.24xlarge
        - f1.2xlarge
        - f1.4xlarge
        - f1.16xlarge
        - g2.2xlarge
        - g2.8xlarge
        - g3.4xlarge
        - g3.8xlarge
        - g3.16xlarge
        - g3s.xlarge
        - g4ad.xlarge
        - g4ad.2xlarge
        - g4ad.4xlarge
        - g4ad.8xlarge
        - g4ad.16xlarge
        - g4dn.xlarge
        - g4dn.2xlarge
        - g4dn.4xlarge
        - g4dn.8xlarge
        - g4dn.12xlarge
        - g4dn.16xlarge
        - g4dn.metal
        - g5.xlarge
        - g5.2xlarge
        - g5.4xlarge
        - g5.8xlarge
        - g5.12xlarge
        - g5.16xlarge
        - g5.24xlarge
        - g5.48xlarge
        - g5g.xlarge
        - g5g.2xlarge
        - g5g.4xlarge
        - g5g.8xlarge
        - g5g.16xlarge
        - g5g.metal
        - hi1.4xlarge
        - hpc6a.48xlarge
        - hs1.8xlarge
        - h1.2xlarge
        - h1.4xlarge
        - h1.8xlarge
        - h1.16xlarge
        - i2.xlarge
        - i2.2xlarge
        - i2.4xlarge
        - i2.8xlarge
        - i3.large
        - i3.xlarge
        - i3.2xlarge
        - i3.4xlarge
        - i3.8xlarge
        - i3.16xlarge
        - i3.metal
        - i3en.large
        - i3en.xlarge
        - i3en.2xlarge
        - i3en.3xlarge
        - i3en.6xlarge
        - i3en.12xlarge
        - i3en.24xlarge
        - i3en.metal
        - im4gn.large
        - im4gn.xlarge
        - im4gn.2xlarge
        - im4gn.4xlarge
        - im4gn.8xlarge
        - im4gn.16xlarge
        - inf1.xlarge
        - inf1.2xlarge
        - inf1.6xlarge
        - inf1.24xlarge
        - is4gen.medium
        - is4gen.large
        - is4gen.xlarge
        - is4gen.2xlarge
        - is4gen.4xlarge
        - is4gen.8xlarge
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        - m2.xlarge
        - m2.2xlarge
        - m2.4xlarge
        - m3.medium
        - m3.large
        - m3.xlarge
        - m3.2xlarge
        - m4.large
        - m4.xlarge
        - m4.2xlarge
        - m4.4xlarge
        - m4.10xlarge
        - m4.16xlarge
        - m5.large
        - m5.xlarge
        - m5.2xlarge
        - m5.4xlarge
        - m5.8xlarge
        - m5.12xlarge
        - m5.16xlarge
        - m5.24xlarge
        - m5.metal
        - m5a.large
        - m5a.xlarge
        - m5a.2xlarge
        - m5a.4xlarge
        - m5a.8xlarge
        - m5a.12xlarge
        - m5a.16xlarge
        - m5a.24xlarge
        - m5ad.large
        - m5ad.xlarge
        - m5ad.2xlarge
        - m5ad.4xlarge
        - m5ad.8xlarge
        - m5ad.12xlarge
        - m5ad.16xlarge
        - m5ad.24xlarge
        - m5d.large
        - m5d.xlarge
        - m5d.2xlarge
        - m5d.4xlarge
        - m5d.8xlarge
        - m5d.12xlarge
        - m5d.16xlarge
        - m5d.24xlarge
        - m5d.metal
        - m5dn.large
        - m5dn.xlarge
        - m5dn.2xlarge
        - m5dn.4xlarge
        - m5dn.8xlarge
        - m5dn.12xlarge
        - m5dn.16xlarge
        - m5dn.24xlarge
        - m5dn.metal
        - m5n.large
        - m5n.xlarge
        - m5n.2xlarge
        - m5n.4xlarge
        - m5n.8xlarge
        - m5n.12xlarge
        - m5n.16xlarge
        - m5n.24xlarge
        - m5n.metal
        - m5zn.large
        - m5zn.xlarge
        - m5zn.2xlarge
        - m5zn.3xlarge
        - m5zn.6xlarge
        - m5zn.12xlarge
        - m5zn.metal
        - m6a.large
        - m6a.xlarge
        - m6a.2xlarge
        - m6a.4xlarge
        - m6a.8xlarge
        - m6a.12xlarge
        - m6a.16xlarge
        - m6a.24xlarge
        - m6a.32xlarge
        - m6a.48xlarge
        - m6g.metal
        - m6g.medium
        - m6g.large
        - m6g.xlarge
        - m6g.2xlarge
        - m6g.4xlarge
        - m6g.8xlarge
        - m6g.12xlarge
        - m6g.16xlarge
        - m6gd.metal
        - m6gd.medium
        - m6gd.large
        - m6gd.xlarge
        - m6gd.2xlarge
        - m6gd.4xlarge
        - m6gd.8xlarge
        - m6gd.12xlarge
        - m6gd.16xlarge
        - m6i.large
        - m6i.xlarge
        - m6i.2xlarge
        - m6i.4xlarge
        - m6i.8xlarge
        - m6i.12xlarge
        - m6i.16xlarge
        - m6i.24xlarge
        - m6i.32xlarge
        - m6i.metal
        - mac1.metal
        - p2.xlarge
        - p2.8xlarge
        - p2.16xlarge
        - p3.2xlarge
        - p3.8xlarge
        - p3.16xlarge
        - p3dn.24xlarge
        - p4d.24xlarge
        - r3.large
        - r3.xlarge
        - r3.2xlarge
        - r3.4xlarge
        - r3.8xlarge
        - r4.large
        - r4.xlarge
        - r4.2xlarge
        - r4.4xlarge
        - r4.8xlarge
        - r4.16xlarge
        - r5.large
        - r5.xlarge
        - r5.2xlarge
        - r5.4xlarge
        - r5.8xlarge
        - r5.12xlarge
        - r5.16xlarge
        - r5.24xlarge
        - r5.metal
        - r5a.large
        - r5a.xlarge
        - r5a.2xlarge
        - r5a.4xlarge
        - r5a.8xlarge
        - r5a.12xlarge
        - r5a.16xlarge
        - r5a.24xlarge
        - r5ad.large
        - r5ad.xlarge
        - r5ad.2xlarge
        - r5ad.4xlarge
        - r5ad.8xlarge
        - r5ad.12xlarge
        - r5ad.16xlarge
        - r5ad.24xlarge
        - r5b.large
        - r5b.xlarge
        - r5b.2xlarge
        - r5b.4xlarge
        - r5b.8xlarge
        - r5b.12xlarge
        - r5b.16xlarge
        - r5b.24xlarge
        - r5b.metal
        - r5d.large
        - r5d.xlarge
        - r5d.2xlarge
        - r5d.4xlarge
        - r5d.8xlarge
        - r5d.12xlarge
        - r5d.16xlarge
        - r5d.24xlarge
        - r5d.metal
        - r5dn.large
        - r5dn.xlarge
        - r5dn.2xlarge
        - r5dn.4xlarge
        - r5dn.8xlarge
        - r5dn.12xlarge
        - r5dn.16xlarge
        - r5dn.24xlarge
        - r5dn.metal
        - r5n.large
        - r5n.xlarge
        - r5n.2xlarge
        - r5n.4xlarge
        - r5n.8xlarge
        - r5n.12xlarge
        - r5n.16xlarge
        - r5n.24xlarge
        - r5n.metal
        - r6g.medium
        - r6g.large
        - r6g.xlarge
        - r6g.2xlarge
        - r6g.4xlarge
        - r6g.8xlarge
        - r6g.12xlarge
        - r6g.16xlarge
        - r6g.metal
        - r6gd.medium
        - r6gd.large
        - r6gd.xlarge
        - r6gd.2xlarge
        - r6gd.4xlarge
        - r6gd.8xlarge
        - r6gd.12xlarge
        - r6gd.16xlarge
        - r6gd.metal
        - r6i.large
        - r6i.xlarge
        - r6i.2xlarge
        - r6i.4xlarge
        - r6i.8xlarge
        - r6i.12xlarge
        - r6i.16xlarge
        - r6i.24xlarge
        - r6i.32xlarge
        - r6i.metal
        - t1.micro
        - t2.nano
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - t2.xlarge
        - t2.2xlarge
        - t3.nano
        - t3.micro
        - t3.small
        - t3.medium
        - t3.large
        - t3.xlarge
        - t3.2xlarge
        - t3a.nano
        - t3a.micro
        - t3a.small
        - t3a.medium
        - t3a.large
        - t3a.xlarge
        - t3a.2xlarge
        - t4g.nano
        - t4g.micro
        - t4g.small
        - t4g.medium
        - t4g.large
        - t4g.xlarge
        - t4g.2xlarge
        - u-6tb1.56xlarge
        - u-6tb1.112xlarge
        - u-9tb1.112xlarge
        - u-12tb1.112xlarge
        - u-6tb1.metal
        - u-9tb1.metal
        - u-12tb1.metal
        - u-18tb1.metal
        - u-24tb1.metal
        - vt1.3xlarge
        - vt1.6xlarge
        - vt1.24xlarge
        - x1.16xlarge
        - x1.32xlarge
        - x1e.xlarge
        - x1e.2xlarge
        - x1e.4xlarge
        - x1e.8xlarge
        - x1e.16xlarge
        - x1e.32xlarge
        - x2iezn.2xlarge
        - x2iezn.4xlarge
        - x2iezn.6xlarge
        - x2iezn.8xlarge
        - x2iezn.12xlarge
        - x2iezn.metal
        - x2gd.medium
        - x2gd.large
        - x2gd.xlarge
        - x2gd.2xlarge
        - x2gd.4xlarge
        - x2gd.8xlarge
        - x2gd.12xlarge
        - x2gd.16xlarge
        - x2gd.metal
        - z1d.large
        - z1d.xlarge
        - z1d.2xlarge
        - z1d.3xlarge
        - z1d.6xlarge
        - z1d.12xlarge
        - z1d.metal
        - x2idn.16xlarge
        - x2idn.24xlarge
        - x2idn.32xlarge
        - x2iedn.xlarge
        - x2iedn.2xlarge
        - x2iedn.4xlarge
        - x2iedn.8xlarge
        - x2iedn.16xlarge
        - x2iedn.24xlarge
        - x2iedn.32xlarge
        - c6a.large
        - c6a.xlarge
        - c6a.2xlarge
        - c6a.4xlarge
        - c6a.8xlarge
        - c6a.12xlarge
        - c6a.16xlarge
        - c6a.24xlarge
        - c6a.32xlarge
        - c6a.48xlarge
        - c6a.metal
        - m6a.metal
        - i4i.large
        - i4i.xlarge
        - i4i.2xlarge
        - i4i.4xlarge
        - i4i.8xlarge
        - i4i.16xlarge
        - i4i.32xlarge
    Integer:
      type: integer
    Long:
      type: integer
    MonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: MonitorInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The IDs of the instances.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
    MonitorInstancesResult:
      type: object
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceMonitoringList'
            - description: The monitoring information.
    Monitoring:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/MonitoringState'
            - description: >-
                Indicates whether detailed monitoring is enabled. Otherwise,
                basic monitoring is enabled.
      description: Describes the monitoring of an instance.
    MonitoringState:
      type: string
      enum:
        - disabled
        - disabling
        - enabled
        - pending
    Placement:
      type: object
      properties:
        availabilityZone:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The Availability Zone of the instance.</p> <p>If not
                specified, an Availability Zone will be automatically chosen for
                you based on the load balancing criteria for the Region.</p>
                <p>This parameter is not supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        affinity:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The affinity setting for the instance on the Dedicated Host.
                This parameter is not supported for the <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
                command.</p> <p>This parameter is not supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        groupName:
          allOf:
            - $ref: '#/components/schemas/PlacementGroupName'
            - description: The name of the placement group the instance is in.
        partitionNumber:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: >-
                <p>The number of the partition that the instance is in. Valid
                only if the placement group strategy is set to
                <code>partition</code>.</p> <p>This parameter is not supported
                by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        hostId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The ID of the Dedicated Host on which the instance resides.
                This parameter is not supported for the <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
                command.</p> <p>This parameter is not supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        tenancy:
          allOf:
            - $ref: '#/components/schemas/Tenancy'
            - description: >-
                <p>The tenancy of the instance (if the instance is running in a
                VPC). An instance with a tenancy of <code>dedicated</code> runs
                on single-tenant hardware. The <code>host</code> tenancy is not
                supported for the <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a>
                command.</p> <p>This parameter is not supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
                <p>T3 instances that use the <code>unlimited</code> CPU credit
                option do not support <code>host</code> tenancy.</p>
        spreadDomain:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>Reserved for future use.</p> <p>This parameter is not
                supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        hostResourceGroupArn:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The ARN of the host resource group in which to launch the
                instances. If you specify a host resource group ARN, omit the
                <b>Tenancy</b> parameter or set it to <code>host</code>.</p>
                <p>This parameter is not supported by <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
      description: Describes the placement of an instance.
    PlacementGroupName:
      type: string
    PlatformValues:
      type: string
      enum:
        - Windows
    PropagatingVgw:
      type: object
      properties:
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the virtual private gateway.
      description: Describes a virtual private gateway propagating route.
    PropagatingVgwList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PropagatingVgw'
          - xml:
              name: item
    RebootInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: RebootInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The instance IDs.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
    Route:
      type: object
      properties:
        destinationCidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv4 CIDR block used for the destination match.
        destinationIpv6CidrBlock:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The IPv6 CIDR block used for the destination match.
        destinationPrefixListId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The prefix of the Amazon Web Service.
        egressOnlyInternetGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the egress-only internet gateway.
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a gateway attached to your VPC.
        instanceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a NAT instance in your VPC.
        instanceOwnerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of Amazon Web Services account that owns the instance.
        natGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a NAT gateway.
        transitGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a transit gateway.
        localGatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the local gateway.
        carrierGatewayId:
          allOf:
            - $ref: '#/components/schemas/CarrierGatewayId'
            - description: The ID of the carrier gateway.
        networkInterfaceId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the network interface.
        origin:
          allOf:
            - $ref: '#/components/schemas/RouteOrigin'
            - description: >-
                <p>Describes how the route was created.</p> <ul> <li> <p>
                <code>CreateRouteTable</code> - The route was automatically
                created when the route table was created.</p> </li> <li> <p>
                <code>CreateRoute</code> - The route was manually added to the
                route table.</p> </li> <li> <p>
                <code>EnableVgwRoutePropagation</code> - The route was
                propagated by route propagation.</p> </li> </ul>
        state:
          allOf:
            - $ref: '#/components/schemas/RouteState'
            - description: >-
                The state of the route. The <code>blackhole</code> state
                indicates that the route's target isn't available (for example,
                the specified gateway isn't attached to the VPC, or the
                specified NAT instance has been terminated).
        vpcPeeringConnectionId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of a VPC peering connection.
        coreNetworkArn:
          allOf:
            - $ref: '#/components/schemas/CoreNetworkArn'
            - description: The Amazon Resource Name (ARN) of the core network.
      description: Describes a route in a route table.
    RouteList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Route'
          - xml:
              name: item
    RouteOrigin:
      type: string
      enum:
        - CreateRouteTable
        - CreateRoute
        - EnableVgwRoutePropagation
    RouteState:
      type: string
      enum:
        - active
        - blackhole
    RouteTable:
      type: object
      properties:
        associationSet:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationList'
            - description: >-
                The associations between the route table and one or more subnets
                or a gateway.
        propagatingVgwSet:
          allOf:
            - $ref: '#/components/schemas/PropagatingVgwList'
            - description: Any virtual private gateway (VGW) propagating routes.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route table.
        routeSet:
          allOf:
            - $ref: '#/components/schemas/RouteList'
            - description: The routes in the route table.
        tagSet:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: Any tags assigned to the route table.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the VPC.
        ownerId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The ID of the Amazon Web Services account that owns the route
                table.
      description: Describes a route table.
    RouteTableAssociation:
      type: object
      properties:
        main:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether this is the main route table.
        routeTableAssociationId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the association.
        routeTableId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the route table.
        subnetId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The ID of the subnet. A subnet ID is not returned for an
                implicit association.
        gatewayId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID of the internet gateway or virtual private gateway.
        associationState:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationState'
            - description: The state of the association.
      description: Describes an association between a route table and a subnet or gateway.
    RouteTableAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTableAssociation'
          - xml:
              name: item
    RouteTableAssociationState:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/RouteTableAssociationStateCode'
            - description: The state of the association.
        statusMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The status message, if applicable.
      description: >-
        Describes the state of an association between a route table and a subnet
        or gateway.
    RouteTableAssociationStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failed
    RouteTableId:
      type: string
    RouteTableList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/RouteTable'
          - xml:
              name: item
    S3Storage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The access key ID of the owner of the bucket. Before you specify
                a value for your access key ID, review and follow the guidance
                in <a
                href="https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best
                Practices for Managing Amazon Web Services Access Keys</a>.
        bucket:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The bucket in which to store the AMI. You can specify a bucket
                that you already own or a new bucket that Amazon EC2 creates on
                your behalf. If you specify a bucket that belongs to someone
                else, Amazon EC2 returns an error.
        prefix:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The beginning of the file name of the AMI.
        uploadPolicy:
          allOf:
            - $ref: '#/components/schemas/Blob'
            - description: >-
                An Amazon S3 upload policy that gives Amazon EC2 permission to
                upload items into Amazon S3 on your behalf.
        uploadPolicySignature:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The signature of the JSON document.
      description: >-
        Describes the storage parameters for Amazon S3 and Amazon S3 buckets for
        an instance store-backed AMI.
    SecurityGroupId:
      type: string
    SecurityGroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          - xml:
              name: SecurityGroupId
    SecurityGroupName:
      type: string
    SecurityGroupStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SecurityGroupName'
          - xml:
              name: SecurityGroup
    ShutdownBehavior:
      type: string
      enum:
        - stop
        - terminate
    StartInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StartInstancesRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceIdStringList'
        additionalInfo:
          $ref: '#/components/schemas/String'
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
    StartInstancesResult:
      type: object
      example:
        StartingInstances:
          - CurrentState:
              Code: 0
              Name: pending
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 80
              Name: stopped
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStateChangeList'
            - description: Information about the started instances.
    StopInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StopInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                <p>Hibernates the instance if the instance was enabled for
                hibernation at launch. If the instance cannot hibernate
                successfully, a normal shutdown occurs. For more information,
                see <a
                href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
                your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>
                Default: <code>false</code> </p>
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
        force:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                <p>Forces the instances to stop. The instances do not have an
                opportunity to flush file system caches or file system metadata.
                If you use this option, you must perform file system check and
                repair procedures. This option is not recommended for Windows
                instances.</p> <p>Default: <code>false</code> </p>
    StopInstancesResult:
      type: object
      example:
        StoppingInstances:
          - CurrentState:
              Code: 64
              Name: stopping
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 16
              Name: running
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceStateChangeList'
            - description: Information about the stopped instances.
    Storage:
      type: object
      properties:
        undefined:
          allOf:
            - $ref: '#/components/schemas/S3Storage'
            - description: An Amazon S3 storage location.
      description: Describes the storage location for an instance store-backed AMI.
    String:
      type: string
    SubnetId:
      type: string
    Tag:
      type: object
      properties:
        key:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The key of the tag.</p> <p>Constraints: Tag keys are
                case-sensitive and accept a maximum of 127 Unicode characters.
                May not begin with <code>aws:</code>.</p>
        value:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                <p>The value of the tag.</p> <p>Constraints: Tag values are
                case-sensitive and accept a maximum of 256 Unicode
                characters.</p>
      description: Describes a tag.
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: item
    Tenancy:
      type: string
      enum:
        - default
        - dedicated
        - host
    UnmonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: UnmonitorInstancesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: '#/components/schemas/InstanceIdStringList'
            - description: The IDs of the instances.
        dryRun:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: >-
                Checks whether you have the required permissions for the action,
                without actually making the request, and provides an error
                response. If you have the required permissions, the error
                response is <code>DryRunOperation</code>. Otherwise, it is
                <code>UnauthorizedOperation</code>.
    UnmonitorInstancesResult:
      type: object
      properties:
        instancesSet:
          allOf:
            - $ref: '#/components/schemas/InstanceMonitoringList'
            - description: The monitoring information.
    UserData:
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: >-
                The user data. If you are using an Amazon Web Services SDK or
                command line tool, Base64-encoding is performed for you, and you
                can load the text from a file. Otherwise, you must provide
                Base64-encoded text.
      description: Describes the user data for an instance.
    ValueStringList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/String'
          - xml:
              name: item
    VolumeDetail:
      type: object
      required:
        - Size
      properties:
        size:
          type: integer
          description: The size of the volume, in GiB.
      description: Describes an EBS volume.
  x-stackQL-resources:
    route_tables_native:
      name: route_tables_native
      x-cfn-schema-name: RouteTable
      x-example-where-clause: "WHERE region = 'us-east-1' AND RouteTableId = '<RouteTableId>'"
      x-type: native
      methods:
        describe_route_tables:
          serviceName: ec2
          operation:
            $ref: '#/paths/~1?Action=DescribeRouteTables&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/routeTableSet/item
            openAPIDocKey: '200'
      id: aws.ec2.route_tables_native
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/route_tables_native/methods/describe_route_tables'
        update: []
      title: route_tables_native
    instances:
      name: instances
      methods:
        bundle:
          operation:
            $ref: '#/paths/~1?Action=BundleInstance&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        import:
          operation:
            $ref: '#/paths/~1?Action=ImportInstance&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        monitor:
          operation:
            $ref: '#/paths/~1?Action=MonitorInstances&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        reboot:
          operation:
            $ref: '#/paths/~1?Action=RebootInstances&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1?Action=StartInstances&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1?Action=StopInstances&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        unmonitor:
          operation:
            $ref: '#/paths/~1?Action=UnmonitorInstances&Version=2016-11-15&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      id: aws.ec2.instances
      sqlVerbs:
        delete: []
        insert: []
        select: []
        update: []
x-stackQL-config:
  queryParamTranspose:
    algorithm: AWSCanonical
  requestTranslate:
    algorithm: drop_double_underscore_params