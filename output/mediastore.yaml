openapi: 3.0.0
info:
  title: MediaStore
  version: 1.0.0
paths: {}
components:
  schemas:
    MetricPolicy:
      type: object
      additionalProperties: false
      properties:
        ContainerLevelMetrics:
          type: string
        MetricPolicyRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/MetricPolicyRule'
      required:
        - ContainerLevelMetrics
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    MetricPolicyRule:
      type: object
      additionalProperties: false
      properties:
        ObjectGroupName:
          type: string
        ObjectGroup:
          type: string
      required:
        - ObjectGroup
        - ObjectGroupName
    CorsRule:
      type: object
      additionalProperties: false
      properties:
        AllowedMethods:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowedOrigins:
          type: array
          uniqueItems: false
          items:
            type: string
        ExposeHeaders:
          type: array
          uniqueItems: false
          items:
            type: string
        MaxAgeSeconds:
          type: integer
        AllowedHeaders:
          type: array
          uniqueItems: false
          items:
            type: string
    Container:
      type: object
      properties:
        Policy:
          type: string
        MetricPolicy:
          $ref: '#/components/schemas/MetricPolicy'
        Endpoint:
          type: string
        ContainerName:
          type: string
        CorsPolicy:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CorsRule'
        LifecyclePolicy:
          type: string
        AccessLoggingEnabled:
          type: boolean
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ContainerName
      x-stackql-resource-name: Container
x-stackql-views:
  - Container:
      name: Container
      id: aws.mediastore.Container
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.MetricPolicy.ContainerLevelMetrics') as metric_policy_container_level_metrics,
              JSON_EXTRACT(Properties, '$.MetricPolicy.MetricPolicyRules') as metric_policy_metric_policy_rules,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.ContainerName') as container_name,
              JSON_EXTRACT(Properties, '$.CorsPolicy') as cors_policy,
              JSON_EXTRACT(Properties, '$.LifecyclePolicy') as lifecycle_policy,
              JSON_EXTRACT(Properties, '$.AccessLoggingEnabled') as access_logging_enabled,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaStore::Container' ;
