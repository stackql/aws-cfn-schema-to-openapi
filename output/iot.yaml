openapi: 3.0.0
info:
  title: IoT
  version: 1.0.0
paths: {}
components:
  schemas:
    AuditCheckConfigurations:
      description: Specifies which audit checks are enabled and disabled for this account.
      type: object
      properties:
        AuthenticatedCognitoRoleOverlyPermissiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        CaCertificateExpiringCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        CaCertificateKeyQualityCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        ConflictingClientIdsCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        DeviceCertificateExpiringCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        DeviceCertificateKeyQualityCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        DeviceCertificateSharedCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        IotPolicyOverlyPermissiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        IotRoleAliasAllowsAccessToUnusedServicesCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        IotRoleAliasOverlyPermissiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        LoggingDisabledCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        RevokedCaCertificateStillActiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        RevokedDeviceCertificateStillActiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        UnauthenticatedCognitoRoleOverlyPermissiveCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        IntermediateCaRevokedForActiveDeviceCertificatesCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
        IoTPolicyPotentialMisConfigurationCheck:
          $ref: '#/components/schemas/AuditCheckConfiguration'
      additionalProperties: false
    AuditNotificationTargetConfigurations:
      description: Information about the targets to which audit notifications are sent.
      type: object
      properties:
        Sns:
          $ref: '#/components/schemas/AuditNotificationTarget'
      additionalProperties: false
    AuditCheckConfiguration:
      description: The configuration for a specific audit check.
      type: object
      properties:
        Enabled:
          description: True if the check is enabled.
          type: boolean
      additionalProperties: false
    AuditNotificationTarget:
      type: object
      properties:
        TargetArn:
          description: >-
            The ARN of the target (SNS topic) to which audit notifications are
            sent.
          type: string
          maxLength: 2048
        RoleArn:
          description: >-
            The ARN of the role that grants permission to send notifications to
            the target.
          type: string
          minLength: 20
          maxLength: 2048
        Enabled:
          description: True if notifications to the target are enabled.
          type: boolean
      additionalProperties: false
    AccountAuditConfiguration:
      type: object
      properties:
        AccountId:
          description: >-
            Your 12-digit account ID (used as the primary identifier for the
            CloudFormation resource).
          type: string
          minLength: 12
          maxLength: 12
        AuditCheckConfigurations:
          $ref: '#/components/schemas/AuditCheckConfigurations'
        AuditNotificationTargetConfigurations:
          $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
        RoleArn:
          description: >-
            The ARN of the role that grants permission to AWS IoT to access
            information about your devices, policies, certificates and other
            items as required when performing an audit.
          type: string
          minLength: 20
          maxLength: 2048
      required:
        - AccountId
        - AuditCheckConfigurations
        - RoleArn
      x-stackql-resource-name: AccountAuditConfiguration
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
    Authorizer:
      type: object
      properties:
        AuthorizerFunctionArn:
          type: string
        Arn:
          type: string
        AuthorizerName:
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        SigningDisabled:
          type: boolean
        Status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        TokenKeyName:
          type: string
        TokenSigningPublicKeys:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9:_-]+':
              type: string
              maxLength: 5120
        EnableCachingForHttp:
          type: boolean
        Tags:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AuthorizerFunctionArn
      x-stackql-resource-name: Authorizer
    RegistrationConfig:
      type: object
      additionalProperties: false
      properties:
        TemplateBody:
          type: string
          pattern: '[\s\S]*'
          minLength: 0
          maxLength: 10240
        RoleArn:
          type: string
          pattern: arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          minLength: 20
          maxLength: 2048
        TemplateName:
          type: string
          pattern: ^[0-9A-Za-z_-]+$
          minLength: 1
          maxLength: 36
    CACertificate:
      type: object
      properties:
        CACertificatePem:
          type: string
          pattern: '[\s\S]*'
          minLength: 1
          maxLength: 65536
        VerificationCertificatePem:
          type: string
          description: The private key verification certificate.
          pattern: '[\s\S]*'
          minLength: 1
          maxLength: 65536
        Status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        CertificateMode:
          type: string
          enum:
            - DEFAULT
            - SNI_ONLY
        AutoRegistrationStatus:
          type: string
          enum:
            - ENABLE
            - DISABLE
        RemoveAutoRegistration:
          type: boolean
        RegistrationConfig:
          $ref: '#/components/schemas/RegistrationConfig'
        Id:
          type: string
        Arn:
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - CACertificatePem
        - Status
      x-stackql-resource-name: CACertificate
    Certificate:
      type: object
      properties:
        CACertificatePem:
          type: string
          minLength: 1
          maxLength: 65536
        CertificatePem:
          type: string
          minLength: 1
          maxLength: 65536
        CertificateSigningRequest:
          type: string
        CertificateMode:
          type: string
          enum:
            - DEFAULT
            - SNI_ONLY
        Status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - REVOKED
            - PENDING_TRANSFER
            - PENDING_ACTIVATION
        Id:
          type: string
        Arn:
          type: string
      required:
        - Status
      x-stackql-resource-name: Certificate
    CustomMetric:
      type: object
      properties:
        MetricName:
          description: >-
            The name of the custom metric. This will be used in the metric
            report submitted from the device/thing. Shouldn't begin with aws: .
            Cannot be updated once defined.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        DisplayName:
          description: >-
            Field represents a friendly name in the console for the custom
            metric; it doesn't have to be unique. Don't use this name as the
            metric identifier in the device metric report. Can be updated once
            defined.
          type: string
          maxLength: 128
        MetricType:
          description: >-
            The type of the custom metric. Types include string-list,
            ip-address-list, number-list, and number.
          type: string
          enum:
            - string-list
            - ip-address-list
            - number-list
            - number
        MetricArn:
          description: The Amazon Resource Number (ARN) of the custom metric.
          type: string
          minLength: 20
          maxLength: 2048
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MetricType
      x-stackql-resource-name: CustomMetric
    Dimension:
      type: object
      properties:
        Name:
          description: A unique identifier for the dimension.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        Type:
          description: Specifies the type of the dimension.
          type: string
          enum:
            - TOPIC_FILTER
        StringValues:
          description: Specifies the value or list of values for the dimension.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          maxItems: 5
        Tags:
          description: Metadata that can be used to manage the dimension.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The ARN (Amazon resource name) of the created dimension.
          type: string
      required:
        - Type
        - StringValues
      x-stackql-resource-name: Dimension
    AuthorizerConfig:
      type: object
      properties:
        AllowAuthorizerOverride:
          type: boolean
        DefaultAuthorizerName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\w=,@-]+$
      additionalProperties: false
    ServerCertificateSummary:
      type: object
      properties:
        ServerCertificateArn:
          type: string
          pattern: >-
            ^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$
          minLength: 1
          maxLength: 2048
        ServerCertificateStatus:
          type: string
          enum:
            - INVALID
            - VALID
        ServerCertificateStatusDetail:
          type: string
      additionalProperties: false
    DomainConfiguration:
      type: object
      properties:
        DomainConfigurationName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\w.-]+$
        AuthorizerConfig:
          $ref: '#/components/schemas/AuthorizerConfig'
        DomainName:
          type: string
          minLength: 1
          maxLength: 253
        ServerCertificateArns:
          type: array
          minItems: 0
          maxItems: 1
          x-insertionOrder: true
          items:
            type: string
            pattern: >-
              ^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$
            minLength: 1
            maxLength: 2048
        ServiceType:
          type: string
          enum:
            - DATA
            - CREDENTIAL_PROVIDER
            - JOBS
        ValidationCertificateArn:
          type: string
          pattern: >-
            ^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$
        Arn:
          type: string
        DomainConfigurationStatus:
          type: string
          enum:
            - ENABLED
            - DISABLED
        DomainType:
          type: string
          enum:
            - ENDPOINT
            - AWS_MANAGED
            - CUSTOMER_MANAGED
        ServerCertificates:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ServerCertificateSummary'
        Tags:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: DomainConfiguration
    AggregationType:
      description: Aggregation types supported by Fleet Indexing
      type: object
      properties:
        Name:
          description: >-
            Fleet Indexing aggregation type names such as Statistics,
            Percentiles and Cardinality
          type: string
        Values:
          description: Fleet Indexing aggregation type values
          type: array
          x-insertionOrder: false
          items:
            type: string
      required:
        - Name
        - Values
      additionalProperties: false
    FleetMetric:
      type: object
      properties:
        MetricName:
          description: The name of the fleet metric
          type: string
        Description:
          description: The description of a fleet metric
          type: string
        QueryString:
          description: The Fleet Indexing query used by a fleet metric
          type: string
        Period:
          description: The period of metric emission in seconds
          type: integer
        AggregationField:
          description: The aggregation field to perform aggregation and metric emission
          type: string
        QueryVersion:
          description: The version of a Fleet Indexing query used by a fleet metric
          type: string
        IndexName:
          description: The index name of a fleet metric
          type: string
        Unit:
          description: The unit of data points emitted by a fleet metric
          type: string
        AggregationType:
          $ref: '#/components/schemas/AggregationType'
        MetricArn:
          description: The Amazon Resource Number (ARN) of a fleet metric metric
          type: string
        CreationDate:
          description: The creation date of a fleet metric
          type: number
        LastModifiedDate:
          description: The last modified date of a fleet metric
          type: number
        Version:
          description: The version of a fleet metric
          type: number
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MetricName
      x-stackql-resource-name: FleetMetric
    ExponentialRolloutRate:
      description: Allows you to create an exponential rate of rollout for a job.
      type: object
      properties:
        BaseRatePerMinute:
          description: >-
            The minimum number of things that will be notified of a pending job,
            per minute at the start of job rollout. This parameter allows you to
            define the initial rate of rollout.
          $ref: '#/components/schemas/BaseRatePerMinute'
        IncrementFactor:
          description: The exponential factor to increase the rate of rollout for a job.
          $ref: '#/components/schemas/IncrementFactor'
        RateIncreaseCriteria:
          description: The criteria to initiate the increase in rate of rollout for a job.
          type: object
          $ref: '#/components/schemas/RateIncreaseCriteria'
      additionalProperties: false
      required:
        - BaseRatePerMinute
        - IncrementFactor
        - RateIncreaseCriteria
    BaseRatePerMinute:
      type: integer
      minimum: 1
    IncrementFactor:
      type: number
      minimum: 1
      maximum: 5
    RateIncreaseCriteria:
      type: object
      properties:
        NumberOfNotifiedThings:
          $ref: '#/components/schemas/NumberOfNotifiedThings'
        NumberOfSucceededThings:
          $ref: '#/components/schemas/NumberOfSucceededThings'
      additionalProperties: false
    NumberOfNotifiedThings:
      type: integer
      minimum: 1
    NumberOfSucceededThings:
      type: integer
      minimum: 1
    MaximumPerMinute:
      type: integer
      minimum: 1
    AbortCriteria:
      description: The criteria that determine when and how a job abort takes place.
      type: object
      properties:
        Action:
          description: The type of job action to take to initiate the job abort.
          $ref: '#/components/schemas/Action'
        FailureType:
          description: The type of job execution failures that can initiate a job abort.
          $ref: '#/components/schemas/FailureType'
        MinNumberOfExecutedThings:
          description: >-
            The minimum number of things which must receive job execution
            notifications before the job can be aborted.
          $ref: '#/components/schemas/MinNumberOfExecutedThings'
        ThresholdPercentage:
          description: >-
            The minimum percentage of job execution failures that must occur to
            initiate the job abort.
          $ref: '#/components/schemas/ThresholdPercentage'
      additionalProperties: false
      required:
        - Action
        - FailureType
        - MinNumberOfExecutedThings
        - ThresholdPercentage
    Action:
      type: object
      additionalProperties: false
      description: The actions to be performed.
      properties:
        ClearTimer:
          $ref: '#/components/schemas/ClearTimer'
        DynamoDB:
          $ref: '#/components/schemas/DynamoDB'
        DynamoDBv2:
          $ref: '#/components/schemas/DynamoDBv2'
        Firehose:
          $ref: '#/components/schemas/Firehose'
        IotEvents:
          $ref: '#/components/schemas/IotEvents'
        IotSiteWise:
          $ref: '#/components/schemas/IotSiteWise'
        IotTopicPublish:
          $ref: '#/components/schemas/IotTopicPublish'
        Lambda:
          $ref: '#/components/schemas/Lambda'
        ResetTimer:
          $ref: '#/components/schemas/ResetTimer'
        SetTimer:
          $ref: '#/components/schemas/SetTimer'
        SetVariable:
          $ref: '#/components/schemas/SetVariable'
        Sns:
          $ref: '#/components/schemas/Sns'
        Sqs:
          $ref: '#/components/schemas/Sqs'
    FailureType:
      type: string
      enum:
        - FAILED
        - REJECTED
        - TIMED_OUT
        - ALL
    MinNumberOfExecutedThings:
      type: integer
      minimum: 1
    ThresholdPercentage:
      type: number
      maximum: 100
    InProgressTimeoutInMinutes:
      description: >-
        Specifies the amount of time, in minutes, this device has to finish
        execution of this job.
      type: integer
      minimum: 1
      maximum: 10080
    RoleArn:
      type: string
    ExpiresInSec:
      description: How number (in seconds) pre-signed URLs are valid.
      type: integer
      minimum: 60
      maximum: 3600
    RetryCriteria:
      description: Specifies how many times a failure type should be retried.
      type: object
      properties:
        NumberOfRetries:
          type: integer
          minimum: 0
          maximum: 10
        FailureType:
          $ref: '#/components/schemas/JobRetryFailureType'
      additionalProperties: false
    JobRetryFailureType:
      type: string
      enum:
        - FAILED
        - TIMED_OUT
        - ALL
    MaintenanceWindow:
      description: Specifies a start time and duration for a scheduled Job.
      type: object
      properties:
        StartTime:
          type: string
          minLength: 1
          maxLength: 256
        DurationInMinutes:
          type: integer
          minimum: 1
          maximum: 1430
      additionalProperties: false
    JobTemplate:
      type: object
      properties:
        Arn:
          type: string
        JobArn:
          description: >-
            Optional for copying a JobTemplate from a pre-existing Job
            configuration.
          type: string
        JobTemplateId:
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        Description:
          description: A description of the Job Template.
          type: string
          pattern: '[^\p{C}]+'
          maxLength: 2028
        Document:
          description: >-
            The job document. Required if you don't specify a value for
            documentSource.
          type: string
          maxLength: 32768
        DocumentSource:
          description: >-
            An S3 link to the job document to use in the template. Required if
            you don't specify a value for document.
          type: string
          minLength: 1
          maxLength: 1350
        TimeoutConfig:
          description: >-
            Specifies the amount of time each device has to finish its execution
            of the job.
          type: object
          properties:
            InProgressTimeoutInMinutes:
              $ref: '#/components/schemas/InProgressTimeoutInMinutes'
          required:
            - InProgressTimeoutInMinutes
          additionalProperties: false
        JobExecutionsRolloutConfig:
          description: Allows you to create a staged rollout of a job.
          type: object
          properties:
            ExponentialRolloutRate:
              description: >-
                The rate of increase for a job rollout. This parameter allows
                you to define an exponential rate for a job rollout.
              $ref: '#/components/schemas/ExponentialRolloutRate'
            MaximumPerMinute:
              description: >-
                The maximum number of things that will be notified of a pending
                job, per minute. This parameter allows you to create a staged
                rollout.
              $ref: '#/components/schemas/MaximumPerMinute'
          additionalProperties: false
        AbortConfig:
          description: The criteria that determine when and how a job abort takes place.
          type: object
          properties:
            CriteriaList:
              type: array
              x-insertionOrder: false
              minItems: 1
              items:
                $ref: '#/components/schemas/AbortCriteria'
          required:
            - CriteriaList
          additionalProperties: false
        PresignedUrlConfig:
          type: object
          description: Configuration for pre-signed S3 URLs.
          properties:
            RoleArn:
              $ref: '#/components/schemas/RoleArn'
            ExpiresInSec:
              $ref: '#/components/schemas/ExpiresInSec'
          required:
            - RoleArn
          additionalProperties: false
        JobExecutionsRetryConfig:
          type: object
          properties:
            RetryCriteriaList:
              type: array
              x-insertionOrder: false
              minItems: 1
              maxItems: 2
              items:
                $ref: '#/components/schemas/RetryCriteria'
          additionalProperties: false
        MaintenanceWindows:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
        Tags:
          description: Metadata that can be used to manage the JobTemplate.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - JobTemplateId
        - Description
      x-stackql-resource-name: JobTemplate
    Logging:
      type: object
      properties:
        AccountId:
          description: >-
            Your 12-digit account ID (used as the primary identifier for the
            CloudFormation resource).
          type: string
          minLength: 12
          maxLength: 12
          pattern: ^[0-9]{12}$
        RoleArn:
          description: The ARN of the role that allows IoT to write to Cloudwatch logs.
          type: string
          minLength: 20
          maxLength: 2048
        DefaultLogLevel:
          description: >-
            The log level to use. Valid values are: ERROR, WARN, INFO, DEBUG, or
            DISABLED.
          type: string
          enum:
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - DISABLED
      required:
        - AccountId
        - RoleArn
        - DefaultLogLevel
      x-stackql-resource-name: Logging
    ActionParams:
      type: object
      description: >-
        The set of parameters for this mitigation action. You can specify only
        one type of parameter (in other words, you can apply only one action for
        each defined mitigation action).
      properties:
        AddThingsToThingGroupParams:
          $ref: '#/components/schemas/AddThingsToThingGroupParams'
        EnableIoTLoggingParams:
          $ref: '#/components/schemas/EnableIoTLoggingParams'
        PublishFindingToSnsParams:
          $ref: '#/components/schemas/PublishFindingToSnsParams'
        ReplaceDefaultPolicyVersionParams:
          $ref: '#/components/schemas/ReplaceDefaultPolicyVersionParams'
        UpdateCACertificateParams:
          $ref: '#/components/schemas/UpdateCACertificateParams'
        UpdateDeviceCertificateParams:
          $ref: '#/components/schemas/UpdateDeviceCertificateParams'
      additionalProperties: false
    AddThingsToThingGroupParams:
      description: >-
        Parameters to define a mitigation action that moves devices associated
        with a certificate to one or more specified thing groups, typically for
        quarantine.
      type: object
      properties:
        OverrideDynamicGroups:
          type: boolean
          description: >-
            Specifies if this mitigation action can move the things that
            triggered the mitigation action out of one or more dynamic thing
            groups.
        ThingGroupNames:
          description: >-
            The list of groups to which you want to add the things that
            triggered the mitigation action.
          type: array
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 128
          minItems: 1
          maxItems: 10
          x-insertionOrder: false
      required:
        - ThingGroupNames
      additionalProperties: false
    EnableIoTLoggingParams:
      description: >-
        Parameters to define a mitigation action that enables AWS IoT logging at
        a specified level of detail.
      type: object
      properties:
        LogLevel:
          type: string
          enum:
            - DEBUG
            - INFO
            - ERROR
            - WARN
            - UNSET_VALUE
          description: ' Specifies which types of information are logged.'
        RoleArnForLogging:
          description: ' The ARN of the IAM role used for logging.'
          type: string
          minLength: 20
          maxLength: 2048
      required:
        - LogLevel
        - RoleArnForLogging
      additionalProperties: false
    PublishFindingToSnsParams:
      type: object
      description: >-
        Parameters, to define a mitigation action that publishes findings to
        Amazon SNS. You can implement your own custom actions in response to the
        Amazon SNS messages.
      properties:
        TopicArn:
          type: string
          description: The ARN of the topic to which you want to publish the findings.
          minLength: 20
          maxLength: 2048
      required:
        - TopicArn
      additionalProperties: false
    ReplaceDefaultPolicyVersionParams:
      type: object
      description: >-
        Parameters to define a mitigation action that adds a blank policy to
        restrict permissions.
      properties:
        TemplateName:
          type: string
          enum:
            - BLANK_POLICY
            - UNSET_VALUE
      required:
        - TemplateName
      additionalProperties: false
    UpdateCACertificateParams:
      type: object
      description: >-
        Parameters to define a mitigation action that changes the state of the
        CA certificate to inactive.
      properties:
        Action:
          type: string
          enum:
            - DEACTIVATE
            - UNSET_VALUE
      required:
        - Action
      additionalProperties: false
    UpdateDeviceCertificateParams:
      type: object
      description: >-
        Parameters to define a mitigation action that changes the state of the
        device certificate to inactive.
      properties:
        Action:
          type: string
          enum:
            - DEACTIVATE
            - UNSET_VALUE
      required:
        - Action
      additionalProperties: false
    MitigationAction:
      type: object
      properties:
        ActionName:
          description: A unique identifier for the mitigation action.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        RoleArn:
          type: string
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        ActionParams:
          $ref: '#/components/schemas/ActionParams'
        MitigationActionArn:
          type: string
        MitigationActionId:
          type: string
      required:
        - RoleArn
        - ActionParams
      x-stackql-resource-name: MitigationAction
    Policy:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        PolicyDocument:
          type: object
        PolicyName:
          type: string
      required:
        - PolicyDocument
      x-stackql-resource-name: Policy
    PolicyPrincipalAttachment:
      type: object
      properties:
        Id:
          type: string
        PolicyName:
          type: string
        Principal:
          type: string
      required:
        - Principal
        - PolicyName
      x-stackql-resource-name: PolicyPrincipalAttachment
    ProvisioningHook:
      type: object
      properties:
        TargetArn:
          type: string
        PayloadVersion:
          type: string
    ProvisioningTemplate:
      type: object
      properties:
        TemplateArn:
          type: string
        TemplateName:
          type: string
          pattern: ^[0-9A-Za-z_-]+$
          minLength: 1
          maxLength: 36
        Description:
          type: string
          maxLength: 500
        Enabled:
          type: boolean
        ProvisioningRoleArn:
          type: string
        TemplateBody:
          type: string
        TemplateType:
          type: string
          enum:
            - FLEET_PROVISIONING
            - JITP
        PreProvisioningHook:
          $ref: '#/components/schemas/ProvisioningHook'
        Tags:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ProvisioningRoleArn
        - TemplateBody
      x-stackql-resource-name: ProvisioningTemplate
    ResourceSpecificLogging:
      type: object
      properties:
        TargetType:
          description: >-
            The target type. Value must be THING_GROUP, CLIENT_ID, SOURCE_IP,
            PRINCIPAL_ID.
          type: string
          enum:
            - THING_GROUP
            - CLIENT_ID
            - SOURCE_IP
            - PRINCIPAL_ID
        TargetName:
          description: The target name.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z0-9.:_-]+'
        LogLevel:
          description: >-
            The log level for a specific target. Valid values are: ERROR, WARN,
            INFO, DEBUG, or DISABLED.
          type: string
          enum:
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - DISABLED
        TargetId:
          description: >-
            Unique Id for a Target (TargetType:TargetName), this will be
            internally built to serve as primary identifier for a log target.
          type: string
          minLength: 13
          maxLength: 140
          pattern: '[a-zA-Z0-9.:_-]+'
      required:
        - TargetName
        - TargetType
        - LogLevel
      x-stackql-resource-name: ResourceSpecificLogging
    RoleAlias:
      type: object
      properties:
        RoleAlias:
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        RoleAliasArn:
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        RoleArn:
          type: string
          pattern: arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          minLength: 20
          maxLength: 2048
        CredentialDurationSeconds:
          type: integer
          minimum: 900
          maximum: 43200
          default: 3600
        Tags:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RoleArn
      x-stackql-resource-name: RoleAlias
    ScheduledAudit:
      type: object
      properties:
        ScheduledAuditName:
          description: The name you want to give to the scheduled audit.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        Frequency:
          description: >-
            How often the scheduled audit takes place. Can be one of DAILY,
            WEEKLY, BIWEEKLY, or MONTHLY.
          type: string
          enum:
            - DAILY
            - WEEKLY
            - BIWEEKLY
            - MONTHLY
        DayOfMonth:
          description: >-
            The day of the month on which the scheduled audit takes place. Can
            be 1 through 31 or LAST. This field is required if the frequency
            parameter is set to MONTHLY.
          type: string
          pattern: ^([1-9]|[12][0-9]|3[01])$|^LAST$|^UNSET_VALUE$
        DayOfWeek:
          description: >-
            The day of the week on which the scheduled audit takes place. Can be
            one of SUN, MON, TUE,WED, THU, FRI, or SAT. This field is required
            if the frequency parameter is set to WEEKLY or BIWEEKLY.
          type: string
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - UNSET_VALUE
        TargetCheckNames:
          description: >-
            Which checks are performed during the scheduled audit. Checks must
            be enabled for your account.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        ScheduledAuditArn:
          description: The ARN (Amazon resource name) of the scheduled audit.
          type: string
          minLength: 20
          maxLength: 2048
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Frequency
        - TargetCheckNames
      x-stackql-resource-name: ScheduledAudit
    Behavior:
      description: A security profile behavior.
      type: object
      properties:
        Name:
          description: The name for the behavior.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        Metric:
          description: What is measured by the behavior.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        MetricDimension:
          $ref: '#/components/schemas/MetricDimension'
        Criteria:
          $ref: '#/components/schemas/BehaviorCriteria'
        SuppressAlerts:
          description: >-
            Manage Detect alarm SNS notifications by setting behavior
            notification to on or suppressed. Detect will continue to performing
            device behavior evaluations. However, suppressed alarms wouldn't be
            forwarded for SNS notification.
          type: boolean
      required:
        - Name
      additionalProperties: false
    MetricDimension:
      description: The dimension of a metric.
      type: object
      properties:
        DimensionName:
          description: A unique identifier for the dimension.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        Operator:
          description: Defines how the dimensionValues of a dimension are interpreted.
          type: string
          enum:
            - IN
            - NOT_IN
      required:
        - DimensionName
      additionalProperties: false
    BehaviorCriteria:
      description: The criteria by which the behavior is determined to be normal.
      type: object
      properties:
        ComparisonOperator:
          description: >-
            The operator that relates the thing measured (metric) to the
            criteria (containing a value or statisticalThreshold).
          type: string
          enum:
            - less-than
            - less-than-equals
            - greater-than
            - greater-than-equals
            - in-cidr-set
            - not-in-cidr-set
            - in-port-set
            - not-in-port-set
            - in-set
            - not-in-set
        Value:
          $ref: '#/components/schemas/MetricValue'
        DurationSeconds:
          type: integer
          description: >-
            Use this to specify the time duration over which the behavior is
            evaluated.
        ConsecutiveDatapointsToAlarm:
          description: >-
            If a device is in violation of the behavior for the specified number
            of consecutive datapoints, an alarm occurs. If not specified, the
            default is 1.
          type: integer
          minimum: 1
          maximum: 10
        ConsecutiveDatapointsToClear:
          description: >-
            If an alarm has occurred and the offending device is no longer in
            violation of the behavior for the specified number of consecutive
            datapoints, the alarm is cleared. If not specified, the default is
            1.
          type: integer
          minimum: 1
          maximum: 10
        StatisticalThreshold:
          $ref: '#/components/schemas/StatisticalThreshold'
        MlDetectionConfig:
          $ref: '#/components/schemas/MachineLearningDetectionConfig'
      additionalProperties: false
    MetricValue:
      description: The value to be compared with the metric.
      type: object
      properties:
        Count:
          description: >-
            If the ComparisonOperator calls for a numeric value, use this to
            specify that (integer) numeric value to be compared with the metric.
          type: string
          minimum: 0
        Cidrs:
          description: >-
            If the ComparisonOperator calls for a set of CIDRs, use this to
            specify that set to be compared with the metric.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Ports:
          description: >-
            If the ComparisonOperator calls for a set of ports, use this to
            specify that set to be compared with the metric.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: integer
            minimum: 0
            maximum: 65535
        Number:
          description: The numeral value of a metric.
          type: number
        Numbers:
          description: The numeral values of a metric.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: number
        Strings:
          description: The string values of a metric.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
      additionalProperties: false
    StatisticalThreshold:
      description: >-
        A statistical ranking (percentile) which indicates a threshold value by
        which a behavior is determined to be in compliance or in violation of
        the behavior.
      type: object
      properties:
        Statistic:
          description: >-
            The percentile which resolves to a threshold value by which
            compliance with a behavior is determined
          type: string
          enum:
            - Average
            - p0
            - p0.1
            - p0.01
            - p1
            - p10
            - p50
            - p90
            - p99
            - p99.9
            - p99.99
            - p100
      additionalProperties: false
    MachineLearningDetectionConfig:
      description: The configuration of an ML Detect Security Profile.
      type: object
      properties:
        ConfidenceLevel:
          description: >-
            The sensitivity of anomalous behavior evaluation. Can be Low,
            Medium, or High.
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
      additionalProperties: false
    AlertTarget:
      description: A structure containing the alert target ARN and the role ARN.
      type: object
      properties:
        AlertTargetArn:
          description: The ARN of the notification target to which alerts are sent.
          type: string
          maxLength: 2048
        RoleArn:
          description: >-
            The ARN of the role that grants permission to send alerts to the
            notification target.
          type: string
          minLength: 20
          maxLength: 2048
      required:
        - AlertTargetArn
        - RoleArn
      additionalProperties: false
    MetricToRetain:
      description: The metric you want to retain. Dimensions are optional.
      type: object
      properties:
        Metric:
          description: What is measured by the behavior.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        MetricDimension:
          $ref: '#/components/schemas/MetricDimension'
      required:
        - Metric
      additionalProperties: false
    SecurityProfile:
      type: object
      properties:
        SecurityProfileName:
          description: A unique identifier for the security profile.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        SecurityProfileDescription:
          description: A description of the security profile.
          type: string
          maxLength: 1000
        Behaviors:
          description: >-
            Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
          type: array
          maxLength: 100
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Behavior'
        AlertTargets:
          description: Specifies the destinations to which alerts are sent.
          type: object
          x-patternProperties:
            '[a-zA-Z0-9:_-]+':
              $ref: '#/components/schemas/AlertTarget'
          additionalProperties: false
        AdditionalMetricsToRetainV2:
          description: >-
            A list of metrics whose data is retained (stored). By default, data
            is retained for any metric used in the profile's behaviors, but it
            is also retained for any metric specified here.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricToRetain'
        Tags:
          description: Metadata that can be used to manage the security profile.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        TargetArns:
          description: A set of target ARNs that the security profile is attached to.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            description: The ARN of the target to which the security profile is attached.
            type: string
            maxLength: 2048
        SecurityProfileArn:
          description: The ARN (Amazon resource name) of the created security profile.
          type: string
      required: []
      x-stackql-resource-name: SecurityProfile
    AttributePayload:
      type: object
      additionalProperties: false
      properties:
        Attributes:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9_.,@/:#-]+':
              type: string
    Thing:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        AttributePayload:
          $ref: '#/components/schemas/AttributePayload'
        ThingName:
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
      x-stackql-resource-name: Thing
    ThingPrincipalAttachment:
      type: object
      properties:
        Id:
          type: string
        Principal:
          type: string
        ThingName:
          type: string
      required:
        - Principal
        - ThingName
      x-stackql-resource-name: ThingPrincipalAttachment
    ElasticsearchAction:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Index:
          type: string
        Id:
          type: string
        Endpoint:
          type: string
        RoleArn:
          type: string
      required:
        - Type
        - Endpoint
        - Index
        - Id
        - RoleArn
    KinesisAction:
      type: object
      additionalProperties: false
      properties:
        PartitionKey:
          type: string
        StreamName:
          type: string
        RoleArn:
          type: string
      required:
        - StreamName
        - RoleArn
    FirehoseAction:
      type: object
      additionalProperties: false
      properties:
        DeliveryStreamName:
          type: string
        RoleArn:
          type: string
        Separator:
          type: string
        BatchMode:
          type: boolean
      required:
        - DeliveryStreamName
        - RoleArn
    AssetPropertyTimestamp:
      type: object
      additionalProperties: false
      description: >-
        A structure that contains timestamp information. For more information,
        see
        [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html)
        in the *AWS IoT SiteWise API Reference*.
      properties:
        OffsetInNanos:
          type: string
          description: >-
            The timestamp, in seconds, in the Unix epoch format. The valid range
            is between `1-31556889864403199`. You can also specify an
            expression.
        TimeInSeconds:
          type: string
          description: >-
            The nanosecond offset converted from `timeInSeconds`. The valid
            range is between `0-999999999`. You can also specify an expression.
      required:
        - TimeInSeconds
    CloudwatchMetricAction:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        MetricValue:
          type: string
        MetricNamespace:
          type: string
        MetricUnit:
          type: string
        RoleArn:
          type: string
        MetricTimestamp:
          type: string
      required:
        - MetricName
        - MetricValue
        - MetricNamespace
        - MetricUnit
        - RoleArn
    AssetPropertyVariant:
      type: object
      additionalProperties: false
      description: >-
        A structure that contains an asset property value. For more information,
        see
        [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html)
        in the *AWS IoT SiteWise API Reference*.
      properties:
        BooleanValue:
          type: string
          description: >-
            The asset property value is a Boolean value that must be `TRUE` or
            `FALSE`. You can also specify an expression. If you use an
            expression, the evaluated result should be a Boolean value.
        DoubleValue:
          type: string
          description: >-
            The asset property value is a double. You can also specify an
            expression. If you use an expression, the evaluated result should be
            a double.
        IntegerValue:
          type: string
          description: >-
            The asset property value is an integer. You can also specify an
            expression. If you use an expression, the evaluated result should be
            an integer.
        StringValue:
          type: string
          description: >-
            The asset property value is a string. You can also specify an
            expression. If you use an expression, the evaluated result should be
            a string.
    DynamoDBAction:
      type: object
      additionalProperties: false
      properties:
        TableName:
          type: string
        PayloadField:
          type: string
        RangeKeyField:
          type: string
        HashKeyField:
          type: string
        RangeKeyValue:
          type: string
        RangeKeyType:
          type: string
        HashKeyType:
          type: string
        HashKeyValue:
          type: string
        RoleArn:
          type: string
      required:
        - TableName
        - HashKeyField
        - HashKeyValue
        - RoleArn
    UserProperty:
      type: object
      additionalProperties: false
      required:
        - Key
        - Value
      properties:
        Key:
          type: string
          minLength: 0
          maxLength: 1024
        Value:
          type: string
          minLength: 0
          maxLength: 1024
    UserProperties:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: '#/components/schemas/UserProperty'
    RepublishActionHeaders:
      type: object
      additionalProperties: false
      properties:
        PayloadFormatIndicator:
          type: string
          minLength: 0
          maxLength: 1024
        ContentType:
          type: string
          minLength: 0
          maxLength: 1024
        ResponseTopic:
          type: string
          minLength: 0
          maxLength: 1024
        CorrelationData:
          type: string
          minLength: 0
          maxLength: 1024
        MessageExpiry:
          type: string
          minLength: 0
          maxLength: 1024
        UserProperties:
          $ref: '#/components/schemas/UserProperties'
    RepublishAction:
      type: object
      additionalProperties: false
      properties:
        Qos:
          type: integer
        Topic:
          type: string
        RoleArn:
          type: string
        Headers:
          $ref: '#/components/schemas/RepublishActionHeaders'
      required:
        - Topic
        - RoleArn
    SnsAction:
      type: object
      additionalProperties: false
      properties:
        TargetArn:
          type: string
        MessageFormat:
          type: string
        RoleArn:
          type: string
      required:
        - TargetArn
        - RoleArn
    StepFunctionsAction:
      type: object
      additionalProperties: false
      properties:
        ExecutionNamePrefix:
          type: string
        StateMachineName:
          type: string
        RoleArn:
          type: string
      required:
        - StateMachineName
        - RoleArn
    SqsAction:
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        UseBase64:
          type: boolean
        QueueUrl:
          type: string
      required:
        - RoleArn
        - QueueUrl
    SigV4Authorization:
      type: object
      additionalProperties: false
      properties:
        ServiceName:
          type: string
        SigningRegion:
          type: string
        RoleArn:
          type: string
      required:
        - ServiceName
        - SigningRegion
        - RoleArn
    LambdaAction:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
    PutAssetPropertyValueEntry:
      type: object
      additionalProperties: false
      properties:
        PropertyAlias:
          type: string
        PropertyValues:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AssetPropertyValue'
        AssetId:
          type: string
        EntryId:
          type: string
        PropertyId:
          type: string
      required:
        - PropertyValues
    PutItemInput:
      type: object
      additionalProperties: false
      properties:
        TableName:
          type: string
      required:
        - TableName
    S3Action:
      type: object
      additionalProperties: false
      properties:
        BucketName:
          type: string
        Key:
          type: string
        RoleArn:
          type: string
        CannedAcl:
          $ref: '#/components/schemas/CannedAccessControlList'
      required:
        - BucketName
        - Key
        - RoleArn
    AssetPropertyValue:
      type: object
      additionalProperties: false
      description: >-
        A structure that contains value information. For more information, see
        [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html)
        in the *AWS IoT SiteWise API Reference*.
      properties:
        Quality:
          type: string
          description: >-
            The quality of the asset property value. The value must be `GOOD`,
            `BAD`, or `UNCERTAIN`. You can also specify an expression.
        Timestamp:
          $ref: '#/components/schemas/AssetPropertyTimestamp'
        Value:
          $ref: '#/components/schemas/AssetPropertyVariant'
      required:
        - Value
    DynamoDBv2Action:
      type: object
      additionalProperties: false
      properties:
        PutItem:
          $ref: '#/components/schemas/PutItemInput'
        RoleArn:
          type: string
    IotEventsAction:
      type: object
      additionalProperties: false
      properties:
        InputName:
          type: string
        RoleArn:
          type: string
        MessageId:
          type: string
        BatchMode:
          type: boolean
      required:
        - InputName
        - RoleArn
    HttpAuthorization:
      type: object
      additionalProperties: false
      properties:
        Sigv4:
          $ref: '#/components/schemas/SigV4Authorization'
    TopicRulePayload:
      type: object
      additionalProperties: false
      properties:
        RuleDisabled:
          type: boolean
        ErrorAction:
          $ref: '#/components/schemas/Action'
        Description:
          type: string
        AwsIotSqlVersion:
          type: string
        Actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        Sql:
          type: string
      required:
        - Actions
        - Sql
    CloudwatchAlarmAction:
      type: object
      additionalProperties: false
      properties:
        StateValue:
          type: string
        AlarmName:
          type: string
        StateReason:
          type: string
        RoleArn:
          type: string
      required:
        - AlarmName
        - StateReason
        - StateValue
        - RoleArn
    CloudwatchLogsAction:
      type: object
      additionalProperties: false
      properties:
        LogGroupName:
          type: string
        RoleArn:
          type: string
        BatchMode:
          type: boolean
      required:
        - LogGroupName
        - RoleArn
    IotAnalyticsAction:
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        ChannelName:
          type: string
        BatchMode:
          type: boolean
      required:
        - ChannelName
        - RoleArn
    HttpActionHeader:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    IotSiteWiseAction:
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        PutAssetPropertyValueEntries:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PutAssetPropertyValueEntry'
      required:
        - PutAssetPropertyValueEntries
        - RoleArn
    HttpAction:
      type: object
      additionalProperties: false
      properties:
        ConfirmationUrl:
          type: string
        Headers:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/HttpActionHeader'
        Url:
          type: string
        Auth:
          $ref: '#/components/schemas/HttpAuthorization'
      required:
        - Url
    TimestreamAction:
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        DatabaseName:
          type: string
        TableName:
          type: string
        Dimensions:
          $ref: '#/components/schemas/TimestreamDimensionsList'
        Timestamp:
          $ref: '#/components/schemas/TimestreamTimestamp'
      required:
        - RoleArn
        - DatabaseName
        - TableName
        - Dimensions
    KafkaAction:
      type: object
      additionalProperties: false
      properties:
        DestinationArn:
          type: string
        Topic:
          type: string
        Key:
          type: string
        Partition:
          type: string
        ClientProperties:
          type: object
          additionalProperties: false
          x-patternProperties:
            .*:
              type: string
          minProperties: 1
      required:
        - DestinationArn
        - Topic
        - ClientProperties
    OpenSearchAction:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Index:
          type: string
        Id:
          type: string
        Endpoint:
          type: string
        RoleArn:
          type: string
      required:
        - Type
        - Endpoint
        - Index
        - Id
        - RoleArn
    LocationAction:
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        TrackerName:
          type: string
        DeviceId:
          type: string
        Latitude:
          type: string
        Longitude:
          type: string
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
      required:
        - RoleArn
        - TrackerName
        - DeviceId
        - Latitude
        - Longitude
    CannedAccessControlList:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - aws-exec-read
        - authenticated-read
        - bucket-owner-read
        - bucket-owner-full-control
        - log-delivery-write
    TimestreamDimensionsList:
      type: array
      minItems: 1
      maxItems: 128
      items:
        $ref: '#/components/schemas/TimestreamDimension'
    TimestreamDimension:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
      required:
        - Name
        - Value
    TimestreamTimestamp:
      type: object
      properties:
        Value:
          type: string
        Unit:
          type: string
      additionalProperties: false
      required:
        - Value
        - Unit
    Timestamp:
      type: object
      properties:
        Value:
          type: string
        Unit:
          type: string
      additionalProperties: false
      required:
        - Value
    TopicRule:
      type: object
      properties:
        Arn:
          type: string
        RuleName:
          type: string
        TopicRulePayload:
          $ref: '#/components/schemas/TopicRulePayload'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TopicRulePayload
      x-stackql-resource-name: TopicRule
    TopicRuleDestinationStatus:
      type: string
      enum:
        - ENABLED
        - IN_PROGRESS
        - DISABLED
    HttpUrlDestinationSummary:
      type: object
      additionalProperties: false
      properties:
        ConfirmationUrl:
          type: string
    VpcDestinationProperties:
      type: object
      additionalProperties: false
      properties:
        SubnetIds:
          type: array
          uniqueItems: true
          items:
            type: string
        SecurityGroups:
          type: array
          uniqueItems: true
          items:
            type: string
        VpcId:
          type: string
        RoleArn:
          type: string
    TopicRuleDestination:
      type: object
      properties:
        Arn:
          description: Amazon Resource Name (ARN).
          type: string
        Status:
          description: The status of the TopicRuleDestination.
          $ref: '#/components/schemas/TopicRuleDestinationStatus'
        HttpUrlProperties:
          description: HTTP URL destination properties.
          $ref: '#/components/schemas/HttpUrlDestinationSummary'
        StatusReason:
          description: The reasoning for the current status of the TopicRuleDestination.
          type: string
        VpcProperties:
          description: VPC destination properties.
          $ref: '#/components/schemas/VpcDestinationProperties'
      x-stackql-resource-name: TopicRuleDestination
    CustomerManagedS3:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          type: string
          pattern: '[a-zA-Z0-9.\-_]*'
          minLength: 3
          maxLength: 255
        RoleArn:
          type: string
          minLength: 20
          maxLength: 2048
        KeyPrefix:
          type: string
          pattern: '[a-zA-Z0-9!_.*''()/{}:-]*/'
          minLength: 1
          maxLength: 255
      required:
        - Bucket
        - RoleArn
    ServiceManagedS3:
      type: object
      additionalProperties: false
    ChannelStorage:
      type: object
      additionalProperties: false
      properties:
        ServiceManagedS3:
          $ref: '#/components/schemas/ServiceManagedS3'
        CustomerManagedS3:
          $ref: '#/components/schemas/CustomerManagedS3'
    RetentionPeriod:
      type: object
      additionalProperties: false
      properties:
        NumberOfDays:
          type: integer
          minimum: 1
          maximum: 2147483647
        Unlimited:
          type: boolean
    Channel:
      type: object
      additionalProperties: false
      properties:
        ChannelName:
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 128
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - ChannelName
        - Name
    DatasetContentVersionValue:
      type: object
      additionalProperties: false
      properties:
        DatasetName:
          type: string
          pattern: (^(?!_{2}))(^[a-zA-Z0-9_]+$)
          minLength: 1
          maxLength: 128
      required:
        - DatasetName
    GlueConfiguration:
      type: object
      additionalProperties: false
      properties:
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 150
        TableName:
          type: string
          minLength: 1
          maxLength: 150
      required:
        - TableName
        - DatabaseName
    Variable:
      type: object
      additionalProperties: false
      properties:
        VariableName:
          type: string
          minLength: 1
          maxLength: 256
        DatasetContentVersionValue:
          $ref: '#/components/schemas/DatasetContentVersionValue'
        StringValue:
          type: string
          minLength: 0
          maxLength: 1024
        DoubleValue:
          type: number
        OutputFileUriValue:
          $ref: '#/components/schemas/OutputFileUriValue'
      required:
        - VariableName
    IotEventsDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        InputName:
          type: string
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          minLength: 1
          maxLength: 128
        RoleArn:
          type: string
          minLength: 20
          maxLength: 2048
      required:
        - InputName
        - RoleArn
    LateDataRule:
      type: object
      additionalProperties: false
      properties:
        RuleConfiguration:
          $ref: '#/components/schemas/LateDataRuleConfiguration'
        RuleName:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
          minLength: 1
          maxLength: 128
      required:
        - RuleConfiguration
    DeltaTimeSessionWindowConfiguration:
      type: object
      additionalProperties: false
      properties:
        TimeoutInMinutes:
          type: integer
          minimum: 1
          maximum: 60
      required:
        - TimeoutInMinutes
    QueryAction:
      type: object
      additionalProperties: false
      properties:
        Filters:
          type: array
          minItems: 0
          maxItems: 1
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Filter'
        SqlQuery:
          type: string
      required:
        - SqlQuery
    VersioningConfiguration:
      type: object
      additionalProperties: false
      properties:
        Unlimited:
          type: boolean
        MaxVersions:
          type: integer
          minimum: 1
          maximum: 1000
    ResourceConfiguration:
      type: object
      additionalProperties: false
      properties:
        VolumeSizeInGB:
          type: integer
          minimum: 1
          maximum: 50
        ComputeType:
          type: string
          enum:
            - ACU_1
            - ACU_2
      required:
        - VolumeSizeInGB
        - ComputeType
    DatasetContentDeliveryRule:
      type: object
      additionalProperties: false
      properties:
        Destination:
          $ref: '#/components/schemas/DatasetContentDeliveryRuleDestination'
        EntryName:
          type: string
      required:
        - Destination
    Trigger:
      type: object
      additionalProperties: false
      properties:
        TriggeringDataset:
          $ref: '#/components/schemas/TriggeringDataset'
        Schedule:
          $ref: '#/components/schemas/Schedule'
    DeltaTime:
      type: object
      additionalProperties: false
      properties:
        OffsetSeconds:
          type: integer
        TimeExpression:
          type: string
      required:
        - TimeExpression
        - OffsetSeconds
    ContainerAction:
      type: object
      additionalProperties: false
      properties:
        Variables:
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Variable'
        ExecutionRoleArn:
          type: string
          minLength: 20
          maxLength: 2048
        Image:
          type: string
          maxLength: 255
        ResourceConfiguration:
          $ref: '#/components/schemas/ResourceConfiguration'
      required:
        - ExecutionRoleArn
        - Image
        - ResourceConfiguration
    Filter:
      type: object
      additionalProperties: false
      properties:
        Filter:
          type: string
          minLength: 1
          maxLength: 256
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Filter
        - Name
    OutputFileUriValue:
      type: object
      additionalProperties: false
      properties:
        FileName:
          type: string
          pattern: ^[\w\.-]{1,255}$
      required:
        - FileName
    Schedule:
      type: object
      additionalProperties: false
      properties:
        ScheduleExpression:
          type: string
      required:
        - ScheduleExpression
    S3DestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        GlueConfiguration:
          $ref: '#/components/schemas/GlueConfiguration'
        Bucket:
          type: string
          pattern: ^[a-zA-Z0-9.\-_]*$
          minLength: 3
          maxLength: 255
        Key:
          type: string
          pattern: ^[a-zA-Z0-9!_.*'()/{}:-]*$
          minLength: 1
          maxLength: 255
        RoleArn:
          type: string
          minLength: 20
          maxLength: 2048
      required:
        - Bucket
        - Key
        - RoleArn
    LateDataRuleConfiguration:
      type: object
      additionalProperties: false
      properties:
        DeltaTimeSessionWindowConfiguration:
          $ref: '#/components/schemas/DeltaTimeSessionWindowConfiguration'
    DatasetContentDeliveryRuleDestination:
      type: object
      additionalProperties: false
      properties:
        IotEventsDestinationConfiguration:
          $ref: '#/components/schemas/IotEventsDestinationConfiguration'
        S3DestinationConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
    TriggeringDataset:
      type: object
      additionalProperties: false
      properties:
        DatasetName:
          type: string
          pattern: (^(?!_{2}))(^[a-zA-Z0-9_]+$)
          minLength: 1
          maxLength: 128
      required:
        - DatasetName
    Dataset:
      type: object
      properties:
        Actions:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Action'
        LateDataRules:
          type: array
          minItems: 1
          maxItems: 1
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LateDataRule'
        DatasetName:
          type: string
          pattern: (^(?!_{2}))(^[a-zA-Z0-9_]+$)
          minLength: 1
          maxLength: 128
        ContentDeliveryRules:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 20
          items:
            $ref: '#/components/schemas/DatasetContentDeliveryRule'
        Triggers:
          type: array
          minItems: 0
          maxItems: 5
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Trigger'
        VersioningConfiguration:
          $ref: '#/components/schemas/VersioningConfiguration'
        Id:
          type: string
        RetentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Actions
      x-stackql-resource-name: Dataset
    DatastoreStorage:
      type: object
      additionalProperties: false
      properties:
        ServiceManagedS3:
          $ref: '#/components/schemas/ServiceManagedS3'
        CustomerManagedS3:
          $ref: '#/components/schemas/CustomerManagedS3'
        IotSiteWiseMultiLayerStorage:
          $ref: '#/components/schemas/IotSiteWiseMultiLayerStorage'
    SchemaDefinition:
      type: object
      additionalProperties: false
      properties:
        Columns:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/Column'
    JsonConfiguration:
      type: object
      additionalProperties: false
    ParquetConfiguration:
      type: object
      additionalProperties: false
      properties:
        SchemaDefinition:
          $ref: '#/components/schemas/SchemaDefinition'
    FileFormatConfiguration:
      type: object
      additionalProperties: false
      properties:
        JsonConfiguration:
          $ref: '#/components/schemas/JsonConfiguration'
        ParquetConfiguration:
          $ref: '#/components/schemas/ParquetConfiguration'
    Column:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Name:
          type: string
      required:
        - Type
        - Name
    IotSiteWiseMultiLayerStorage:
      type: object
      additionalProperties: false
      properties:
        CustomerManagedS3Storage:
          $ref: '#/components/schemas/CustomerManagedS3Storage'
    CustomerManagedS3Storage:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          type: string
          pattern: '[a-zA-Z0-9.\-_]*'
          minLength: 3
          maxLength: 255
        KeyPrefix:
          type: string
          pattern: '[a-zA-Z0-9!_.*''()/{}:-]*/'
          minLength: 1
          maxLength: 255
      required:
        - Bucket
    DatastorePartitions:
      type: object
      additionalProperties: false
      properties:
        Partitions:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 25
          items:
            $ref: '#/components/schemas/DatastorePartition'
    DatastorePartition:
      type: object
      additionalProperties: false
      properties:
        Partition:
          $ref: '#/components/schemas/Partition'
        TimestampPartition:
          $ref: '#/components/schemas/TimestampPartition'
    Partition:
      type: object
      additionalProperties: false
      properties:
        AttributeName:
          type: string
          pattern: '[a-zA-Z0-9_]+'
      required:
        - AttributeName
    TimestampPartition:
      type: object
      additionalProperties: false
      properties:
        AttributeName:
          type: string
          pattern: '[a-zA-Z0-9_]+'
        TimestampFormat:
          type: string
          pattern: '[a-zA-Z0-9\s\[\]_,.''/:-]*'
      required:
        - AttributeName
    Datastore:
      type: object
      additionalProperties: false
      properties:
        DatastoreName:
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 128
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - DatastoreName
        - Name
    Activity:
      type: object
      additionalProperties: false
      properties:
        SelectAttributes:
          $ref: '#/components/schemas/SelectAttributes'
        Datastore:
          $ref: '#/components/schemas/Datastore'
        Filter:
          $ref: '#/components/schemas/Filter'
        AddAttributes:
          $ref: '#/components/schemas/AddAttributes'
        Channel:
          $ref: '#/components/schemas/Channel'
        DeviceShadowEnrich:
          $ref: '#/components/schemas/DeviceShadowEnrich'
        Math:
          $ref: '#/components/schemas/Math'
        Lambda:
          $ref: '#/components/schemas/Lambda'
        DeviceRegistryEnrich:
          $ref: '#/components/schemas/DeviceRegistryEnrich'
        RemoveAttributes:
          $ref: '#/components/schemas/RemoveAttributes'
    DeviceShadowEnrich:
      type: object
      additionalProperties: false
      properties:
        Attribute:
          type: string
          minLength: 1
          maxLength: 256
        Next:
          type: string
          minLength: 1
          maxLength: 128
        ThingName:
          type: string
          minLength: 1
          maxLength: 256
        RoleArn:
          type: string
          minLength: 20
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Attribute
        - ThingName
        - RoleArn
        - Name
    RemoveAttributes:
      type: object
      additionalProperties: false
      properties:
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Attributes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Attributes
        - Name
    SelectAttributes:
      type: object
      additionalProperties: false
      properties:
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Attributes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Name
        - Attributes
    Lambda:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
          description: The ARN of the Lambda function that is executed.
          minLength: 1
          maxLength: 2048
        Payload:
          $ref: '#/components/schemas/Payload'
      required:
        - FunctionArn
    DeviceRegistryEnrich:
      type: object
      additionalProperties: false
      properties:
        Attribute:
          type: string
          minLength: 1
          maxLength: 256
        Next:
          type: string
          minLength: 1
          maxLength: 128
        ThingName:
          type: string
          minLength: 1
          maxLength: 256
        RoleArn:
          type: string
          minLength: 20
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Attribute
        - ThingName
        - RoleArn
        - Name
    AddAttributes:
      type: object
      additionalProperties: false
      properties:
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Attributes:
          type: object
          minProperties: 1
          maxProperties: 50
          x-patternProperties:
            ^.*$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Attributes
        - Name
    Math:
      type: object
      additionalProperties: false
      properties:
        Attribute:
          type: string
          minLength: 1
          maxLength: 256
        Next:
          type: string
          minLength: 1
          maxLength: 128
        Math:
          type: string
          minLength: 1
          maxLength: 256
        Name:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Attribute
        - Math
        - Name
    Pipeline:
      type: object
      properties:
        Id:
          type: string
        PipelineName:
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 128
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        PipelineActivities:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 25
          items:
            $ref: '#/components/schemas/Activity'
      required:
        - PipelineActivities
      x-stackql-resource-name: Pipeline
    AlarmRule:
      type: object
      description: Defines when your alarm is invoked.
      additionalProperties: false
      properties:
        SimpleRule:
          $ref: '#/components/schemas/SimpleRule'
    SimpleRule:
      type: object
      additionalProperties: false
      description: >-
        A rule that compares an input property value to a threshold value with a
        comparison operator.
      properties:
        InputProperty:
          type: string
          minLength: 1
          maxLength: 512
          description: >-
            The value on the left side of the comparison operator. You can
            specify an AWS IoT Events input attribute as an input property.
        ComparisonOperator:
          type: string
          enum:
            - GREATER
            - GREATER_OR_EQUAL
            - LESS
            - LESS_OR_EQUAL
            - EQUAL
            - NOT_EQUAL
          description: The comparison operator.
        Threshold:
          type: string
          minLength: 1
          maxLength: 512
          description: >-
            The value on the right side of the comparison operator. You can
            enter a number or specify an AWS IoT Events input attribute.
      required:
        - InputProperty
        - ComparisonOperator
        - Threshold
    AlarmEventActions:
      type: object
      additionalProperties: false
      description: Contains information about one or more alarm actions.
      properties:
        AlarmActions:
          $ref: '#/components/schemas/AlarmActions'
    AlarmCapabilities:
      type: object
      description: Contains the configuration information of alarm state changes
      additionalProperties: false
      properties:
        InitializationConfiguration:
          $ref: '#/components/schemas/InitializationConfiguration'
        AcknowledgeFlow:
          $ref: '#/components/schemas/AcknowledgeFlow'
    AlarmActions:
      type: array
      description: >-
        Specifies one or more supported actions to receive notifications when
        the alarm state changes.
      uniqueItems: false
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/AlarmAction'
    AlarmAction:
      type: object
      additionalProperties: false
      description: The actions to be performed.
      properties:
        DynamoDB:
          $ref: '#/components/schemas/DynamoDB'
        DynamoDBv2:
          $ref: '#/components/schemas/DynamoDBv2'
        Firehose:
          $ref: '#/components/schemas/Firehose'
        IotEvents:
          $ref: '#/components/schemas/IotEvents'
        IotSiteWise:
          $ref: '#/components/schemas/IotSiteWise'
        IotTopicPublish:
          $ref: '#/components/schemas/IotTopicPublish'
        Lambda:
          $ref: '#/components/schemas/Lambda'
        Sns:
          $ref: '#/components/schemas/Sns'
        Sqs:
          $ref: '#/components/schemas/Sqs'
    DynamoDB:
      type: object
      additionalProperties: false
      description: >-
        Writes to the DynamoDB table that you created. The default action
        payload contains all attribute-value pairs that have the information
        about the detector model instance and the event that triggered the
        action. You can also customize the
        [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html).
        One column of the DynamoDB table receives all attribute-value pairs in
        the payload that you specify. For more information, see
        [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html)
        in *AWS IoT Events Developer Guide*.
      properties:
        HashKeyField:
          type: string
          description: The name of the hash key (also called the partition key).
        HashKeyType:
          type: string
          description: >-
            The data type for the hash key (also called the partition key). You
            can specify the following values:


            * `STRING` - The hash key is a string.


            * `NUMBER` - The hash key is a number.


            If you don't specify `hashKeyType`, the default value is `STRING`.
        HashKeyValue:
          type: string
          description: The value of the hash key (also called the partition key).
        Operation:
          type: string
          description: >-
            The type of operation to perform. You can specify the following
            values:


            * `INSERT` - Insert data as a new item into the DynamoDB table. This
            item uses the specified hash key as a partition key. If you
            specified a range key, the item uses the range key as a sort key.


            * `UPDATE` - Update an existing item of the DynamoDB table with new
            data. This item's partition key must match the specified hash key.
            If you specified a range key, the range key must match the item's
            sort key.


            * `DELETE` - Delete an existing item of the DynamoDB table. This
            item's partition key must match the specified hash key. If you
            specified a range key, the range key must match the item's sort key.


            If you don't specify this parameter, AWS IoT Events triggers the
            `INSERT` operation.
        Payload:
          $ref: '#/components/schemas/Payload'
        PayloadField:
          type: string
          description: >-
            The name of the DynamoDB column that receives the action payload.


            If you don't specify this parameter, the name of the DynamoDB column
            is `payload`.
        RangeKeyField:
          type: string
          description: The name of the range key (also called the sort key).
        RangeKeyType:
          type: string
          description: >-
            The data type for the range key (also called the sort key), You can
            specify the following values:


            * `STRING` - The range key is a string.


            * `NUMBER` - The range key is number.


            If you don't specify `rangeKeyField`, the default value is `STRING`.
        RangeKeyValue:
          type: string
          description: The value of the range key (also called the sort key).
        TableName:
          type: string
          description: The name of the DynamoDB table.
      required:
        - HashKeyField
        - HashKeyValue
        - TableName
    DynamoDBv2:
      type: object
      additionalProperties: false
      description: >-
        Defines an action to write to the Amazon DynamoDB table that you
        created. The default action payload contains all attribute-value pairs
        that have the information about the detector model instance and the
        event that triggered the action. You can also customize the
        [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html).
        A separate column of the DynamoDB table receives one attribute-value
        pair in the payload that you specify.


        You can use expressions for parameters that are strings. For more
        information, see
        [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html)
        in the *AWS IoT Events Developer Guide*.
      properties:
        Payload:
          $ref: '#/components/schemas/Payload'
        TableName:
          type: string
          description: The name of the DynamoDB table.
      required:
        - TableName
    Firehose:
      type: object
      additionalProperties: false
      description: >-
        Sends information about the detector model instance and the event that
        triggered the action to an Amazon Kinesis Data Firehose delivery stream.
      properties:
        DeliveryStreamName:
          type: string
          description: >-
            The name of the Kinesis Data Firehose delivery stream where the data
            is written.
        Payload:
          $ref: '#/components/schemas/Payload'
        Separator:
          type: string
          description: >-
            A character separator that is used to separate records written to
            the Kinesis Data Firehose delivery stream. Valid values are: '\n'
            (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
          pattern: ([\n\t])|(\r\n)|(,)
      required:
        - DeliveryStreamName
    IotEvents:
      type: object
      additionalProperties: false
      description: >-
        Sends an AWS IoT Events input, passing in information about the detector
        model instance and the event that triggered the action.
      properties:
        InputName:
          type: string
          description: The name of the AWS IoT Events input where the data is sent.
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        Payload:
          $ref: '#/components/schemas/Payload'
      required:
        - InputName
    IotSiteWise:
      type: object
      additionalProperties: false
      description: >-
        Sends information about the detector model instance and the event that
        triggered the action to a specified asset property in AWS IoT SiteWise.
      properties:
        AssetId:
          type: string
          description: >-
            The ID of the asset that has the specified property. You can specify
            an expression.
        EntryId:
          type: string
          description: >-
            A unique identifier for this entry. You can use the entry ID to
            track which data entry causes an error in case of failure. The
            default is a new unique identifier. You can also specify an
            expression.
        PropertyAlias:
          type: string
          description: The alias of the asset property. You can also specify an expression.
        PropertyId:
          type: string
          description: The ID of the asset property. You can specify an expression.
        PropertyValue:
          $ref: '#/components/schemas/AssetPropertyValue'
      required:
        - PropertyValue
    IotTopicPublish:
      type: object
      additionalProperties: false
      description: >-
        Information required to publish the MQTT message through the AWS IoT
        message broker.
      properties:
        MqttTopic:
          type: string
          description: >-
            The MQTT topic of the message. You can use a string expression that
            includes variables (`$variable.<variable-name>`) and input values
            (`$input.<input-name>.<path-to-datum>`) as the topic string.
          minLength: 1
          maxLength: 128
        Payload:
          $ref: '#/components/schemas/Payload'
      required:
        - MqttTopic
    Sns:
      type: object
      additionalProperties: false
      description: Information required to publish the Amazon SNS message.
      properties:
        Payload:
          $ref: '#/components/schemas/Payload'
        TargetArn:
          type: string
          description: The ARN of the Amazon SNS target where the message is sent.
          minLength: 1
          maxLength: 2048
      required:
        - TargetArn
    Sqs:
      type: object
      additionalProperties: false
      properties:
        Payload:
          $ref: '#/components/schemas/Payload'
        QueueUrl:
          type: string
          description: The URL of the SQS queue where the data is written.
        UseBase64:
          type: boolean
          description: >-
            Set this to `TRUE` if you want the data to be base-64 encoded before
            it is written to the queue. Otherwise, set this to `FALSE`.
      required:
        - QueueUrl
    Payload:
      type: object
      additionalProperties: false
      description: >-
        Information needed to configure the payload.


        By default, AWS IoT Events generates a standard payload in JSON for any
        action. This action payload contains all attribute-value pairs that have
        the information about the detector model instance and the event
        triggered the action. To configure the action payload, you can use
        `contentExpression`.
      properties:
        ContentExpression:
          type: string
          description: >-
            The content of the payload. You can use a string expression that
            includes quoted strings (`'<string>'`), variables
            (`$variable.<variable-name>`), input values
            (`$input.<input-name>.<path-to-datum>`), string concatenations, and
            quoted strings that contain `${}` as the content. The recommended
            maximum size of a content expression is 1 KB.
          minLength: 1
        Type:
          type: string
          description: The value of the payload type can be either `STRING` or `JSON`.
      required:
        - ContentExpression
        - Type
    InitializationConfiguration:
      type: object
      description: >-
        Specifies the default alarm state. The configuration applies to all
        alarms that were created based on this alarm model.
      additionalProperties: false
      properties:
        DisabledOnInitialization:
          type: boolean
          description: >-
            The value must be TRUE or FALSE. If FALSE, all alarm instances
            created based on the alarm model are activated. The default value is
            TRUE.
          default: 'true'
      required:
        - DisabledOnInitialization
    AcknowledgeFlow:
      type: object
      description: Specifies whether to get notified for alarm state changes.
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          description: >-
            The value must be TRUE or FALSE. If TRUE, you receive a notification
            when the alarm state changes. You must choose to acknowledge the
            notification before the alarm state can return to NORMAL. If FALSE,
            you won't receive notifications. The alarm automatically changes to
            the NORMAL state when the input property value returns to the
            specified range.
          default: 'true'
    AlarmModel:
      type: object
      properties:
        AlarmModelName:
          type: string
          description: The name of the alarm model.
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9_-]+$
        AlarmModelDescription:
          type: string
          description: A brief description of the alarm model.
          maxLength: 128
        RoleArn:
          type: string
          description: >-
            The ARN of the role that grants permission to AWS IoT Events to
            perform its operations.
          minLength: 1
          maxLength: 2048
        Key:
          type: string
          description: >-
            The value used to identify a alarm instance. When a device or system
            sends input, a new alarm instance with a unique key value is
            created. AWS IoT Events can continue to route input to its
            corresponding alarm instance based on this identifying information.


            This parameter uses a JSON-path expression to select the
            attribute-value pair in the message payload that is used for
            identification. To route the message to the correct alarm instance,
            the device must send a message payload that contains the same
            attribute-value.
          minLength: 1
          maxLength: 128
          pattern: ^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w\- ]+`)|([\w\-]+)))*$
        Severity:
          type: integer
          description: >+
            A non-negative integer that reflects the severity level of the
            alarm.

          minimum: 0
          maximum: 2147483647
        AlarmRule:
          $ref: '#/components/schemas/AlarmRule'
        AlarmEventActions:
          $ref: '#/components/schemas/AlarmEventActions'
        AlarmCapabilities:
          $ref: '#/components/schemas/AlarmCapabilities'
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            An array of key-value pairs to apply to this resource.


            For more information, see
            [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RoleArn
        - AlarmRule
      x-stackql-resource-name: AlarmModel
    DetectorModelDefinition:
      type: object
      additionalProperties: false
      description: Information that defines how a detector operates.
      properties:
        InitialStateName:
          type: string
          description: >-
            The state that is entered at the creation of each detector
            (instance).
          minLength: 1
          maxLength: 128
        States:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: Information about the states of the detector.
          minItems: 1
          items:
            $ref: '#/components/schemas/State'
      required:
        - States
        - InitialStateName
    State:
      type: object
      additionalProperties: false
      description: Information that defines a state of a detector.
      properties:
        OnEnter:
          $ref: '#/components/schemas/OnEnter'
        OnExit:
          $ref: '#/components/schemas/OnExit'
        OnInput:
          $ref: '#/components/schemas/OnInput'
        StateName:
          type: string
          minLength: 1
          maxLength: 128
          description: The name of the state.
      required:
        - StateName
    OnEnter:
      type: object
      additionalProperties: false
      description: >-
        When entering this state, perform these `actions` if the `condition` is
        `TRUE`.
      properties:
        Events:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            Specifies the `actions` that are performed when the state is entered
            and the `condition` is `TRUE`.
          items:
            $ref: '#/components/schemas/Event'
    OnExit:
      type: object
      additionalProperties: false
      description: >-
        When exiting this state, perform these `actions` if the specified
        `condition` is `TRUE`.
      properties:
        Events:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            Specifies the `actions` that are performed when the state is exited
            and the `condition` is `TRUE`.
          items:
            $ref: '#/components/schemas/Event'
    OnInput:
      type: object
      additionalProperties: false
      description: >-
        When an input is received and the `condition` is `TRUE`, perform the
        specified `actions`.
      properties:
        Events:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            Specifies the `actions` performed when the `condition` evaluates to
            `TRUE`.
          items:
            $ref: '#/components/schemas/Event'
        TransitionEvents:
          type: array
          uniqueItems: false
          x-insertionOrder: true
          description: >-
            Specifies the `actions` performed, and the next `state` entered,
            when a `condition` evaluates to `TRUE`.
          items:
            $ref: '#/components/schemas/TransitionEvent'
    Event:
      type: object
      additionalProperties: false
      description: >-
        Specifies the `actions` to be performed when the `condition` evaluates
        to `TRUE`.
      properties:
        Actions:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: The actions to be performed.
          items:
            $ref: '#/components/schemas/Action'
        Condition:
          type: string
          description: >-
            The Boolean expression that, when `TRUE`, causes the `actions` to be
            performed. If not present, the `actions` are performed (=`TRUE`). If
            the expression result is not a `Boolean` value, the `actions` are
            not performed (=`FALSE`).
          maxLength: 512
        EventName:
          type: string
          description: The name of the event.
          maxLength: 128
      required:
        - EventName
    TransitionEvent:
      type: object
      additionalProperties: false
      description: >-
        Specifies the `actions `performed and the next `state` entered when a
        `condition` evaluates to `TRUE`.
      properties:
        Actions:
          type: array
          description: The actions to be performed.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Action'
        Condition:
          type: string
          description: >-
            A Boolean expression that when `TRUE` causes the `actions` to be
            performed and the `nextState` to be entered.
          maxLength: 512
        EventName:
          type: string
          description: The name of the event.
          minLength: 1
          maxLength: 128
        NextState:
          type: string
          description: The next state to enter.
          minLength: 1
          maxLength: 128
      required:
        - Condition
        - EventName
        - NextState
    ClearTimer:
      type: object
      additionalProperties: false
      description: Information needed to clear the timer.
      properties:
        TimerName:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - TimerName
    ResetTimer:
      type: object
      additionalProperties: false
      description: >-
        Information required to reset the timer. The timer is reset to the
        previously evaluated result of the duration. The duration expression
        isn't reevaluated when you reset the timer.
      properties:
        TimerName:
          type: string
          description: The name of the timer to reset.
          minLength: 1
          maxLength: 128
      required:
        - TimerName
    SetTimer:
      type: object
      additionalProperties: false
      description: Information needed to set the timer.
      properties:
        DurationExpression:
          type: string
          description: >-
            The duration of the timer, in seconds. You can use a string
            expression that includes numbers, variables
            (`$variable.<variable-name>`), and input values
            (`$input.<input-name>.<path-to-datum>`) as the duration. The range
            of the duration is `1-31622400` seconds. To ensure accuracy, the
            minimum duration is `60` seconds. The evaluated result of the
            duration is rounded down to the nearest whole number.
          minLength: 1
          maxLength: 1024
        Seconds:
          type: integer
          description: >-
            The number of seconds until the timer expires. The minimum value is
            `60` seconds to ensure accuracy. The maximum value is `31622400`
            seconds.
          minimum: 60
          maximum: 31622400
        TimerName:
          type: string
          description: The name of the timer.
          minLength: 1
          maxLength: 128
      required:
        - TimerName
    SetVariable:
      type: object
      additionalProperties: false
      description: Information about the variable and its new value.
      properties:
        Value:
          type: string
          description: The new value of the variable.
          minLength: 1
          maxLength: 1024
        VariableName:
          type: string
          description: The name of the variable.
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      required:
        - Value
        - VariableName
    DetectorModel:
      type: object
      properties:
        DetectorModelDefinition:
          $ref: '#/components/schemas/DetectorModelDefinition'
        DetectorModelDescription:
          type: string
          description: A brief description of the detector model.
          maxLength: 128
        DetectorModelName:
          type: string
          description: The name of the detector model.
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9_-]+$
        EvaluationMethod:
          type: string
          description: >-
            Information about the order in which events are evaluated and how
            actions are executed.
          enum:
            - BATCH
            - SERIAL
        Key:
          type: string
          description: >-
            The value used to identify a detector instance. When a device or
            system sends input, a new detector instance with a unique key value
            is created. AWS IoT Events can continue to route input to its
            corresponding detector instance based on this identifying
            information.


            This parameter uses a JSON-path expression to select the
            attribute-value pair in the message payload that is used for
            identification. To route the message to the correct detector
            instance, the device must send a message payload that contains the
            same attribute-value.
          minLength: 1
          maxLength: 128
          pattern: ^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w\- ]+`)|([\w\-]+)))*$
        RoleArn:
          type: string
          description: >-
            The ARN of the role that grants permission to AWS IoT Events to
            perform its operations.
          minLength: 1
          maxLength: 2048
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            An array of key-value pairs to apply to this resource.


            For more information, see
            [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DetectorModelDefinition
        - RoleArn
      x-stackql-resource-name: DetectorModel
    InputDefinition:
      type: object
      additionalProperties: false
      description: The definition of the input.
      properties:
        Attributes:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          description: >-
            The attributes from the JSON payload that are made available by the
            input. Inputs are derived from messages sent to the AWS IoT Events
            system using `BatchPutMessage`. Each such message contains a JSON
            payload, and those attributes (and their paired values) specified
            here are available for use in the `condition` expressions used by
            detectors that monitor this input.
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/Attribute'
      required:
        - Attributes
    Attribute:
      type: object
      additionalProperties: false
      properties:
        DefaultValue:
          type: string
    Input:
      type: object
      properties:
        InputDefinition:
          $ref: '#/components/schemas/InputDefinition'
        InputDescription:
          description: A brief description of the input.
          minLength: 1
          maxLength: 128
          type: string
        InputName:
          description: The name of the input.
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: >-
            An array of key-value pairs to apply to this resource.


            For more information, see
            [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InputDefinition
      x-stackql-resource-name: Input
    Application:
      type: object
      properties:
        ApplicationId:
          description: The ID of the application.
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          minLength: 36
          maxLength: 36
        ApplicationArn:
          description: The ARN of the application.
          type: string
          pattern: ^arn:[!-~]+$
          minLength: 1
          maxLength: 1600
        ApplicationName:
          description: Application Name, should be between 1 and 256 characters.
          type: string
          pattern: ^[ -~]*$
          minLength: 1
          maxLength: 256
        ApplicationDescription:
          description: Application Description, should be between 1 and 2048 characters.
          type: string
          pattern: ^[ -~]*$
          minLength: 1
          maxLength: 2048
        ApplicationUrl:
          description: The URL of the application.
          type: string
        ApplicationState:
          description: The current state of the application.
          type: string
        ApplicationCreationDate:
          description: When the Application was created
          type: integer
        ApplicationLastUpdateDate:
          description: When the Application was last updated
          type: integer
        RoleArn:
          description: >-
            The ARN of the role that the web application assumes when it
            interacts with AWS IoT Core. For more info on configuring this
            attribute, see
            https://docs.aws.amazon.com/iot/latest/apireference/API_iotfleethub_CreateApplication.html#API_iotfleethub_CreateApplication_RequestSyntax
          type: string
          pattern: ^arn:[!-~]+$
          minLength: 1
          maxLength: 1600
        SsoClientId:
          description: >-
            The AWS SSO application generated client ID (used with AWS SSO
            APIs).
          type: string
        ErrorMessage:
          description: A message indicating why Create or Delete Application failed.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the application.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required:
        - ApplicationName
        - RoleArn
      x-stackql-resource-name: Application
    User:
      description: Contains information for a user identity in an access policy.
      type: object
      additionalProperties: false
      properties:
        id:
          description: The AWS SSO ID of the user.
          type: string
    IamUser:
      description: Contains information for an IAM user identity in an access policy.
      type: object
      additionalProperties: false
      properties:
        arn:
          description: The ARN of the IAM user.
          type: string
    IamRole:
      description: Contains information for an IAM role identity in an access policy.
      type: object
      additionalProperties: false
      properties:
        arn:
          description: The ARN of the IAM role.
          type: string
    Portal:
      type: object
      properties:
        PortalAuthMode:
          description: >-
            The service to use to authenticate users to the portal. Choose from
            SSO or IAM. You can't change this value after you create a portal.
          type: string
        PortalArn:
          description: The ARN of the portal, which has the following format.
          type: string
        PortalClientId:
          description: >-
            The AWS SSO application generated client ID (used with AWS SSO
            APIs).
          type: string
        PortalContactEmail:
          description: The AWS administrator's contact email address.
          type: string
        PortalDescription:
          description: A description for the portal.
          type: string
        PortalId:
          description: The ID of the portal.
          type: string
        PortalName:
          description: A friendly name for the portal.
          type: string
        PortalStartUrl:
          description: >-
            The public root URL for the AWS IoT AWS IoT SiteWise Monitor
            application portal.
          type: string
        RoleArn:
          description: >-
            The ARN of a service role that allows the portal's users to access
            your AWS IoT SiteWise resources on your behalf.
          type: string
        NotificationSenderEmail:
          description: The email address that sends alarm notifications.
          type: string
        Alarms:
          type: object
          description: >-
            Contains the configuration information of an alarm created in an AWS
            IoT SiteWise Monitor portal. You can use the alarm to monitor an
            asset property and get notified when the asset property value is
            outside a specified range.
          additionalProperties: false
          properties:
            AlarmRoleArn:
              type: string
              description: >-
                The ARN of the IAM role that allows the alarm to perform actions
                and access AWS resources and services, such as AWS IoT Events.
            NotificationLambdaArn:
              type: string
              description: >-
                The ARN of the AWS Lambda function that manages alarm
                notifications. For more information, see Managing alarm
                notifications in the AWS IoT Events Developer Guide.
        Tags:
          description: A list of key-value pairs that contain metadata for the portal.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - PortalContactEmail
        - PortalName
        - RoleArn
      x-stackql-resource-name: Portal
    Project:
      type: object
      properties:
        PortalId:
          description: The ID of the portal in which to create the project.
          type: string
        ProjectId:
          description: The ID of the project.
          type: string
        ProjectName:
          description: A friendly name for the project.
          type: string
        ProjectDescription:
          description: A description for the project.
          type: string
        ProjectArn:
          description: The ARN of the project.
          type: string
        AssetIds:
          description: The IDs of the assets to be associated to the project.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AssetId'
        Tags:
          description: A list of key-value pairs that contain metadata for the project.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - PortalId
        - ProjectName
      x-stackql-resource-name: Project
    AccessPolicyIdentity:
      description: >-
        The identity for this access policy. Choose either an SSO user or group
        or an IAM user or role.
      type: object
      additionalProperties: false
      properties:
        User:
          $ref: '#/components/schemas/User'
        IamUser:
          $ref: '#/components/schemas/IamUser'
        IamRole:
          $ref: '#/components/schemas/IamRole'
    AccessPolicyResource:
      description: >-
        The AWS IoT SiteWise Monitor resource for this access policy. Choose
        either portal or project but not both.
      type: object
      additionalProperties: false
      properties:
        Portal:
          $ref: '#/components/schemas/Portal'
        Project:
          $ref: '#/components/schemas/Project'
    AccessPolicy:
      type: object
      properties:
        AccessPolicyId:
          description: The ID of the access policy.
          type: string
        AccessPolicyArn:
          description: The ARN of the access policy.
          type: string
        AccessPolicyIdentity:
          description: >-
            The identity for this access policy. Choose either a user or a group
            but not both.
          $ref: '#/components/schemas/AccessPolicyIdentity'
        AccessPolicyPermission:
          description: >-
            The permission level for this access policy. Valid values are
            ADMINISTRATOR or VIEWER.
          type: string
        AccessPolicyResource:
          description: >-
            The AWS IoT SiteWise Monitor resource for this access policy. Choose
            either portal or project but not both.
          $ref: '#/components/schemas/AccessPolicyResource'
      required:
        - AccessPolicyIdentity
        - AccessPolicyPermission
        - AccessPolicyResource
      x-stackql-resource-name: AccessPolicy
    AssetProperty:
      description: The asset property's definition, alias, unit, and notification state.
      type: object
      additionalProperties: false
      required:
        - LogicalId
      properties:
        LogicalId:
          description: Customer provided ID for property.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
        Alias:
          description: The property alias that identifies the property.
          type: string
        NotificationState:
          description: >-
            The MQTT notification state (ENABLED or DISABLED) for this asset
            property.
          type: string
          enum:
            - ENABLED
            - DISABLED
        Unit:
          description: >-
            The unit of measure (such as Newtons or RPM) of the asset property.
            If you don't specify a value for this parameter, the service uses
            the value of the assetModelProperty in the asset model.
          type: string
    AssetHierarchy:
      description: A hierarchy specifies allowed parent/child asset relationships.
      type: object
      additionalProperties: false
      required:
        - LogicalId
        - ChildAssetId
      properties:
        LogicalId:
          description: The LogicalID of a hierarchy in the parent asset's model.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
        ChildAssetId:
          description: The ID of the child asset to be associated.
          type: string
    Asset:
      type: object
      properties:
        AssetId:
          description: The ID of the asset
          type: string
        AssetModelId:
          description: The ID of the asset model from which to create the asset.
          type: string
        AssetArn:
          description: The ARN of the asset
          type: string
        AssetName:
          description: A unique, friendly name for the asset.
          type: string
        AssetDescription:
          description: A description for the asset
          type: string
        AssetProperties:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetProperty'
        AssetHierarchies:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetHierarchy'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AssetName
        - AssetModelId
      x-stackql-resource-name: Asset
    AssetModelCompositeModel:
      description: >-
        Contains a composite model definition in an asset model. This composite
        model definition is applied to all assets created from the asset model.
      type: object
      additionalProperties: false
      required:
        - Name
        - Type
      properties:
        Description:
          description: A description for the asset composite model.
          type: string
        Name:
          description: A unique, friendly name for the asset composite model.
          type: string
        Type:
          description: >-
            The type of the composite model. For alarm composite models, this
            type is AWS/ALARM
          type: string
        CompositeModelProperties:
          description: >-
            The property definitions of the asset model. You can specify up to
            200 properties per asset model.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetModelProperty'
    AssetModelProperty:
      description: Contains information about an asset model property.
      type: object
      additionalProperties: false
      required:
        - LogicalId
        - Name
        - DataType
        - Type
      properties:
        LogicalId:
          description: Customer provided ID for property.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
        Name:
          description: The name of the asset model property.
          type: string
        DataType:
          description: The data type of the asset model property.
          $ref: '#/components/schemas/DataType'
        DataTypeSpec:
          description: The data type of the structure for this property.
          $ref: '#/components/schemas/DataTypeSpec'
        Unit:
          description: The unit of the asset model property, such as Newtons or RPM.
          type: string
        Type:
          description: The property type
          $ref: '#/components/schemas/PropertyType'
    DataType:
      description: An object that specifies the data type of a property.
      type: object
      properties:
        AllowedValues:
          description: The allowed values for this data type.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        NestedType:
          description: The nested type in the data type.
          $ref: '#/components/schemas/DataType'
        Relationship:
          description: A relationship that associates a component with another component.
          $ref: '#/components/schemas/Relationship'
        Type:
          description: The underlying type of the data type.
          type: string
          enum:
            - RELATIONSHIP
            - STRING
            - LONG
            - BOOLEAN
            - INTEGER
            - DOUBLE
            - LIST
            - MAP
        UnitOfMeasure:
          description: The unit of measure used in this data type.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
      additionalProperties: false
    DataTypeSpec:
      type: string
      enum:
        - AWS/ALARM_STATE
    PropertyType:
      description: >-
        Contains a property type, which can be one of attribute, measurement,
        metric, or transform.
      type: object
      additionalProperties: false
      required:
        - TypeName
      properties:
        TypeName:
          $ref: '#/components/schemas/TypeName'
        Attribute:
          $ref: '#/components/schemas/Attribute'
        Transform:
          $ref: '#/components/schemas/Transform'
        Metric:
          $ref: '#/components/schemas/Metric'
    TypeName:
      type: string
      enum:
        - Measurement
        - Attribute
        - Transform
        - Metric
    Transform:
      type: object
      additionalProperties: false
      properties:
        Expression:
          description: >-
            The mathematical expression that defines the transformation
            function. You can specify up to 10 functions per expression.
          type: string
        Variables:
          description: The list of variables used in the expression.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ExpressionVariable'
      required:
        - Expression
        - Variables
    Metric:
      type: object
      additionalProperties: false
      properties:
        Expression:
          description: >-
            The mathematical expression that defines the metric aggregation
            function. You can specify up to 10 functions per expression.
          type: string
        Variables:
          description: The list of variables used in the expression.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/ExpressionVariable'
        Window:
          description: >-
            The window (time interval) over which AWS IoT SiteWise computes the
            metric's aggregation expression
          $ref: '#/components/schemas/MetricWindow'
      required:
        - Expression
        - Variables
        - Window
    MetricWindow:
      description: >-
        Contains a time interval window used for data aggregate computations
        (for example, average, sum, count, and so on).
      type: object
      additionalProperties: false
      properties:
        Tumbling:
          $ref: '#/components/schemas/TumblingWindow'
    TumblingWindow:
      description: >-
        Contains a tumbling window, which is a repeating fixed-sized,
        non-overlapping, and contiguous time interval. This window is used in
        metric and aggregation computations.
      type: object
      additionalProperties: false
      properties:
        Interval:
          $ref: '#/components/schemas/Interval'
        Offset:
          $ref: '#/components/schemas/Offset'
      required:
        - Interval
    Interval:
      description: The time interval for the tumbling window.
      type: string
    Offset:
      description: >-
        The shift or reference point on timeline for the contiguous time
        intervals.
      type: string
    ExpressionVariable:
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The friendly name of the variable to be used in the expression.
          type: string
        Value:
          description: >-
            The variable that identifies an asset property from which to use
            values.
          $ref: '#/components/schemas/VariableValue'
      required:
        - Name
        - Value
    VariableValue:
      type: object
      additionalProperties: false
      properties:
        PropertyLogicalId:
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
        HierarchyLogicalId:
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
      required:
        - PropertyLogicalId
    AssetModelHierarchy:
      description: Contains information about an asset model hierarchy.
      type: object
      additionalProperties: false
      required:
        - LogicalId
        - Name
        - ChildAssetModelId
      properties:
        LogicalId:
          description: Customer provided ID for hierarchy.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[^\u0000-\u001F\u007F]+'
        Name:
          description: The name of the asset model hierarchy.
          type: string
        ChildAssetModelId:
          description: >-
            The ID of the asset model. All assets in this hierarchy must be
            instances of the child AssetModelId asset model.
          type: string
    AssetModel:
      type: object
      properties:
        AssetModelId:
          description: The ID of the asset model.
          type: string
        AssetModelArn:
          description: The ARN of the asset model, which has the following format.
          type: string
        AssetModelName:
          description: A unique, friendly name for the asset model.
          type: string
        AssetModelDescription:
          description: A description for the asset model.
          type: string
        AssetModelProperties:
          description: >-
            The property definitions of the asset model. You can specify up to
            200 properties per asset model.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetModelProperty'
        AssetModelCompositeModels:
          description: >-
            The composite asset models that are part of this asset model.
            Composite asset models are asset models that contain specific
            properties.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetModelCompositeModel'
        AssetModelHierarchies:
          description: >-
            The hierarchy definitions of the asset model. Each hierarchy
            specifies an asset model whose assets can be children of any other
            assets created from this asset model. You can specify up to 10
            hierarchies per asset model.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AssetModelHierarchy'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AssetModelName
      x-stackql-resource-name: AssetModel
    Dashboard:
      type: object
      properties:
        ProjectId:
          description: The ID of the project in which to create the dashboard.
          type: string
        DashboardId:
          description: The ID of the dashboard.
          type: string
        DashboardName:
          description: A friendly name for the dashboard.
          type: string
        DashboardDescription:
          description: A description for the dashboard.
          type: string
        DashboardDefinition:
          description: The dashboard definition specified in a JSON literal.
          type: string
        DashboardArn:
          description: The ARN of the dashboard.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the dashboard.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DashboardDefinition
        - DashboardDescription
        - DashboardName
      x-stackql-resource-name: Dashboard
    GatewayPlatform:
      description: Contains a gateway's platform information.
      type: object
      additionalProperties: false
      properties:
        Greengrass:
          description: A gateway that runs on AWS IoT Greengrass V1.
          $ref: '#/components/schemas/Greengrass'
        GreengrassV2:
          description: A gateway that runs on AWS IoT Greengrass V2.
          $ref: '#/components/schemas/GreengrassV2'
      oneOf:
        - required:
            - Greengrass
        - required:
            - GreengrassV2
    Greengrass:
      description: >-
        Contains the ARN of AWS IoT Greengrass Group V1 that the gateway runs
        on.
      type: object
      additionalProperties: false
      properties:
        GroupArn:
          description: The ARN of the Greengrass group.
          type: string
      required:
        - GroupArn
    GreengrassV2:
      description: >-
        Contains the CoreDeviceThingName of AWS IoT Greengrass Group V2 that the
        gateway runs on.
      type: object
      additionalProperties: false
      properties:
        CoreDeviceThingName:
          description: The name of the CoreDevice in GreenGrass V2.
          type: string
      required:
        - CoreDeviceThingName
    CapabilityNamespace:
      description: The namespace of the capability configuration.
      type: string
    CapabilityConfiguration:
      description: The JSON document that defines the gateway capability's configuration.
      type: string
    GatewayCapabilitySummary:
      description: Contains a summary of a gateway capability configuration.
      type: object
      additionalProperties: false
      properties:
        CapabilityNamespace:
          $ref: '#/components/schemas/CapabilityNamespace'
        CapabilityConfiguration:
          $ref: '#/components/schemas/CapabilityConfiguration'
      required:
        - CapabilityNamespace
    Gateway:
      type: object
      properties:
        GatewayName:
          description: A unique, friendly name for the gateway.
          type: string
        GatewayPlatform:
          description: >-
            The gateway's platform. You can only specify one platform in a
            gateway.
          $ref: '#/components/schemas/GatewayPlatform'
        Tags:
          description: A list of key-value pairs that contain metadata for the gateway.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        GatewayId:
          description: The ID of the gateway device.
          type: string
        GatewayCapabilitySummaries:
          description: >-
            A list of gateway capability summaries that each contain a namespace
            and status.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/GatewayCapabilitySummary'
      required:
        - GatewayName
        - GatewayPlatform
      x-stackql-resource-name: Gateway
    AssetId:
      description: The ID of the asset
      type: string
    DefinitionDocument:
      type: object
      additionalProperties: false
      properties:
        Language:
          type: string
        Text:
          type: string
      required:
        - Language
        - Text
    FlowTemplate:
      type: object
      properties:
        Id:
          type: string
        CompatibleNamespaceVersion:
          type: number
        Definition:
          $ref: '#/components/schemas/DefinitionDocument'
      required:
        - Definition
      x-stackql-resource-name: FlowTemplate
    DateTimeFormat:
      type: string
      format: date-time
    ParentComponentType:
      type: string
      pattern: '[a-zA-Z_\.\-0-9:]+'
    PropertyName:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    RequiredProperty:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    LambdaFunction:
      type: object
      properties:
        Arn:
          type: string
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):lambda:[a-z0-9-]+:[0-9]{12}:function:[\/a-zA-Z0-9_-]+
          minLength: 1
          maxLength: 128
      additionalProperties: false
      required:
        - Arn
    DataConnector:
      description: The data connector.
      type: object
      properties:
        IsNative:
          description: >-
            A Boolean value that specifies whether the data connector is native
            to IoT TwinMaker.
          type: boolean
        Lambda:
          description: The Lambda function associated with this data connector.
          $ref: '#/components/schemas/LambdaFunction'
      additionalProperties: false
    Function:
      description: The function of component type.
      type: object
      properties:
        ImplementedBy:
          description: The data connector.
          $ref: '#/components/schemas/DataConnector'
        RequiredProperties:
          description: The required properties of the function.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RequiredProperty'
        Scope:
          description: The scope of the function.
          type: string
          enum:
            - ENTITY
            - WORKSPACE
      additionalProperties: false
    DataValue:
      description: An object that specifies a value for a property.
      type: object
      properties:
        BooleanValue:
          description: A Boolean value.
          type: boolean
        DoubleValue:
          description: A double value.
          type: number
        Expression:
          description: An expression that produces the value.
          type: string
          pattern: (^\$\{Parameters\.[a-zA-z]+([a-zA-z_0-9]*)}$)
          minLength: 1
          maxLength: 316
        IntegerValue:
          description: An integer value.
          type: integer
        ListValue:
          description: A list of multiple values.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        LongValue:
          description: A long value.
          type: number
        StringValue:
          description: A string value.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        MapValue:
          description: An object that maps strings to multiple DataValue objects.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/DataValue'
          additionalProperties: false
        RelationshipValue:
          description: A value that relates a component to another component.
          type: object
          properties:
            TargetComponentName:
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
            TargetEntityId:
              type: string
              pattern: >-
                [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
              minLength: 1
              maxLength: 128
          additionalProperties: false
      additionalProperties: false
    Relationship:
      description: The type of the relationship.
      type: object
      properties:
        RelationshipType:
          description: The type of the relationship.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        TargetComponentTypeId:
          description: >-
            The ID of the target component type associated with this
            relationship.
          type: string
          pattern: '[a-zA-Z_\.\-0-9:]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    PropertyDefinition:
      description: An object that sets information about a property.
      type: object
      properties:
        Configurations:
          description: An object that specifies information about a property.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
          additionalProperties: false
        DataType:
          description: An object that contains information about the data type.
          $ref: '#/components/schemas/DataType'
        DefaultValue:
          description: An object that contains the default value.
          $ref: '#/components/schemas/DataValue'
        IsExternalId:
          description: >-
            A Boolean value that specifies whether the property ID comes from an
            external data store.
          type: boolean
        IsRequiredInEntity:
          description: A Boolean value that specifies whether the property is required.
          type: boolean
        IsStoredExternally:
          description: >-
            A Boolean value that specifies whether the property is stored
            externally.
          type: boolean
        IsTimeSeries:
          description: >-
            A Boolean value that specifies whether the property consists of time
            series data.
          type: boolean
      additionalProperties: false
    PropertyGroup:
      description: An object that specifies information about a property group.
      type: object
      properties:
        GroupType:
          description: The type of property group.
          type: string
          enum:
            - TABULAR
        PropertyNames:
          description: The list of property names in the property group.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PropertyName'
      additionalProperties: false
    Status:
      type: object
      properties:
        State:
          type: string
          enum:
            - CREATING
            - UPDATING
            - DELETING
            - ACTIVE
            - ERROR
        Error:
          type: object
          anyOf:
            - description: Empty Error object.
              type: object
              additionalProperties: false
            - description: Error object with Message and Code.
              type: object
              properties:
                Message:
                  type: string
                  minLength: 0
                  maxLength: 2048
                Code:
                  type: string
                  enum:
                    - VALIDATION_ERROR
                    - INTERNAL_FAILURE
              additionalProperties: false
      additionalProperties: false
    ComponentType:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace that contains the component type.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_\.\-0-9:]+'
        Description:
          description: The description of the component type.
          type: string
          minLength: 0
          maxLength: 512
        ExtendsFrom:
          description: Specifies the parent component type to extend.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ParentComponentType'
        Functions:
          description: >-
            a Map of functions in the component type. Each function's key must
            be unique to this map.
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Function'
        IsSingleton:
          description: >+
            A Boolean value that specifies whether an entity can have more than
            one component of this type.

          type: boolean
        PropertyDefinitions:
          description: >-
            An map of the property definitions in the component type. Each
            property definition's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyDefinition'
          additionalProperties: false
        PropertyGroups:
          description: >-
            An map of the property groups in the component type. Each property
            group's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Arn:
          description: The ARN of the component type.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        CreationDateTime:
          description: The date and time when the component type was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the component type was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Status:
          description: The current status of the component type.
          $ref: '#/components/schemas/Status'
        IsAbstract:
          description: >-
            A Boolean value that specifies whether the component type is
            abstract.
          type: boolean
        IsSchemaInitialized:
          description: >-
            A Boolean value that specifies whether the component type has a
            schema initializer and that the schema initializer has run.
          type: boolean
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - ComponentTypeId
      x-stackql-resource-name: ComponentType
    PropertyDefinitionConfiguration:
      description: An object that specifies information about a property.
      type: object
      x-patternProperties:
        '[a-zA-Z_\-0-9]+':
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    Property:
      type: object
      properties:
        Definition:
          description: An object that specifies information about a property.
          type: object
          properties:
            Configuration:
              description: An object that specifies information about a property.
              $ref: '#/components/schemas/PropertyDefinitionConfiguration'
            DataType:
              description: An object that contains information about the data type.
              $ref: '#/components/schemas/DataType'
            DefaultValue:
              description: An object that contains the default value.
              $ref: '#/components/schemas/DataValue'
            IsExternalId:
              description: >-
                A Boolean value that specifies whether the property ID comes
                from an external data store.
              type: boolean
            IsFinal:
              description: >-
                A Boolean value that specifies whether the property definition
                can be updated.
              type: boolean
            IsImported:
              description: >-
                A Boolean value that specifies whether the property definition
                is imported from an external data store.
              type: boolean
            IsInherited:
              description: >-
                A Boolean value that specifies whether the property definition
                is inherited from a parent entity.
              type: boolean
            IsRequiredInEntity:
              description: A Boolean value that specifies whether the property is required.
              type: boolean
            IsStoredExternally:
              description: >-
                A Boolean value that specifies whether the property is stored
                externally.
              type: boolean
            IsTimeSeries:
              description: >-
                A Boolean value that specifies whether the property consists of
                time series data.
              type: boolean
          additionalProperties: false
        Value:
          description: The value of the property.
          $ref: '#/components/schemas/DataValue'
      additionalProperties: false
    Component:
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        Description:
          description: The description of the component.
          type: string
          minLength: 0
          maxLength: 512
        DefinedIn:
          description: The name of the property definition set in the component.
          type: string
          minLength: 1
          maxLength: 256
        Properties:
          description: >-
            An object that maps strings to the properties to set in the
            component type. Each string in the mapping must be unique to this
            object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Property'
          additionalProperties: false
        PropertyGroups:
          description: >-
            An object that maps strings to the property groups to set in the
            component type. Each string in the mapping must be unique to this
            object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    Entity:
      type: object
      properties:
        EntityId:
          description: The ID of the entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: >-
            [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
        EntityName:
          description: The name of the entity.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_0-9-.][a-zA-Z_0-9-. ]*[a-zA-Z0-9]+'
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
        HasChildEntities:
          description: >-
            A Boolean value that specifies whether the entity has child entities
            or not.
          type: boolean
        ParentEntityId:
          description: The ID of the parent entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: >-
            \$ROOT|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
        Arn:
          description: The ARN of the entity.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the entity.
          type: string
          minLength: 0
          maxLength: 512
        CreationDateTime:
          description: The date and time when the entity was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the entity was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Components:
          description: A map that sets information about a component type.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Component'
          additionalProperties: false
      required:
        - WorkspaceId
        - EntityName
      x-stackql-resource-name: Entity
    Scene:
      type: object
      properties:
        SceneId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the scene.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the scene.
          type: string
          minLength: 0
          maxLength: 512
        ContentLocation:
          description: >-
            The relative path that specifies the location of the content
            definition file.
          type: string
          minLength: 0
          maxLength: 256
          pattern: '[sS]3://[A-Za-z0-9._/-]+'
        CreationDateTime:
          description: The date and time when the scene was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Capabilities:
          description: A list of capabilities that the scene uses to render.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            minLength: 0
            maxLength: 256
            pattern: .*
      required:
        - WorkspaceId
        - SceneId
        - ContentLocation
      x-stackql-resource-name: Scene
    SyncJob:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        SyncSource:
          description: The source of the SyncJob.
          type: string
          minLength: 1
          maxLength: 128
        SyncRole:
          description: The IAM Role that execute SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        CreationDateTime:
          description: The date and time when the sync job was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time when the sync job was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Arn:
          description: The ARN of the SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        State:
          description: The state of SyncJob.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_\-0-9]+'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
      required:
        - WorkspaceId
        - SyncSource
        - SyncRole
      x-stackql-resource-name: SyncJob
    Workspace:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: >-
            arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the workspace.
          type: string
          minLength: 0
          maxLength: 512
        Role:
          description: The ARN of the execution role associated with the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        S3Location:
          description: >-
            The ARN of the S3 bucket where resources associated with the
            workspace are stored.
          type: string
        CreationDateTime:
          description: The date and time when the workspace was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - Role
        - S3Location
      x-stackql-resource-name: Workspace
    Destination:
      type: object
      properties:
        Name:
          description: Unique name of destination
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          maxLength: 128
        Expression:
          description: Destination expression
          type: string
        ExpressionType:
          description: Must be RuleName
          type: string
          enum:
            - RuleName
            - MqttTopic
        Description:
          description: Destination description
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        RoleArn:
          description: AWS role ARN that grants access
          type: string
          minLength: 20
          maxLength: 2048
        Arn:
          description: Destination arn. Returned after successful create.
          type: string
      required:
        - Name
        - Expression
        - ExpressionType
        - RoleArn
      x-stackql-resource-name: Destination
    LoRaWANDeviceProfile:
      type: object
      additionalProperties: false
      properties:
        SupportsClassB:
          type: boolean
        ClassBTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        PingSlotPeriod:
          type: integer
          minimum: 128
          maximum: 4096
        PingSlotDr:
          type: integer
          minimum: 0
          maximum: 15
        PingSlotFreq:
          type: integer
          minimum: 1000000
          maximum: 16700000
        SupportsClassC:
          type: boolean
        ClassCTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        MacVersion:
          type: string
          maxLength: 64
        RegParamsRevision:
          type: string
          maxLength: 64
        RxDelay1:
          type: integer
          minimum: 0
          maximum: 15
        RxDrOffset1:
          type: integer
          minimum: 0
          maximum: 7
        RxFreq2:
          type: integer
          minimum: 1000000
          maximum: 16700000
        RxDataRate2:
          type: integer
          minimum: 0
          maximum: 15
        FactoryPresetFreqsList:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/FactoryPresetFreq'
        MaxEirp:
          type: integer
          minimum: 0
          maximum: 15
        MaxDutyCycle:
          type: integer
          minimum: 0
          maximum: 100
        SupportsJoin:
          type: boolean
        RfRegion:
          type: string
          maxLength: 64
        Supports32BitFCnt:
          type: boolean
    FactoryPresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    DeviceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: >-
            LoRaWANDeviceProfile supports all LoRa specific attributes for
            service profile for CreateDeviceProfile operation
          $ref: '#/components/schemas/LoRaWANDeviceProfile'
        Tags:
          description: >-
            A list of key-value pairs that contain metadata for the device
            profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: DeviceProfile
    LoRaWAN:
      type: object
      properties:
        RfRegion:
          description: Multicast group LoRaWAN RF region
          type: string
          minLength: 1
          maxLength: 64
        DlClass:
          description: Multicast group LoRaWAN DL Class
          type: string
          minLength: 1
          maxLength: 64
        NumberOfDevicesRequested:
          description: >-
            Multicast group number of devices requested. Returned after
            successful read.
          type: integer
        NumberOfDevicesInGroup:
          description: >-
            Multicast group number of devices in group. Returned after
            successful read.
          type: integer
      additionalProperties: false
      required:
        - RfRegion
        - DlClass
    FuotaTask:
      type: object
      properties:
        Name:
          description: Name of FUOTA task
          type: string
          maxLength: 256
        Description:
          description: FUOTA task description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: FUOTA task LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        FirmwareUpdateImage:
          description: FUOTA task firmware update image binary S3 link
          type: string
          minLength: 1
          maxLength: 2048
        FirmwareUpdateRole:
          description: FUOTA task firmware IAM role for reading S3
          type: string
          minLength: 1
          maxLength: 256
        Arn:
          description: FUOTA task arn. Returned after successful create.
          type: string
        Id:
          description: FUOTA task id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: A list of key-value pairs that contain metadata for the FUOTA task.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        FuotaTaskStatus:
          description: FUOTA task status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
        AssociateMulticastGroup:
          description: Multicast group to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateMulticastGroup:
          description: Multicast group to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
        - FirmwareUpdateImage
        - FirmwareUpdateRole
      x-stackql-resource-name: FuotaTask
    MulticastGroup:
      type: object
      properties:
        Name:
          description: Name of Multicast group
          type: string
          maxLength: 256
        Description:
          description: Multicast group description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: Multicast group LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        Arn:
          description: Multicast group arn. Returned after successful create.
          type: string
        Id:
          description: Multicast group id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: >-
            A list of key-value pairs that contain metadata for the Multicast
            group.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Status:
          description: Multicast group status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
      x-stackql-resource-name: MulticastGroup
    WirelessDeviceFrameInfo:
      type: string
      enum:
        - ENABLED
        - DISABLED
    LogLevel:
      type: string
      enum:
        - INFO
        - ERROR
        - DISABLED
    NetworkAnalyzerConfiguration:
      type: object
      properties:
        Name:
          description: Name of the network analyzer configuration
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
          maxLength: 1024
        Description:
          description: The description of the new resource
          type: string
          maxLength: 2048
        TraceContent:
          description: >-
            Trace content for your wireless gateway and wireless device
            resources
          type: object
          additionalProperties: false
          properties:
            WirelessDeviceFrameInfo:
              $ref: '#/components/schemas/WirelessDeviceFrameInfo'
            LogLevel:
              $ref: '#/components/schemas/LogLevel'
        WirelessDevices:
          description: >-
            List of wireless gateway resources that have been added to the
            network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        WirelessGateways:
          description: >-
            List of wireless gateway resources that have been added to the
            network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        Arn:
          description: >-
            Arn for network analyzer configuration, Returned upon successful
            create.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: NetworkAnalyzerConfiguration
    LoRaWANServiceProfile:
      type: object
      additionalProperties: false
      properties:
        UlRate:
          type: integer
        UlBucketSize:
          type: integer
        UlRatePolicy:
          type: string
        DlRate:
          type: integer
        DlBucketSize:
          type: integer
        DlRatePolicy:
          type: string
        AddGwMetadata:
          type: boolean
        DevStatusReqFreq:
          type: integer
        ReportDevStatusBattery:
          type: boolean
        ReportDevStatusMargin:
          type: boolean
        DrMin:
          type: integer
        DrMax:
          type: integer
        ChannelMask:
          type: string
        PrAllowed:
          type: boolean
        HrAllowed:
          type: boolean
        RaAllowed:
          type: boolean
        NwkGeoLoc:
          type: boolean
        TargetPer:
          type: integer
        MinGwDiversity:
          type: integer
    ServiceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: >-
            LoRaWAN supports all LoRa specific attributes for service profile
            for CreateServiceProfile operation
          $ref: '#/components/schemas/LoRaWANServiceProfile'
        Tags:
          description: >-
            A list of key-value pairs that contain metadata for the service
            profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: ServiceProfile
    LoRaWANGatewayVersion:
      type: object
      additionalProperties: false
      properties:
        PackageVersion:
          type: string
          minLength: 1
          maxLength: 32
        Model:
          type: string
          minLength: 1
          maxLength: 4096
        Station:
          type: string
          minLength: 1
          maxLength: 4096
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateSignature:
          type: string
          minLength: 1
          maxLength: 4096
        SigKeyCrc:
          type: integer
          format: int64
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    UpdateWirelessGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateDataSource:
          type: string
          minLength: 1
          maxLength: 4096
        UpdateDataRole:
          type: string
          minLength: 1
          maxLength: 2048
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      additionalProperties: false
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    TaskDefinition:
      type: object
      properties:
        Name:
          description: The name of the new resource.
          type: string
          minLength: 1
          maxLength: 256
        AutoCreateTasks:
          description: >-
            Whether to automatically create tasks using this task definition for
            all gateways with the specified current version. If false, the task
            must me created by calling CreateWirelessGatewayTask.
          type: boolean
        Update:
          description: Information about the gateways to update.
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
        LoRaWANUpdateGatewayTaskEntry:
          description: The list of task definitions.
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
        Id:
          description: The ID of the new wireless gateway task definition
          type: string
          pattern: >-
            [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
        TaskDefinitionType:
          description: >-
            A filter to list only the wireless gateway task definitions that use
            this task definition type
          type: string
          enum:
            - UPDATE
        Arn:
          description: TaskDefinition arn. Returned after successful create.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AutoCreateTasks
      x-stackql-resource-name: TaskDefinition
    OtaaV10x:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - AppEui
    OtaaV11:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        JoinEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - NwkKey
        - JoinEui
    SessionKeysAbpV11:
      type: object
      additionalProperties: false
      properties:
        FNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        SNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkSEncKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - FNwkSIntKey
        - SNwkSIntKey
        - NwkSEncKey
        - AppSKey
    AbpV11:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV11'
      required:
        - DevAddr
        - SessionKeys
    SessionKeysAbpV10x:
      type: object
      additionalProperties: false
      properties:
        NwkSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - NwkSKey
        - AppSKey
    AbpV10x:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV10x'
      required:
        - DevAddr
        - SessionKeys
    LoRaWANDevice:
      type: object
      additionalProperties: false
      properties:
        DevEui:
          type: string
          pattern: '[a-f0-9]{16}'
        DeviceProfileId:
          type: string
          maxLength: 256
        ServiceProfileId:
          type: string
          maxLength: 256
        OtaaV11:
          $ref: '#/components/schemas/OtaaV11'
        OtaaV10x:
          $ref: '#/components/schemas/OtaaV10x'
        AbpV11:
          $ref: '#/components/schemas/AbpV11'
        AbpV10x:
          $ref: '#/components/schemas/AbpV10x'
      oneOf:
        - required:
            - OtaaV11
        - required:
            - OtaaV10x
        - required:
            - AbpV11
        - required:
            - AbpV10x
    WirelessDevice:
      type: object
      properties:
        Type:
          description: Wireless device type, currently only Sidewalk and LoRa
          type: string
          enum:
            - Sidewalk
            - LoRaWAN
        Name:
          description: Wireless device name
          type: string
          maxLength: 256
        Description:
          description: Wireless device description
          type: string
          maxLength: 2048
        DestinationName:
          description: Wireless device destination name
          type: string
          maxLength: 128
        LoRaWAN:
          description: >-
            The combination of Package, Station and Model which represents the
            version of the LoRaWAN Wireless Device.
          $ref: '#/components/schemas/LoRaWANDevice'
        Tags:
          description: >-
            A list of key-value pairs that contain metadata for the device.
            Currently not supported, will not create if tags are passed.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Wireless device arn. Returned after successful create.
          type: string
        Id:
          description: Wireless device Id. Returned after successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: >-
            Thing arn. Passed into update to associate Thing with Wireless
            device.
          type: string
        ThingName:
          description: >-
            Thing Arn. If there is a Thing created, this can be returned with a
            Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
      required:
        - Type
        - DestinationName
      x-stackql-resource-name: WirelessDevice
    LoRaWANGateway:
      type: object
      additionalProperties: false
      properties:
        GatewayEui:
          type: string
          pattern: >-
            ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
        RfRegion:
          type: string
          maxLength: 64
      required:
        - GatewayEui
        - RfRegion
    WirelessGateway:
      type: object
      properties:
        Name:
          description: Name of Wireless Gateway.
          type: string
          maxLength: 256
        Description:
          description: Description of Wireless Gateway.
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the gateway.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LoRaWAN:
          description: >-
            The combination of Package, Station and Model which represents the
            version of the LoRaWAN Wireless Gateway.
          $ref: '#/components/schemas/LoRaWANGateway'
        Arn:
          description: Arn for Wireless Gateway. Returned upon successful create.
          type: string
        Id:
          description: Id for Wireless Gateway. Returned upon successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: >-
            Thing Arn. Passed into Update to associate a Thing with the Wireless
            Gateway.
          type: string
        ThingName:
          description: >-
            Thing Name. If there is a Thing created, this can be returned with a
            Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
      required:
        - LoRaWAN
      x-stackql-resource-name: WirelessGateway
x-stackql-views:
  - AccountAuditConfiguration:
      name: AccountAuditConfiguration
      id: aws.iot.AccountAuditConfiguration
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AccountId') as account_id,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.AuthenticatedCognitoRoleOverlyPermissiveCheck')
              as
              audit_check_configurations_authenticated_cognito_role_overly_permissive_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.CaCertificateExpiringCheck') as
              audit_check_configurations_ca_certificate_expiring_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.CaCertificateKeyQualityCheck') as
              audit_check_configurations_ca_certificate_key_quality_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.ConflictingClientIdsCheck') as
              audit_check_configurations_conflicting_client_ids_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.DeviceCertificateExpiringCheck') as
              audit_check_configurations_device_certificate_expiring_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.DeviceCertificateKeyQualityCheck') as
              audit_check_configurations_device_certificate_key_quality_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.DeviceCertificateSharedCheck') as
              audit_check_configurations_device_certificate_shared_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.IotPolicyOverlyPermissiveCheck') as
              audit_check_configurations_iot_policy_overly_permissive_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.IotRoleAliasAllowsAccessToUnusedServicesCheck')
              as
              audit_check_configurations_iot_role_alias_allows_access_to_unused_services_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.IotRoleAliasOverlyPermissiveCheck') as
              audit_check_configurations_iot_role_alias_overly_permissive_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.LoggingDisabledCheck') as
              audit_check_configurations_logging_disabled_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.RevokedCaCertificateStillActiveCheck')
              as
              audit_check_configurations_revoked_ca_certificate_still_active_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.RevokedDeviceCertificateStillActiveCheck')
              as
              audit_check_configurations_revoked_device_certificate_still_active_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.UnauthenticatedCognitoRoleOverlyPermissiveCheck')
              as
              audit_check_configurations_unauthenticated_cognito_role_overly_permissive_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.IntermediateCaRevokedForActiveDeviceCertificatesCheck')
              as
              audit_check_configurations_intermediate_ca_revoked_for_active_device_certificates_check,

              JSON_EXTRACT(Properties,
              '$.AuditCheckConfigurations.IoTPolicyPotentialMisConfigurationCheck')
              as
              audit_check_configurations_io_tpolicy_potential_mis_configuration_check,

              JSON_EXTRACT(Properties,
              '$.AuditNotificationTargetConfigurations.Sns') as
              audit_notification_target_configurations_sns,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::AccountAuditConfiguration' ;
  - Authorizer:
      name: Authorizer
      id: aws.iot.Authorizer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AuthorizerFunctionArn') as
              authorizer_function_arn,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AuthorizerName') as authorizer_name,

              JSON_EXTRACT(Properties, '$.SigningDisabled') as signing_disabled,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.TokenKeyName') as token_key_name,

              JSON_EXTRACT(Properties, '$.TokenSigningPublicKeys') as
              token_signing_public_keys,

              JSON_EXTRACT(Properties, '$.EnableCachingForHttp') as
              enable_caching_for_http,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Authorizer' ;
  - CACertificate:
      name: CACertificate
      id: aws.iot.CACertificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.CACertificatePem') as
              c_acertificate_pem,

              JSON_EXTRACT(Properties, '$.VerificationCertificatePem') as
              verification_certificate_pem,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.CertificateMode') as certificate_mode,

              JSON_EXTRACT(Properties, '$.AutoRegistrationStatus') as
              auto_registration_status,

              JSON_EXTRACT(Properties, '$.RemoveAutoRegistration') as
              remove_auto_registration,

              JSON_EXTRACT(Properties, '$.RegistrationConfig.TemplateBody') as
              registration_config_template_body,

              JSON_EXTRACT(Properties, '$.RegistrationConfig.RoleArn') as
              registration_config_role_arn,

              JSON_EXTRACT(Properties, '$.RegistrationConfig.TemplateName') as
              registration_config_template_name,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::CACertificate' ;
  - Certificate:
      name: Certificate
      id: aws.iot.Certificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.CACertificatePem') as
              c_acertificate_pem,

              JSON_EXTRACT(Properties, '$.CertificatePem') as certificate_pem,

              JSON_EXTRACT(Properties, '$.CertificateSigningRequest') as
              certificate_signing_request,

              JSON_EXTRACT(Properties, '$.CertificateMode') as certificate_mode,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Certificate' ;
  - CustomMetric:
      name: CustomMetric
      id: aws.iot.CustomMetric
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,

              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,

              JSON_EXTRACT(Properties, '$.MetricType') as metric_type,

              JSON_EXTRACT(Properties, '$.MetricArn') as metric_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::CustomMetric' ;
  - Dimension:
      name: Dimension
      id: aws.iot.Dimension
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Type') as type,

              JSON_EXTRACT(Properties, '$.StringValues') as string_values,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Arn') as arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Dimension' ;
  - DomainConfiguration:
      name: DomainConfiguration
      id: aws.iot.DomainConfiguration
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.DomainConfigurationName') as
              domain_configuration_name,

              JSON_EXTRACT(Properties,
              '$.AuthorizerConfig.AllowAuthorizerOverride') as
              authorizer_config_allow_authorizer_override,

              JSON_EXTRACT(Properties,
              '$.AuthorizerConfig.DefaultAuthorizerName') as
              authorizer_config_default_authorizer_name,

              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,

              JSON_EXTRACT(Properties, '$.ServerCertificateArns') as
              server_certificate_arns,

              JSON_EXTRACT(Properties, '$.ServiceType') as service_type,

              JSON_EXTRACT(Properties, '$.ValidationCertificateArn') as
              validation_certificate_arn,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.DomainConfigurationStatus') as
              domain_configuration_status,

              JSON_EXTRACT(Properties, '$.DomainType') as domain_type,

              JSON_EXTRACT(Properties, '$.ServerCertificates') as
              server_certificates,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::DomainConfiguration' ;
  - FleetMetric:
      name: FleetMetric
      id: aws.iot.FleetMetric
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.QueryString') as query_string,

              JSON_EXTRACT(Properties, '$.Period') as period,

              JSON_EXTRACT(Properties, '$.AggregationField') as
              aggregation_field,

              JSON_EXTRACT(Properties, '$.QueryVersion') as query_version,

              JSON_EXTRACT(Properties, '$.IndexName') as index_name,

              JSON_EXTRACT(Properties, '$.Unit') as unit,

              JSON_EXTRACT(Properties, '$.AggregationType.Name') as
              aggregation_type_name,

              JSON_EXTRACT(Properties, '$.AggregationType.Values') as
              aggregation_type_values,

              JSON_EXTRACT(Properties, '$.MetricArn') as metric_arn,

              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,

              JSON_EXTRACT(Properties, '$.LastModifiedDate') as
              last_modified_date,

              JSON_EXTRACT(Properties, '$.Version') as version,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::FleetMetric' ;
  - JobTemplate:
      name: JobTemplate
      id: aws.iot.JobTemplate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.JobArn') as job_arn,

              JSON_EXTRACT(Properties, '$.JobTemplateId') as job_template_id,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Document') as document,

              JSON_EXTRACT(Properties, '$.DocumentSource') as document_source,

              JSON_EXTRACT(Properties, '$.TimeoutConfig') as timeout_config,

              JSON_EXTRACT(Properties, '$.JobExecutionsRolloutConfig') as
              job_executions_rollout_config,

              JSON_EXTRACT(Properties, '$.AbortConfig') as abort_config,

              JSON_EXTRACT(Properties, '$.PresignedUrlConfig') as
              presigned_url_config,

              JSON_EXTRACT(Properties, '$.JobExecutionsRetryConfig') as
              job_executions_retry_config,

              JSON_EXTRACT(Properties, '$.MaintenanceWindows') as
              maintenance_windows,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::JobTemplate' ;
  - Logging:
      name: Logging
      id: aws.iot.Logging
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AccountId') as account_id,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.DefaultLogLevel') as default_log_level

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Logging' ;
  - MitigationAction:
      name: MitigationAction
      id: aws.iot.MitigationAction
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ActionName') as action_name,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties,
              '$.ActionParams.AddThingsToThingGroupParams') as
              action_params_add_things_to_thing_group_params,

              JSON_EXTRACT(Properties, '$.ActionParams.EnableIoTLoggingParams')
              as action_params_enable_io_tlogging_params,

              JSON_EXTRACT(Properties,
              '$.ActionParams.PublishFindingToSnsParams') as
              action_params_publish_finding_to_sns_params,

              JSON_EXTRACT(Properties,
              '$.ActionParams.ReplaceDefaultPolicyVersionParams') as
              action_params_replace_default_policy_version_params,

              JSON_EXTRACT(Properties,
              '$.ActionParams.UpdateCACertificateParams') as
              action_params_update_ca_certificate_params,

              JSON_EXTRACT(Properties,
              '$.ActionParams.UpdateDeviceCertificateParams') as
              action_params_update_device_certificate_params,

              JSON_EXTRACT(Properties, '$.MitigationActionArn') as
              mitigation_action_arn,

              JSON_EXTRACT(Properties, '$.MitigationActionId') as
              mitigation_action_id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::MitigationAction' ;
  - Policy:
      name: Policy
      id: aws.iot.Policy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,

              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Policy' ;
  - PolicyPrincipalAttachment:
      name: PolicyPrincipalAttachment
      id: aws.iot.PolicyPrincipalAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,

              JSON_EXTRACT(Properties, '$.Principal') as principal

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::PolicyPrincipalAttachment' ;
  - ProvisioningTemplate:
      name: ProvisioningTemplate
      id: aws.iot.ProvisioningTemplate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.TemplateArn') as template_arn,

              JSON_EXTRACT(Properties, '$.TemplateName') as template_name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Enabled') as enabled,

              JSON_EXTRACT(Properties, '$.ProvisioningRoleArn') as
              provisioning_role_arn,

              JSON_EXTRACT(Properties, '$.TemplateBody') as template_body,

              JSON_EXTRACT(Properties, '$.TemplateType') as template_type,

              JSON_EXTRACT(Properties, '$.PreProvisioningHook.TargetArn') as
              pre_provisioning_hook_target_arn,

              JSON_EXTRACT(Properties, '$.PreProvisioningHook.PayloadVersion')
              as pre_provisioning_hook_payload_version,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ProvisioningTemplate' ;
  - ResourceSpecificLogging:
      name: ResourceSpecificLogging
      id: aws.iot.ResourceSpecificLogging
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.TargetType') as target_type,

              JSON_EXTRACT(Properties, '$.TargetName') as target_name,

              JSON_EXTRACT(Properties, '$.LogLevel') as log_level,

              JSON_EXTRACT(Properties, '$.TargetId') as target_id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ResourceSpecificLogging' ;
  - RoleAlias:
      name: RoleAlias
      id: aws.iot.RoleAlias
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.RoleAlias') as role_alias,

              JSON_EXTRACT(Properties, '$.RoleAliasArn') as role_alias_arn,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.CredentialDurationSeconds') as
              credential_duration_seconds,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::RoleAlias' ;
  - ScheduledAudit:
      name: ScheduledAudit
      id: aws.iot.ScheduledAudit
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ScheduledAuditName') as
              scheduled_audit_name,

              JSON_EXTRACT(Properties, '$.Frequency') as frequency,

              JSON_EXTRACT(Properties, '$.DayOfMonth') as day_of_month,

              JSON_EXTRACT(Properties, '$.DayOfWeek') as day_of_week,

              JSON_EXTRACT(Properties, '$.TargetCheckNames') as
              target_check_names,

              JSON_EXTRACT(Properties, '$.ScheduledAuditArn') as
              scheduled_audit_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ScheduledAudit' ;
  - SecurityProfile:
      name: SecurityProfile
      id: aws.iot.SecurityProfile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.SecurityProfileName') as
              security_profile_name,

              JSON_EXTRACT(Properties, '$.SecurityProfileDescription') as
              security_profile_description,

              JSON_EXTRACT(Properties, '$.Behaviors') as behaviors,

              JSON_EXTRACT(Properties, '$.AlertTargets') as alert_targets,

              JSON_EXTRACT(Properties, '$.AdditionalMetricsToRetainV2') as
              additional_metrics_to_retain_v2,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.TargetArns') as target_arns,

              JSON_EXTRACT(Properties, '$.SecurityProfileArn') as
              security_profile_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::SecurityProfile' ;
  - Thing:
      name: Thing
      id: aws.iot.Thing
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AttributePayload.Attributes') as
              attribute_payload_attributes,

              JSON_EXTRACT(Properties, '$.ThingName') as thing_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Thing' ;
  - ThingPrincipalAttachment:
      name: ThingPrincipalAttachment
      id: aws.iot.ThingPrincipalAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Principal') as principal,

              JSON_EXTRACT(Properties, '$.ThingName') as thing_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ThingPrincipalAttachment' ;
  - TopicRule:
      name: TopicRule
      id: aws.iot.TopicRule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.RuleName') as rule_name,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.RuleDisabled') as
              topic_rule_payload_rule_disabled,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.ErrorAction') as
              topic_rule_payload_error_action,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.Description') as
              topic_rule_payload_description,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.AwsIotSqlVersion') as
              topic_rule_payload_aws_iot_sql_version,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.Actions') as
              topic_rule_payload_actions,

              JSON_EXTRACT(Properties, '$.TopicRulePayload.Sql') as
              topic_rule_payload_sql,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::TopicRule' ;
  - TopicRuleDestination:
      name: TopicRuleDestination
      id: aws.iot.TopicRuleDestination
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.HttpUrlProperties.ConfirmationUrl') as
              http_url_properties_confirmation_url,

              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,

              JSON_EXTRACT(Properties, '$.VpcProperties.SubnetIds') as
              vpc_properties_subnet_ids,

              JSON_EXTRACT(Properties, '$.VpcProperties.SecurityGroups') as
              vpc_properties_security_groups,

              JSON_EXTRACT(Properties, '$.VpcProperties.VpcId') as
              vpc_properties_vpc_id,

              JSON_EXTRACT(Properties, '$.VpcProperties.RoleArn') as
              vpc_properties_role_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::TopicRuleDestination' ;
  - Dataset:
      name: Dataset
      id: aws.iot.Dataset
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Actions') as actions,

              JSON_EXTRACT(Properties, '$.LateDataRules') as late_data_rules,

              JSON_EXTRACT(Properties, '$.DatasetName') as dataset_name,

              JSON_EXTRACT(Properties, '$.ContentDeliveryRules') as
              content_delivery_rules,

              JSON_EXTRACT(Properties, '$.Triggers') as triggers,

              JSON_EXTRACT(Properties, '$.VersioningConfiguration.Unlimited') as
              versioning_configuration_unlimited,

              JSON_EXTRACT(Properties, '$.VersioningConfiguration.MaxVersions')
              as versioning_configuration_max_versions,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.RetentionPeriod.NumberOfDays') as
              retention_period_number_of_days,

              JSON_EXTRACT(Properties, '$.RetentionPeriod.Unlimited') as
              retention_period_unlimited,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Dataset' ;
  - Pipeline:
      name: Pipeline
      id: aws.iot.Pipeline
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.PipelineActivities') as
              pipeline_activities

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Pipeline' ;
  - AlarmModel:
      name: AlarmModel
      id: aws.iot.AlarmModel
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AlarmModelName') as alarm_model_name,

              JSON_EXTRACT(Properties, '$.AlarmModelDescription') as
              alarm_model_description,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Key') as key,

              JSON_EXTRACT(Properties, '$.Severity') as severity,

              JSON_EXTRACT(Properties, '$.AlarmRule.SimpleRule') as
              alarm_rule_simple_rule,

              JSON_EXTRACT(Properties, '$.AlarmEventActions.AlarmActions') as
              alarm_event_actions_alarm_actions,

              JSON_EXTRACT(Properties,
              '$.AlarmCapabilities.InitializationConfiguration') as
              alarm_capabilities_initialization_configuration,

              JSON_EXTRACT(Properties, '$.AlarmCapabilities.AcknowledgeFlow') as
              alarm_capabilities_acknowledge_flow,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::AlarmModel' ;
  - DetectorModel:
      name: DetectorModel
      id: aws.iot.DetectorModel
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties,
              '$.DetectorModelDefinition.InitialStateName') as
              detector_model_definition_initial_state_name,

              JSON_EXTRACT(Properties, '$.DetectorModelDefinition.States') as
              detector_model_definition_states,

              JSON_EXTRACT(Properties, '$.DetectorModelDescription') as
              detector_model_description,

              JSON_EXTRACT(Properties, '$.DetectorModelName') as
              detector_model_name,

              JSON_EXTRACT(Properties, '$.EvaluationMethod') as
              evaluation_method,

              JSON_EXTRACT(Properties, '$.Key') as key,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::DetectorModel' ;
  - Input:
      name: Input
      id: aws.iot.Input
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.InputDefinition.Attributes') as
              input_definition_attributes,

              JSON_EXTRACT(Properties, '$.InputDescription') as
              input_description,

              JSON_EXTRACT(Properties, '$.InputName') as input_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Input' ;
  - Application:
      name: Application
      id: aws.iot.Application
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,

              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,

              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name,

              JSON_EXTRACT(Properties, '$.ApplicationDescription') as
              application_description,

              JSON_EXTRACT(Properties, '$.ApplicationUrl') as application_url,

              JSON_EXTRACT(Properties, '$.ApplicationState') as
              application_state,

              JSON_EXTRACT(Properties, '$.ApplicationCreationDate') as
              application_creation_date,

              JSON_EXTRACT(Properties, '$.ApplicationLastUpdateDate') as
              application_last_update_date,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.SsoClientId') as sso_client_id,

              JSON_EXTRACT(Properties, '$.ErrorMessage') as error_message,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Application' ;
  - Portal:
      name: Portal
      id: aws.iot.Portal
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.PortalAuthMode') as portal_auth_mode,

              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn,

              JSON_EXTRACT(Properties, '$.PortalClientId') as portal_client_id,

              JSON_EXTRACT(Properties, '$.PortalContactEmail') as
              portal_contact_email,

              JSON_EXTRACT(Properties, '$.PortalDescription') as
              portal_description,

              JSON_EXTRACT(Properties, '$.PortalId') as portal_id,

              JSON_EXTRACT(Properties, '$.PortalName') as portal_name,

              JSON_EXTRACT(Properties, '$.PortalStartUrl') as portal_start_url,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.NotificationSenderEmail') as
              notification_sender_email,

              JSON_EXTRACT(Properties, '$.Alarms') as alarms,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Portal' ;
  - Project:
      name: Project
      id: aws.iot.Project
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.PortalId') as portal_id,

              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,

              JSON_EXTRACT(Properties, '$.ProjectName') as project_name,

              JSON_EXTRACT(Properties, '$.ProjectDescription') as
              project_description,

              JSON_EXTRACT(Properties, '$.ProjectArn') as project_arn,

              JSON_EXTRACT(Properties, '$.AssetIds') as asset_ids,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Project' ;
  - AccessPolicy:
      name: AccessPolicy
      id: aws.iot.AccessPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AccessPolicyId') as access_policy_id,

              JSON_EXTRACT(Properties, '$.AccessPolicyArn') as
              access_policy_arn,

              JSON_EXTRACT(Properties, '$.AccessPolicyIdentity.User') as
              access_policy_identity_user,

              JSON_EXTRACT(Properties, '$.AccessPolicyIdentity.IamUser') as
              access_policy_identity_iam_user,

              JSON_EXTRACT(Properties, '$.AccessPolicyIdentity.IamRole') as
              access_policy_identity_iam_role,

              JSON_EXTRACT(Properties, '$.AccessPolicyPermission') as
              access_policy_permission,

              JSON_EXTRACT(Properties, '$.AccessPolicyResource.Portal') as
              access_policy_resource_portal,

              JSON_EXTRACT(Properties, '$.AccessPolicyResource.Project') as
              access_policy_resource_project

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::AccessPolicy' ;
  - Asset:
      name: Asset
      id: aws.iot.Asset
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AssetId') as asset_id,

              JSON_EXTRACT(Properties, '$.AssetModelId') as asset_model_id,

              JSON_EXTRACT(Properties, '$.AssetArn') as asset_arn,

              JSON_EXTRACT(Properties, '$.AssetName') as asset_name,

              JSON_EXTRACT(Properties, '$.AssetDescription') as
              asset_description,

              JSON_EXTRACT(Properties, '$.AssetProperties') as asset_properties,

              JSON_EXTRACT(Properties, '$.AssetHierarchies') as
              asset_hierarchies,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Asset' ;
  - AssetModel:
      name: AssetModel
      id: aws.iot.AssetModel
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AssetModelId') as asset_model_id,

              JSON_EXTRACT(Properties, '$.AssetModelArn') as asset_model_arn,

              JSON_EXTRACT(Properties, '$.AssetModelName') as asset_model_name,

              JSON_EXTRACT(Properties, '$.AssetModelDescription') as
              asset_model_description,

              JSON_EXTRACT(Properties, '$.AssetModelProperties') as
              asset_model_properties,

              JSON_EXTRACT(Properties, '$.AssetModelCompositeModels') as
              asset_model_composite_models,

              JSON_EXTRACT(Properties, '$.AssetModelHierarchies') as
              asset_model_hierarchies,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::AssetModel' ;
  - Dashboard:
      name: Dashboard
      id: aws.iot.Dashboard
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,

              JSON_EXTRACT(Properties, '$.DashboardId') as dashboard_id,

              JSON_EXTRACT(Properties, '$.DashboardName') as dashboard_name,

              JSON_EXTRACT(Properties, '$.DashboardDescription') as
              dashboard_description,

              JSON_EXTRACT(Properties, '$.DashboardDefinition') as
              dashboard_definition,

              JSON_EXTRACT(Properties, '$.DashboardArn') as dashboard_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Dashboard' ;
  - Gateway:
      name: Gateway
      id: aws.iot.Gateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.GatewayName') as gateway_name,

              JSON_EXTRACT(Properties, '$.GatewayPlatform.Greengrass') as
              gateway_platform_greengrass,

              JSON_EXTRACT(Properties, '$.GatewayPlatform.GreengrassV2') as
              gateway_platform_greengrass_v2,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.GatewayId') as gateway_id,

              JSON_EXTRACT(Properties, '$.GatewayCapabilitySummaries') as
              gateway_capability_summaries

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Gateway' ;
  - FlowTemplate:
      name: FlowTemplate
      id: aws.iot.FlowTemplate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.CompatibleNamespaceVersion') as
              compatible_namespace_version,

              JSON_EXTRACT(Properties, '$.Definition.Language') as
              definition_language,

              JSON_EXTRACT(Properties, '$.Definition.Text') as definition_text

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::FlowTemplate' ;
  - ComponentType:
      name: ComponentType
      id: aws.iot.ComponentType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,

              JSON_EXTRACT(Properties, '$.ComponentTypeId') as
              component_type_id,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ExtendsFrom') as extends_from,

              JSON_EXTRACT(Properties, '$.Functions') as functions,

              JSON_EXTRACT(Properties, '$.IsSingleton') as is_singleton,

              JSON_EXTRACT(Properties, '$.PropertyDefinitions') as
              property_definitions,

              JSON_EXTRACT(Properties, '$.PropertyGroups') as property_groups,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Status.State') as status_state,

              JSON_EXTRACT(Properties, '$.Status.Error') as status_error,

              JSON_EXTRACT(Properties, '$.IsAbstract') as is_abstract,

              JSON_EXTRACT(Properties, '$.IsSchemaInitialized') as
              is_schema_initialized,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ComponentType' ;
  - Entity:
      name: Entity
      id: aws.iot.Entity
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.EntityId') as entity_id,

              JSON_EXTRACT(Properties, '$.EntityName') as entity_name,

              JSON_EXTRACT(Properties, '$.Status.State') as status_state,

              JSON_EXTRACT(Properties, '$.Status.Error') as status_error,

              JSON_EXTRACT(Properties, '$.HasChildEntities') as
              has_child_entities,

              JSON_EXTRACT(Properties, '$.ParentEntityId') as parent_entity_id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,

              JSON_EXTRACT(Properties, '$.Components') as components

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Entity' ;
  - Scene:
      name: Scene
      id: aws.iot.Scene
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.SceneId') as scene_id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ContentLocation') as content_location,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,

              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Scene' ;
  - SyncJob:
      name: SyncJob
      id: aws.iot.SyncJob
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,

              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source,

              JSON_EXTRACT(Properties, '$.SyncRole') as sync_role,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.State') as state,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::SyncJob' ;
  - Workspace:
      name: Workspace
      id: aws.iot.Workspace
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Role') as role,

              JSON_EXTRACT(Properties, '$.S3Location') as s3_location,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Workspace' ;
  - Destination:
      name: Destination
      id: aws.iot.Destination
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Expression') as expression,

              JSON_EXTRACT(Properties, '$.ExpressionType') as expression_type,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Arn') as arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::Destination' ;
  - DeviceProfile:
      name: DeviceProfile
      id: aws.iot.DeviceProfile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsClassB') as
              lo_ra_wa_nsupports_class_b,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ClassBTimeout') as
              lo_ra_wa_nclass_btimeout,

              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotPeriod') as
              lo_ra_wa_nping_slot_period,

              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotDr') as
              lo_ra_wa_nping_slot_dr,

              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotFreq') as
              lo_ra_wa_nping_slot_freq,

              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsClassC') as
              lo_ra_wa_nsupports_class_c,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ClassCTimeout') as
              lo_ra_wa_nclass_ctimeout,

              JSON_EXTRACT(Properties, '$.LoRaWAN.MacVersion') as
              lo_ra_wa_nmac_version,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RegParamsRevision') as
              lo_ra_wa_nreg_params_revision,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDelay1') as
              lo_ra_wa_nrx_delay1,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDrOffset1') as
              lo_ra_wa_nrx_dr_offset1,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RxFreq2') as
              lo_ra_wa_nrx_freq2,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDataRate2') as
              lo_ra_wa_nrx_data_rate2,

              JSON_EXTRACT(Properties, '$.LoRaWAN.FactoryPresetFreqsList') as
              lo_ra_wa_nfactory_preset_freqs_list,

              JSON_EXTRACT(Properties, '$.LoRaWAN.MaxEirp') as
              lo_ra_wa_nmax_eirp,

              JSON_EXTRACT(Properties, '$.LoRaWAN.MaxDutyCycle') as
              lo_ra_wa_nmax_duty_cycle,

              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsJoin') as
              lo_ra_wa_nsupports_join,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as
              lo_ra_wa_nrf_region,

              JSON_EXTRACT(Properties, '$.LoRaWAN.Supports32BitFCnt') as
              lo_ra_wa_nsupports32_bit_fcnt,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::DeviceProfile' ;
  - FuotaTask:
      name: FuotaTask
      id: aws.iot.FuotaTask
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as
              lo_ra_wa_nrf_region,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DlClass') as
              lo_ra_wa_ndl_class,

              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesRequested') as
              lo_ra_wa_nnumber_of_devices_requested,

              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesInGroup') as
              lo_ra_wa_nnumber_of_devices_in_group,

              JSON_EXTRACT(Properties, '$.FirmwareUpdateImage') as
              firmware_update_image,

              JSON_EXTRACT(Properties, '$.FirmwareUpdateRole') as
              firmware_update_role,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.FuotaTaskStatus') as
              fuota_task_status,

              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as
              associate_wireless_device,

              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as
              disassociate_wireless_device,

              JSON_EXTRACT(Properties, '$.AssociateMulticastGroup') as
              associate_multicast_group,

              JSON_EXTRACT(Properties, '$.DisassociateMulticastGroup') as
              disassociate_multicast_group

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::FuotaTask' ;
  - MulticastGroup:
      name: MulticastGroup
      id: aws.iot.MulticastGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as
              lo_ra_wa_nrf_region,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DlClass') as
              lo_ra_wa_ndl_class,

              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesRequested') as
              lo_ra_wa_nnumber_of_devices_requested,

              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesInGroup') as
              lo_ra_wa_nnumber_of_devices_in_group,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as
              associate_wireless_device,

              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as
              disassociate_wireless_device

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::MulticastGroup' ;
  - NetworkAnalyzerConfiguration:
      name: NetworkAnalyzerConfiguration
      id: aws.iot.NetworkAnalyzerConfiguration
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.TraceContent') as trace_content,

              JSON_EXTRACT(Properties, '$.WirelessDevices') as wireless_devices,

              JSON_EXTRACT(Properties, '$.WirelessGateways') as
              wireless_gateways,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::NetworkAnalyzerConfiguration' ;
  - ServiceProfile:
      name: ServiceProfile
      id: aws.iot.ServiceProfile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.LoRaWAN.UlRate') as lo_ra_wa_nul_rate,

              JSON_EXTRACT(Properties, '$.LoRaWAN.UlBucketSize') as
              lo_ra_wa_nul_bucket_size,

              JSON_EXTRACT(Properties, '$.LoRaWAN.UlRatePolicy') as
              lo_ra_wa_nul_rate_policy,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DlRate') as lo_ra_wa_ndl_rate,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DlBucketSize') as
              lo_ra_wa_ndl_bucket_size,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DlRatePolicy') as
              lo_ra_wa_ndl_rate_policy,

              JSON_EXTRACT(Properties, '$.LoRaWAN.AddGwMetadata') as
              lo_ra_wa_nadd_gw_metadata,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DevStatusReqFreq') as
              lo_ra_wa_ndev_status_req_freq,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ReportDevStatusBattery') as
              lo_ra_wa_nreport_dev_status_battery,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ReportDevStatusMargin') as
              lo_ra_wa_nreport_dev_status_margin,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DrMin') as lo_ra_wa_ndr_min,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DrMax') as lo_ra_wa_ndr_max,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ChannelMask') as
              lo_ra_wa_nchannel_mask,

              JSON_EXTRACT(Properties, '$.LoRaWAN.PrAllowed') as
              lo_ra_wa_npr_allowed,

              JSON_EXTRACT(Properties, '$.LoRaWAN.HrAllowed') as
              lo_ra_wa_nhr_allowed,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RaAllowed') as
              lo_ra_wa_nra_allowed,

              JSON_EXTRACT(Properties, '$.LoRaWAN.NwkGeoLoc') as
              lo_ra_wa_nnwk_geo_loc,

              JSON_EXTRACT(Properties, '$.LoRaWAN.TargetPer') as
              lo_ra_wa_ntarget_per,

              JSON_EXTRACT(Properties, '$.LoRaWAN.MinGwDiversity') as
              lo_ra_wa_nmin_gw_diversity,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::ServiceProfile' ;
  - TaskDefinition:
      name: TaskDefinition
      id: aws.iot.TaskDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.AutoCreateTasks') as
              auto_create_tasks,

              JSON_EXTRACT(Properties, '$.Update.UpdateDataSource') as
              update_update_data_source,

              JSON_EXTRACT(Properties, '$.Update.UpdateDataRole') as
              update_update_data_role,

              JSON_EXTRACT(Properties, '$.Update.LoRaWAN') as update_lo_ra_wa_n,

              JSON_EXTRACT(Properties,
              '$.LoRaWANUpdateGatewayTaskEntry.CurrentVersion') as
              lo_ra_wa_nupdate_gateway_task_entry_current_version,

              JSON_EXTRACT(Properties,
              '$.LoRaWANUpdateGatewayTaskEntry.UpdateVersion') as
              lo_ra_wa_nupdate_gateway_task_entry_update_version,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.TaskDefinitionType') as
              task_definition_type,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::TaskDefinition' ;
  - WirelessDevice:
      name: WirelessDevice
      id: aws.iot.WirelessDevice
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Type') as type,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.DestinationName') as destination_name,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DevEui') as lo_ra_wa_ndev_eui,

              JSON_EXTRACT(Properties, '$.LoRaWAN.DeviceProfileId') as
              lo_ra_wa_ndevice_profile_id,

              JSON_EXTRACT(Properties, '$.LoRaWAN.ServiceProfileId') as
              lo_ra_wa_nservice_profile_id,

              JSON_EXTRACT(Properties, '$.LoRaWAN.OtaaV11') as
              lo_ra_wa_notaa_v11,

              JSON_EXTRACT(Properties, '$.LoRaWAN.OtaaV10x') as
              lo_ra_wa_notaa_v10x,

              JSON_EXTRACT(Properties, '$.LoRaWAN.AbpV11') as lo_ra_wa_nabp_v11,

              JSON_EXTRACT(Properties, '$.LoRaWAN.AbpV10x') as
              lo_ra_wa_nabp_v10x,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,

              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,

              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as
              last_uplink_received_at

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::WirelessDevice' ;
  - WirelessGateway:
      name: WirelessGateway
      id: aws.iot.WirelessGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.LoRaWAN.GatewayEui') as
              lo_ra_wa_ngateway_eui,

              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as
              lo_ra_wa_nrf_region,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,

              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,

              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as
              last_uplink_received_at

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::IoT::WirelessGateway' ;
