openapi: 3.0.0
info:
  title: SSM
  version: 1.0.0
paths: {}
components:
  schemas:
    Target:
      type: object
      additionalProperties: false
      properties:
        Values:
          type: array
          uniqueItems: false
          items:
            type: string
        Key:
          type: string
      required:
        - Values
        - Key
    ParameterValues:
      type: array
      items:
        type: string
    S3Region:
      type: string
      minLength: 3
      maxLength: 20
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3KeyPrefix:
      type: string
      maxLength: 1024
    S3OutputLocation:
      type: object
      properties:
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      additionalProperties: false
    InstanceAssociationOutputLocation:
      type: object
      properties:
        S3Location:
          $ref: '#/components/schemas/S3OutputLocation'
      additionalProperties: false
    Association:
      type: object
      properties:
        AssociationId:
          description: Unique identifier of the association.
          type: string
          pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          x-examples:
            - 88df7b09-95e8-48c4-a3cb-08c2c20d5110
            - 203dd0ec-0055-4bf0-a872-707f72ef06aa
        AssociationName:
          description: The name of the association.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
        DocumentVersion:
          description: The version of the SSM document to associate with the target.
          type: string
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
        InstanceId:
          description: The ID of the instance that the SSM document is associated with.
          type: string
          pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
          x-examples:
            - i-0e60836d21cf313c4
            - mi-0532c22e49636ee13
        Name:
          description: The name of the SSM document.
          type: string
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          x-examples:
            - AWS-GatherSoftwareInventory
            - MyCustomSSMDocument
        Parameters:
          description: Parameter values that the SSM document uses at runtime.
          type: object
          x-patternProperties:
            .*{1,255}:
              $ref: '#/components/schemas/ParameterValues'
          additionalProperties: false
        ScheduleExpression:
          description: A Cron or Rate expression that specifies when the association is applied to the target.
          type: string
          minLength: 1
          maxLength: 256
          x-examples:
            - cron(0 0 */1 * * ? *)
            - cron(0 16 ? * TUE *)
            - rate(30 minutes)
            - rate(7 days)
        Targets:
          description: The targets that the SSM document sends commands to.
          type: array
          items:
            $ref: '#/components/schemas/Target'
          minItems: 0
          maxItems: 5
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
        AutomationTargetParameterName:
          type: string
          minLength: 1
          maxLength: 50
        MaxErrors:
          type: string
          pattern: ^([1-9][0-9]{0,6}|[0]|[1-9][0-9]%|[0-9]%|100%)$
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
        MaxConcurrency:
          type: string
          pattern: ^([1-9][0-9]{0,6}|[1-9][0-9]%|[1-9]%|100%)$
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
        ComplianceSeverity:
          type: string
          enum:
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - UNSPECIFIED
        SyncCompliance:
          type: string
          enum:
            - AUTO
            - MANUAL
        WaitForSuccessTimeoutSeconds:
          type: integer
          minimum: 15
          maximum: 172800
        ApplyOnlyAtCronInterval:
          type: boolean
        CalendarNames:
          type: array
          items:
            type: string
          x-examples:
            - - calendar1
              - calendar2
            - - calendar3
        ScheduleOffset:
          type: integer
          minimum: 1
          maximum: 6
      required:
        - Name
      x-stackql-resource-name: Association
    AttachmentsSource:
      type: object
      properties:
        Key:
          description: The key of a key-value pair that identifies the location of an attachment to a document.
          type: string
          enum:
            - SourceUrl
            - S3FileUrl
            - AttachmentReference
        Values:
          description: The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100000
          minItems: 1
          maxItems: 1
          x-insertionOrder: false
        Name:
          description: The name of the document attachment file.
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 1
          maxLength: 128
      additionalProperties: false
    Tag:
      description: A key-value pair to tag a resource.
      additionalProperties: false
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    DocumentRequires:
      type: object
      properties:
        Name:
          description: The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
          type: string
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          maxLength: 200
        Version:
          description: The document version required by the current document.
          type: string
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
          maxLength: 8
      additionalProperties: false
    Document:
      type: object
      properties:
        Content:
          type: string
        Attachments:
          description: A list of key and value pairs that describe attachments to a version of a document.
          type: array
          items:
            $ref: '#/components/schemas/AttachmentsSource'
          minItems: 0
          maxItems: 20
          x-insertionOrder: false
        Name:
          description: A name for the Systems Manager document.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
        VersionName:
          description: An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{1,128}$
        DocumentType:
          description: The type of document to create.
          type: string
          enum:
            - ApplicationConfiguration
            - ApplicationConfigurationSchema
            - Automation
            - Automation.ChangeTemplate
            - ChangeCalendar
            - CloudFormation
            - Command
            - DeploymentStrategy
            - Package
            - Policy
            - ProblemAnalysis
            - ProblemAnalysisTemplate
            - Session
        DocumentFormat:
          description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
          type: string
          enum:
            - YAML
            - JSON
            - TEXT
          default: JSON
        TargetType:
          description: Specify a target type to define the kinds of resources the document can run on.
          type: string
          pattern: ^\/[\w\.\-\:\/]*$
        Tags:
          description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 1000
          x-insertionOrder: false
        Requires:
          description: A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
          type: array
          items:
            $ref: '#/components/schemas/DocumentRequires'
          minItems: 1
          x-insertionOrder: false
        UpdateMethod:
          description: Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
          type: string
          enum:
            - Replace
            - NewVersion
          default: Replace
      required:
        - Content
      x-stackql-resource-name: Document
    MaintenanceWindow:
      type: object
      properties:
        StartDate:
          type: string
        Description:
          type: string
        AllowUnassociatedTargets:
          type: boolean
        Cutoff:
          type: integer
        Schedule:
          type: string
        Duration:
          type: integer
        ScheduleOffset:
          type: integer
        Id:
          type: string
        EndDate:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
        ScheduleTimezone:
          type: string
      required:
        - AllowUnassociatedTargets
        - Cutoff
        - Schedule
        - Duration
        - Name
      x-stackql-resource-name: MaintenanceWindow
    Targets:
      description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
      type: object
      properties:
        ContactTargetInfo:
          $ref: '#/components/schemas/ContactTargetInfo'
        ChannelTargetInfo:
          $ref: '#/components/schemas/ChannelTargetInfo'
      additionalProperties: false
      oneOf:
        - required:
            - ChannelTargetInfo
        - required:
            - ContactTargetInfo
    MaintenanceWindowTarget:
      type: object
      properties:
        OwnerInformation:
          type: string
        Description:
          type: string
        WindowId:
          type: string
        ResourceType:
          type: string
        Targets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Targets'
        Id:
          type: string
        Name:
          type: string
      required:
        - WindowId
        - ResourceType
        - Targets
      x-stackql-resource-name: MaintenanceWindowTarget
    TaskInvocationParameters:
      type: object
      additionalProperties: false
      properties:
        MaintenanceWindowStepFunctionsParameters:
          $ref: '#/components/schemas/MaintenanceWindowStepFunctionsParameters'
        MaintenanceWindowRunCommandParameters:
          $ref: '#/components/schemas/MaintenanceWindowRunCommandParameters'
        MaintenanceWindowLambdaParameters:
          $ref: '#/components/schemas/MaintenanceWindowLambdaParameters'
        MaintenanceWindowAutomationParameters:
          $ref: '#/components/schemas/MaintenanceWindowAutomationParameters'
    CloudWatchOutputConfig:
      type: object
      additionalProperties: false
      properties:
        CloudWatchOutputEnabled:
          type: boolean
        CloudWatchLogGroupName:
          type: string
    MaintenanceWindowRunCommandParameters:
      type: object
      additionalProperties: false
      properties:
        TimeoutSeconds:
          type: integer
        Comment:
          type: string
        OutputS3KeyPrefix:
          type: string
        Parameters:
          type: object
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/CloudWatchOutputConfig'
        DocumentHashType:
          type: string
        ServiceRoleArn:
          type: string
        NotificationConfig:
          $ref: '#/components/schemas/NotificationConfig'
        DocumentVersion:
          type: string
        OutputS3BucketName:
          type: string
        DocumentHash:
          type: string
    MaintenanceWindowAutomationParameters:
      type: object
      additionalProperties: false
      properties:
        Parameters:
          type: object
        DocumentVersion:
          type: string
    NotificationConfig:
      type: object
      additionalProperties: false
      properties:
        NotificationEvents:
          type: array
          uniqueItems: false
          items:
            type: string
        NotificationArn:
          type: string
        NotificationType:
          type: string
      required:
        - NotificationArn
    MaintenanceWindowStepFunctionsParameters:
      type: object
      additionalProperties: false
      properties:
        Input:
          type: string
        Name:
          type: string
    LoggingInfo:
      type: object
      additionalProperties: false
      properties:
        Region:
          type: string
        S3Prefix:
          type: string
        S3Bucket:
          type: string
      required:
        - S3Bucket
        - Region
    MaintenanceWindowLambdaParameters:
      type: object
      additionalProperties: false
      properties:
        Qualifier:
          type: string
        Payload:
          type: string
        ClientContext:
          type: string
    MaintenanceWindowTask:
      type: object
      properties:
        MaxErrors:
          type: string
        Description:
          type: string
        ServiceRoleArn:
          type: string
        Priority:
          type: integer
        MaxConcurrency:
          type: string
        Targets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Target'
        Name:
          type: string
        TaskArn:
          type: string
        TaskInvocationParameters:
          $ref: '#/components/schemas/TaskInvocationParameters'
        WindowId:
          type: string
        TaskParameters:
          type: object
        TaskType:
          type: string
        CutoffBehavior:
          type: string
        Id:
          type: string
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
      required:
        - WindowId
        - Priority
        - TaskType
        - TaskArn
      x-stackql-resource-name: MaintenanceWindowTask
    Parameter:
      type: object
      properties:
        Type:
          type: string
        Description:
          type: string
        Policies:
          type: string
        AllowedPattern:
          type: string
        Tier:
          type: string
        Value:
          type: string
        DataType:
          type: string
        Id:
          type: string
        Tags:
          type: object
        Name:
          type: string
      required:
        - Type
        - Value
      x-stackql-resource-name: Parameter
    PatchFilterGroup:
      type: object
      additionalProperties: false
      properties:
        PatchFilters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchFilter'
    PatchFilter:
      type: object
      additionalProperties: false
      properties:
        Values:
          type: array
          uniqueItems: false
          items:
            type: string
        Key:
          type: string
    Rule:
      type: object
      additionalProperties: false
      properties:
        ApproveUntilDate:
          $ref: '#/components/schemas/PatchStringDate'
        ApproveAfterDays:
          type: integer
        EnableNonSecurity:
          type: boolean
        ComplianceLevel:
          type: string
        PatchFilterGroup:
          $ref: '#/components/schemas/PatchFilterGroup'
    PatchStringDate:
      type: object
      additionalProperties: false
    PatchSource:
      type: object
      additionalProperties: false
      properties:
        Products:
          type: array
          uniqueItems: false
          items:
            type: string
        Configuration:
          type: string
        Name:
          type: string
    RuleGroup:
      type: object
      additionalProperties: false
      properties:
        PatchRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Rule'
    PatchBaseline:
      type: object
      properties:
        OperatingSystem:
          type: string
        Description:
          type: string
        ApprovalRules:
          $ref: '#/components/schemas/RuleGroup'
        Sources:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchSource'
        Name:
          type: string
        RejectedPatches:
          type: array
          uniqueItems: false
          items:
            type: string
        ApprovedPatches:
          type: array
          uniqueItems: false
          items:
            type: string
        RejectedPatchesAction:
          type: string
        PatchGroups:
          type: array
          uniqueItems: false
          items:
            type: string
        ApprovedPatchesComplianceLevel:
          type: string
        ApprovedPatchesEnableNonSecurity:
          type: boolean
        Id:
          type: string
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: PatchBaseline
    S3Destination:
      type: object
      additionalProperties: false
      properties:
        KMSKeyArn:
          type: string
          minLength: 1
          maxLength: 512
        BucketPrefix:
          type: string
          minLength: 1
          maxLength: 256
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 1
          maxLength: 1024
      required:
        - BucketName
        - BucketRegion
        - SyncFormat
    SyncSource:
      type: object
      additionalProperties: false
      properties:
        IncludeFutureRegions:
          type: boolean
        SourceRegions:
          type: array
          uniqueItems: false
          items:
            type: string
        SourceType:
          type: string
          minLength: 1
          maxLength: 64
        AwsOrganizationsSource:
          $ref: '#/components/schemas/AwsOrganizationsSource'
      required:
        - SourceType
        - SourceRegions
    AwsOrganizationsSource:
      type: object
      additionalProperties: false
      properties:
        OrganizationalUnits:
          type: array
          uniqueItems: false
          items:
            type: string
        OrganizationSourceType:
          type: string
          minLength: 1
          maxLength: 64
      required:
        - OrganizationSourceType
    ResourceDataSync:
      type: object
      properties:
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        KMSKeyArn:
          type: string
          minLength: 0
          maxLength: 512
        SyncSource:
          $ref: '#/components/schemas/SyncSource'
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 0
          maxLength: 1024
        SyncName:
          type: string
          minLength: 1
          maxLength: 64
        SyncType:
          type: string
          minLength: 1
          maxLength: 64
        BucketPrefix:
          type: string
          minLength: 0
          maxLength: 64
      required:
        - SyncName
      x-stackql-resource-name: ResourceDataSync
    ResourcePolicy:
      type: object
      properties:
        ResourceArn:
          type: string
          description: Arn of OpsItemGroup etc.
        Policy:
          type: string
        PolicyId:
          type: string
          description: 'An unique identifier within the policies of a resource. '
        PolicyHash:
          type: string
          description: A snapshot identifier for the policy over time.
      required:
        - ResourceArn
        - Policy
      x-stackql-resource-name: ResourcePolicy
    ContactTargetInfo:
      type: object
      description: The contact that SSM Incident Manager is engaging during an incident.
      properties:
        ContactId:
          description: The Amazon Resource Name (ARN) of the contact.
          type: string
        IsEssential:
          type: boolean
          description: A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.
      required:
        - ContactId
        - IsEssential
      additionalProperties: false
    ChannelTargetInfo:
      type: object
      description: Information about the contact channel that SSM Incident Manager uses to engage the contact.
      properties:
        ChannelId:
          description: The Amazon Resource Name (ARN) of the contact channel.
          type: string
        RetryIntervalInMinutes:
          type: integer
          description: The number of minutes to wait to retry sending engagement in the case the engagement initially fails.
      required:
        - ChannelId
        - RetryIntervalInMinutes
      additionalProperties: false
    Stage:
      description: A set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.
      type: object
      properties:
        DurationInMinutes:
          description: The time to wait until beginning the next stage.
          type: integer
        Targets:
          type: array
          x-insertionOrder: false
          description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
          items:
            $ref: '#/components/schemas/Targets'
      required:
        - DurationInMinutes
      additionalProperties: false
    Contact:
      type: object
      properties:
        Alias:
          description: Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-z0-9_\-\.]*$
        DisplayName:
          description: Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9_\-\s]*$
        Type:
          description: 'Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“.'
          type: string
          enum:
            - PERSONAL
            - CUSTOM
            - SERVICE
            - ESCALATION
            - ONCALL_SCHEDULE
        Plan:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          items:
            $ref: '#/components/schemas/Stage'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      required:
        - Alias
        - DisplayName
        - Type
      x-stackql-resource-name: Contact
    ContactChannel:
      type: object
      properties:
        ContactId:
          description: ARN of the contact resource
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        ChannelName:
          description: The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z 0-9_\-+''&amp;\uD83C-\uDBFF\uDC00-\uDFFF\u2000-\u3300]+'
        ChannelType:
          description: 'Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT.'
          type: string
          enum:
            - SMS
            - VOICE
            - EMAIL
        DeferActivation:
          type: boolean
          description: If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.
        ChannelAddress:
          description: The details that SSM Incident Manager uses when trying to engage the contact channel.
          type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the engagement to a contact channel.
      x-stackql-resource-name: ContactChannel
    Plan:
      type: object
      properties:
        ContactId:
          description: Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
          type: string
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        Stages:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Stage'
        RotationIds:
          description: Rotation Ids to associate with Oncall Contact for engagement.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      x-stackql-resource-name: Plan
    HandOffTime:
      type: string
      pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
      description: Details about when an on-call rotation shift begins or ends. Time of the day in format HH:MM
    CoverageTime:
      type: object
      description: StartTime and EndTime for the Shift
      properties:
        StartTime:
          $ref: '#/components/schemas/HandOffTime'
        EndTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - StartTime
        - EndTime
      additionalProperties: false
    ShiftCoverage:
      type: object
      description: Information about the days of the week included in on-call rotation coverage.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        CoverageTimes:
          description: Information about when an on-call shift begins and ends.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoverageTime'
      required:
        - DayOfWeek
        - CoverageTimes
      additionalProperties: false
    DayOfWeek:
      description: 'The day of the week when weekly recurring on-call shift rotations begin. '
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
    MonthlySetting:
      type: object
      description: DayOfWeek for Month and HandOff Time for Monthly Recurring Rotation.
      properties:
        DayOfMonth:
          description: The day of the month when monthly recurring on-call rotations begin.
          type: integer
          minimum: 1
          maximum: 31
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfMonth
        - HandOffTime
      additionalProperties: false
    WeeklySetting:
      type: object
      description: DayOfWeek for Rotation and HandOff Time for Weekly Recurring Rotation.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfWeek
        - HandOffTime
      additionalProperties: false
    DailySetting:
      type: object
      description: Handoff time for Daily Recurring Rotation.
      properties:
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - HandOffTime
      additionalProperties: false
    RecurrenceSettings:
      description: Information about when an on-call rotation is in effect and how long the rotation period lasts.
      type: object
      properties:
        MonthlySettings:
          description: Information about on-call rotations that recur monthly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MonthlySetting'
        WeeklySettings:
          description: Information about on-call rotations that recur weekly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/WeeklySetting'
        DailySettings:
          description: Information about on-call rotations that recur daily.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HandOffTime'
        NumberOfOnCalls:
          type: integer
          description: Number of Oncalls per shift.
          minimum: 1
        RecurrenceMultiplier:
          type: integer
          description: The number of days, weeks, or months a single rotation lasts.
          minimum: 1
          maximum: 100
        ShiftCoverages:
          type: array
          x-insertionOrder: false
          description: Information about the days of the week included in on-call rotation coverage.
          items:
            $ref: '#/components/schemas/ShiftCoverage'
      additionalProperties: false
      oneOf:
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - WeeklySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - MonthlySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - DailySettings
    Rotation:
      type: object
      properties:
        Name:
          description: Name of the Rotation
          type: string
          pattern: ^[a-zA-Z0-9_]*$
        ContactIds:
          description: Members of the rotation
          type: array
          x-insertionOrder: false
          items:
            type: string
        StartTime:
          description: Start time of the first shift of Oncall Schedule
          type: string
          pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})$
        TimeZoneId:
          description: TimeZone Identifier for the Oncall Schedule
          type: string
        Recurrence:
          $ref: '#/components/schemas/RecurrenceSettings'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the rotation.
      required:
        - Name
        - ContactIds
        - StartTime
        - TimeZoneId
        - Recurrence
      x-stackql-resource-name: Rotation
    Arn:
      description: The ARN of the ReplicationSet.
      type: string
      pattern: ^arn:aws(-(cn|us-gov|iso(-b)?))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    RegionName:
      description: The AWS region name.
      type: string
      maxLength: 20
    ReplicationRegion:
      description: The ReplicationSet regional configuration.
      type: object
      additionalProperties: false
      properties:
        RegionName:
          $ref: '#/components/schemas/RegionName'
        RegionConfiguration:
          $ref: '#/components/schemas/RegionConfiguration'
    RegionConfiguration:
      description: The ReplicationSet regional configuration.
      type: object
      additionalProperties: false
      properties:
        SseKmsKeyId:
          $ref: '#/components/schemas/Arn'
      required:
        - SseKmsKeyId
    DeletionProtected:
      description: Configures the ReplicationSet deletion protection.
      type: boolean
    RegionList:
      type: array
      minItems: 1
      maxItems: 3
      items:
        $ref: '#/components/schemas/ReplicationRegion'
      x-insertionOrder: false
      uniqueItems: true
    ReplicationSet:
      type: object
      properties:
        Arn:
          description: The ARN of the ReplicationSet.
          $ref: '#/components/schemas/Arn'
          additionalProperties: false
        Regions:
          description: The ReplicationSet configuration.
          $ref: '#/components/schemas/RegionList'
        DeletionProtected:
          $ref: '#/components/schemas/DeletionProtected'
          default: false
        Tags:
          description: The tags to apply to the replication set.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Regions
      x-stackql-resource-name: ReplicationSet
    SSMContact:
      description: The ARN of the contact.
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:ssm-contacts:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    SnsArn:
      description: The ARN of the Chatbot SNS topic.
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:sns:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    NotificationTargetItem:
      description: A notification target.
      type: object
      additionalProperties: false
      properties:
        SnsTopicArn:
          $ref: '#/components/schemas/SnsArn'
    Action:
      description: The automation configuration to launch.
      additionalProperties: false
      type: object
      properties:
        SsmAutomation:
          $ref: '#/components/schemas/SsmAutomation'
    SsmAutomation:
      description: The configuration to use when starting the SSM automation document.
      type: object
      additionalProperties: false
      required:
        - RoleArn
        - DocumentName
      properties:
        RoleArn:
          description: The role ARN to use when starting the SSM automation document.
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
          maxLength: 1000
        DocumentName:
          description: The document name to use when starting the SSM automation document.
          type: string
          maxLength: 128
        DocumentVersion:
          description: The version of the document to use when starting the SSM automation document.
          type: string
          maxLength: 128
        TargetAccount:
          description: The account type to use when starting the SSM automation document.
          type: string
          enum:
            - IMPACTED_ACCOUNT
            - RESPONSE_PLAN_OWNER_ACCOUNT
        Parameters:
          description: The parameters to set when starting the SSM automation document.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SsmParameter'
          minItems: 1
          maxItems: 200
          default: []
        DynamicParameters:
          description: The parameters with dynamic values to set when starting the SSM automation document.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DynamicSsmParameter'
          maxItems: 200
          default: []
    SsmParameter:
      description: A parameter to set when starting the SSM automation document.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 50
        Values:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 10
          items:
            $ref: '#/components/schemas/SsmParameterValue'
      required:
        - Values
        - Key
      additionalProperties: false
    SsmParameterValue:
      description: A value of the parameter to set when starting the SSM automation document.
      type: string
      maxLength: 10000
    DynamicSsmParameter:
      description: A parameter with a dynamic value to set when starting the SSM automation document.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 50
        Value:
          $ref: '#/components/schemas/DynamicSsmParameterValue'
      required:
        - Value
        - Key
      additionalProperties: false
    DynamicSsmParameterValue:
      description: Value of the dynamic parameter to set when starting the SSM automation document.
      additionalProperties: false
      type: object
      properties:
        Variable:
          $ref: '#/components/schemas/VariableType'
    VariableType:
      description: The variable types used as dynamic parameter value when starting the SSM automation document.
      type: string
      enum:
        - INCIDENT_RECORD_ARN
        - INVOLVED_RESOURCES
    Integration:
      type: object
      additionalProperties: false
      properties:
        PagerDutyConfiguration:
          $ref: '#/components/schemas/PagerDutyConfiguration'
      oneOf:
        - required:
            - PagerDutyConfiguration
    PagerDutyConfiguration:
      description: The pagerDuty configuration to use when starting the incident.
      type: object
      additionalProperties: false
      required:
        - Name
        - SecretId
        - PagerDutyIncidentConfiguration
      properties:
        Name:
          description: The name of the pagerDuty configuration.
          type: string
          minLength: 1
          maxLength: 200
        SecretId:
          description: The AWS secrets manager secretId storing the pagerDuty token.
          type: string
          minLength: 1
          maxLength: 512
        PagerDutyIncidentConfiguration:
          $ref: '#/components/schemas/PagerDutyIncidentConfiguration'
    PagerDutyIncidentConfiguration:
      description: The pagerDuty incident configuration.
      additionalProperties: false
      type: object
      properties:
        ServiceId:
          description: The pagerDuty serviceId.
          type: string
          minLength: 1
          maxLength: 200
      required:
        - ServiceId
    IncidentTemplate:
      description: The incident template configuration.
      additionalProperties: false
      type: object
      required:
        - Title
        - Impact
      properties:
        DedupeString:
          description: The deduplication string.
          type: string
          maxLength: 1000
          minLength: 1
        Impact:
          description: The impact value.
          type: integer
          minimum: 1
          maximum: 5
        NotificationTargets:
          description: The list of notification targets.
          type: array
          default: []
          maxItems: 10
          items:
            $ref: '#/components/schemas/NotificationTargetItem'
          x-insertionOrder: false
        Summary:
          description: The summary string.
          type: string
          maxLength: 4000
          minLength: 1
        Title:
          description: The title string.
          type: string
          maxLength: 200
        IncidentTags:
          description: Tags that get applied to incidents created by the StartIncident API action.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          default: []
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
    ChatbotSns:
      type: array
      uniqueItems: true
      x-insertionOrder: true
      default: []
      items:
        $ref: '#/components/schemas/SnsArn'
    ChatChannel:
      description: The chat channel configuration.
      additionalProperties: false
      type: object
      properties:
        ChatbotSns:
          $ref: '#/components/schemas/ChatbotSns'
    ResponsePlan:
      type: object
      properties:
        Arn:
          description: The ARN of the response plan.
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
          maxLength: 1000
        Name:
          description: The name of the response plan.
          type: string
          pattern: ^[a-zA-Z0-9_-]*$
          maxLength: 200
          minLength: 1
        DisplayName:
          description: The display name of the response plan.
          type: string
          maxLength: 200
          minLength: 1
        ChatChannel:
          $ref: '#/components/schemas/ChatChannel'
        Engagements:
          description: The list of engagements to use.
          type: array
          default: []
          maxItems: 5
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SSMContact'
        Actions:
          description: The list of actions.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 1
          items:
            $ref: '#/components/schemas/Action'
        Integrations:
          description: The list of integrations.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 1
          items:
            $ref: '#/components/schemas/Integration'
        Tags:
          description: The tags to apply to the response plan.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        IncidentTemplate:
          $ref: '#/components/schemas/IncidentTemplate'
      required:
        - Name
        - IncidentTemplate
      x-stackql-resource-name: ResponsePlan
x-stackql-views:
  - Association:
      name: Association
      id: aws.ssm.Association
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.AssociationName') as association_name,
              JSON_EXTRACT(Properties, '$.DocumentVersion') as document_version,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.ScheduleExpression') as schedule_expression,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.OutputLocation.S3Location') as output_location_s3_location,
              JSON_EXTRACT(Properties, '$.AutomationTargetParameterName') as automation_target_parameter_name,
              JSON_EXTRACT(Properties, '$.MaxErrors') as max_errors,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.ComplianceSeverity') as compliance_severity,
              JSON_EXTRACT(Properties, '$.SyncCompliance') as sync_compliance,
              JSON_EXTRACT(Properties, '$.WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
              JSON_EXTRACT(Properties, '$.ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
              JSON_EXTRACT(Properties, '$.CalendarNames') as calendar_names,
              JSON_EXTRACT(Properties, '$.ScheduleOffset') as schedule_offset
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Association' ;
  - Document:
      name: Document
      id: aws.ssm.Document
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Attachments') as attachments,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(Properties, '$.DocumentType') as document_type,
              JSON_EXTRACT(Properties, '$.DocumentFormat') as document_format,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Requires') as requires,
              JSON_EXTRACT(Properties, '$.UpdateMethod') as update_method
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Document' ;
  - MaintenanceWindow:
      name: MaintenanceWindow
      id: aws.ssm.MaintenanceWindow
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.StartDate') as start_date,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AllowUnassociatedTargets') as allow_unassociated_targets,
              JSON_EXTRACT(Properties, '$.Cutoff') as cutoff,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.Duration') as duration,
              JSON_EXTRACT(Properties, '$.ScheduleOffset') as schedule_offset,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.EndDate') as end_date,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ScheduleTimezone') as schedule_timezone
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::MaintenanceWindow' ;
  - MaintenanceWindowTarget:
      name: MaintenanceWindowTarget
      id: aws.ssm.MaintenanceWindowTarget
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.OwnerInformation') as owner_information,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.WindowId') as window_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::MaintenanceWindowTarget' ;
  - MaintenanceWindowTask:
      name: MaintenanceWindowTask
      id: aws.ssm.MaintenanceWindowTask
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.MaxErrors') as max_errors,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ServiceRoleArn') as service_role_arn,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.TaskArn') as task_arn,
              JSON_EXTRACT(Properties, '$.TaskInvocationParameters.MaintenanceWindowStepFunctionsParameters') as task_invocation_parameters_maintenance_window_step_functions_parameters,
              JSON_EXTRACT(Properties, '$.TaskInvocationParameters.MaintenanceWindowRunCommandParameters') as task_invocation_parameters_maintenance_window_run_command_parameters,
              JSON_EXTRACT(Properties, '$.TaskInvocationParameters.MaintenanceWindowLambdaParameters') as task_invocation_parameters_maintenance_window_lambda_parameters,
              JSON_EXTRACT(Properties, '$.TaskInvocationParameters.MaintenanceWindowAutomationParameters') as task_invocation_parameters_maintenance_window_automation_parameters,
              JSON_EXTRACT(Properties, '$.WindowId') as window_id,
              JSON_EXTRACT(Properties, '$.TaskParameters') as task_parameters,
              JSON_EXTRACT(Properties, '$.TaskType') as task_type,
              JSON_EXTRACT(Properties, '$.CutoffBehavior') as cutoff_behavior,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LoggingInfo.Region') as logging_info_region,
              JSON_EXTRACT(Properties, '$.LoggingInfo.S3Prefix') as logging_info_s3_prefix,
              JSON_EXTRACT(Properties, '$.LoggingInfo.S3Bucket') as logging_info_s3_bucket
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::MaintenanceWindowTask' ;
  - Parameter:
      name: Parameter
      id: aws.ssm.Parameter
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.AllowedPattern') as allowed_pattern,
              JSON_EXTRACT(Properties, '$.Tier') as tier,
              JSON_EXTRACT(Properties, '$.Value') as value,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Parameter' ;
  - PatchBaseline:
      name: PatchBaseline
      id: aws.ssm.PatchBaseline
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.OperatingSystem') as operating_system,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ApprovalRules.PatchRules') as approval_rules_patch_rules,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RejectedPatches') as rejected_patches,
              JSON_EXTRACT(Properties, '$.ApprovedPatches') as approved_patches,
              JSON_EXTRACT(Properties, '$.RejectedPatchesAction') as rejected_patches_action,
              JSON_EXTRACT(Properties, '$.PatchGroups') as patch_groups,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.GlobalFilters.PatchFilters') as global_filters_patch_filters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::PatchBaseline' ;
  - ResourceDataSync:
      name: ResourceDataSync
      id: aws.ssm.ResourceDataSync
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.S3Destination.KMSKeyArn') as s3_destination_km_skey_arn,
              JSON_EXTRACT(Properties, '$.S3Destination.BucketPrefix') as s3_destination_bucket_prefix,
              JSON_EXTRACT(Properties, '$.S3Destination.BucketName') as s3_destination_bucket_name,
              JSON_EXTRACT(Properties, '$.S3Destination.BucketRegion') as s3_destination_bucket_region,
              JSON_EXTRACT(Properties, '$.S3Destination.SyncFormat') as s3_destination_sync_format,
              JSON_EXTRACT(Properties, '$.KMSKeyArn') as k_ms_key_arn,
              JSON_EXTRACT(Properties, '$.SyncSource.IncludeFutureRegions') as sync_source_include_future_regions,
              JSON_EXTRACT(Properties, '$.SyncSource.SourceRegions') as sync_source_source_regions,
              JSON_EXTRACT(Properties, '$.SyncSource.SourceType') as sync_source_source_type,
              JSON_EXTRACT(Properties, '$.SyncSource.AwsOrganizationsSource') as sync_source_aws_organizations_source,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.BucketRegion') as bucket_region,
              JSON_EXTRACT(Properties, '$.SyncFormat') as sync_format,
              JSON_EXTRACT(Properties, '$.SyncName') as sync_name,
              JSON_EXTRACT(Properties, '$.SyncType') as sync_type,
              JSON_EXTRACT(Properties, '$.BucketPrefix') as bucket_prefix
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::ResourceDataSync' ;
  - ResourcePolicy:
      name: ResourcePolicy
      id: aws.ssm.ResourcePolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id,
              JSON_EXTRACT(Properties, '$.PolicyHash') as policy_hash
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::ResourcePolicy' ;
  - Contact:
      name: Contact
      id: aws.ssm.Contact
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Plan') as plan,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Contact' ;
  - ContactChannel:
      name: ContactChannel
      id: aws.ssm.ContactChannel
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.ChannelName') as channel_name,
              JSON_EXTRACT(Properties, '$.ChannelType') as channel_type,
              JSON_EXTRACT(Properties, '$.DeferActivation') as defer_activation,
              JSON_EXTRACT(Properties, '$.ChannelAddress') as channel_address,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::ContactChannel' ;
  - Plan:
      name: Plan
      id: aws.ssm.Plan
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.Stages') as stages,
              JSON_EXTRACT(Properties, '$.RotationIds') as rotation_ids,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Plan' ;
  - Rotation:
      name: Rotation
      id: aws.ssm.Rotation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ContactIds') as contact_ids,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.TimeZoneId') as time_zone_id,
              JSON_EXTRACT(Properties, '$.Recurrence.MonthlySettings') as recurrence_monthly_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.WeeklySettings') as recurrence_weekly_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.DailySettings') as recurrence_daily_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.NumberOfOnCalls') as recurrence_number_of_on_calls,
              JSON_EXTRACT(Properties, '$.Recurrence.RecurrenceMultiplier') as recurrence_recurrence_multiplier,
              JSON_EXTRACT(Properties, '$.Recurrence.ShiftCoverages') as recurrence_shift_coverages,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::Rotation' ;
  - ReplicationSet:
      name: ReplicationSet
      id: aws.ssm.ReplicationSet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::ReplicationSet' ;
  - ResponsePlan:
      name: ResponsePlan
      id: aws.ssm.ResponsePlan
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.ChatChannel.ChatbotSns') as chat_channel_chatbot_sns,
              JSON_EXTRACT(Properties, '$.Engagements') as engagements,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.Integrations') as integrations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.DedupeString') as incident_template_dedupe_string,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.Impact') as incident_template_impact,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.NotificationTargets') as incident_template_notification_targets,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.Summary') as incident_template_summary,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.Title') as incident_template_title,
              JSON_EXTRACT(Properties, '$.IncidentTemplate.IncidentTags') as incident_template_incident_tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::SSM::ResponsePlan' ;
