openapi: 3.0.0
info:
  title: Oam
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceType:
      type: string
      enum:
        - AWS::CloudWatch::Metric
        - AWS::Logs::LogGroup
        - AWS::XRay::Trace
    Link:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 2048
          x-is-top-level-property: true
        Label:
          type: string
          x-is-top-level-property: true
        LabelTemplate:
          type: string
          maxLength: 64
          minLength: 1
          x-is-top-level-property: true
        ResourceTypes:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ResourceType'
          maxItems: 50
          minItems: 1
          uniqueItems: true
          x-is-top-level-property: true
        SinkIdentifier:
          type: string
          maxLength: 2048
          minLength: 1
          x-is-top-level-property: true
        Tags:
          description: Tags to apply to the link
          type: object
          additionalProperties: false
          x-patternProperties:
            ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{1,128}$:
              type: string
              description: >-
                The value for the tag. You can specify a value that is 0 to 256
                Unicode characters in length and cannot be prefixed with aws:.
                You can use any of the following characters: the set of Unicode
                letters, digits, whitespace, _, ., /, =, +, and -.
              pattern: ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{0,256}$
              minLength: 0
              maxLength: 256
          x-is-top-level-property: true
      required:
        - ResourceTypes
        - SinkIdentifier
      x-stackql-resource-name: Link
    Sink:
      type: object
      properties:
        Arn:
          description: >-
            The Amazon resource name (ARN) of the ObservabilityAccessManager
            Sink
          type: string
          maxLength: 2048
          x-is-top-level-property: true
        Name:
          description: The name of the ObservabilityAccessManager Sink.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9_.-]+$
          x-is-top-level-property: true
        Policy:
          description: The policy of this ObservabilityAccessManager Sink.
          type: object
          x-is-top-level-property: true
        Tags:
          description: Tags to apply to the sink
          type: object
          additionalProperties: false
          x-patternProperties:
            ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{1,128}$:
              type: string
              description: >-
                The value for the tag. You can specify a value that is 0 to 256
                Unicode characters in length and cannot be prefixed with aws:.
                You can use any of the following characters: the set of Unicode
                letters, digits, whitespace, _, ., /, =, +, and -.
              pattern: ^(?!aws:.*)[a-zA-Z0-9\s\_\.\/\=\+\-]{0,256}$
              minLength: 0
              maxLength: 256
          x-is-top-level-property: true
      required:
        - Name
      x-stackql-resource-name: Sink
x-stackql-views:
  - Link:
      name: Link
      id: aws.oam.Link
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Label') as label,

              JSON_EXTRACT(Properties, '$.LabelTemplate') as label_template,

              JSON_EXTRACT(Properties, '$.ResourceTypes') as resource_types,

              JSON_EXTRACT(Properties, '$.SinkIdentifier') as sink_identifier,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Oam::Link' ;
  - Sink:
      name: Sink
      id: aws.oam.Sink
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Policy') as policy,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Oam::Sink' ;
