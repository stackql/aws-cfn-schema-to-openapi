openapi: 3.0.0
info:
  title: EC2
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    TagSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourceType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
    CapacityReservation:
      type: object
      properties:
        Tenancy:
          type: string
        EndDateType:
          type: string
        TagSpecifications:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagSpecification'
        AvailabilityZone:
          type: string
        TotalInstanceCount:
          type: integer
        EndDate:
          type: string
        EbsOptimized:
          type: boolean
        OutPostArn:
          type: string
        InstanceCount:
          type: integer
        PlacementGroupArn:
          type: string
        AvailableInstanceCount:
          type: integer
        InstancePlatform:
          type: string
        Id:
          type: string
        InstanceType:
          type: string
        EphemeralStorage:
          type: boolean
        InstanceMatchCriteria:
          type: string
      required:
        - InstanceCount
        - AvailabilityZone
        - InstancePlatform
        - InstanceType
      x-stackql-resource-name: CapacityReservation
    InstanceTypeSpecification:
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          type: string
        InstancePlatform:
          type: string
        Weight:
          type: number
        AvailabilityZone:
          type: string
        AvailabilityZoneId:
          type: string
        EbsOptimized:
          type: boolean
        Priority:
          type: integer
          minimum: 0
          maximum: 999
    CapacityReservationFleet:
      type: object
      properties:
        AllocationStrategy:
          type: string
        TagSpecifications:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagSpecification'
        InstanceTypeSpecifications:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          items:
            $ref: '#/components/schemas/InstanceTypeSpecification'
        TotalTargetCapacity:
          type: integer
          minimum: 1
          maximum: 25000
        EndDate:
          type: string
        InstanceMatchCriteria:
          type: string
          enum:
            - open
        CapacityReservationFleetId:
          type: string
        Tenancy:
          type: string
          enum:
            - default
        RemoveEndDate:
          type: boolean
        NoRemoveEndDate:
          type: boolean
      x-stackql-resource-name: CapacityReservationFleet
    Tags:
      uniqueItems: true
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    CarrierGateway:
      type: object
      properties:
        CarrierGatewayId:
          description: The ID of the carrier gateway.
          type: string
        State:
          description: The state of the carrier gateway.
          type: string
        VpcId:
          description: The ID of the VPC.
          type: string
        OwnerId:
          description: The ID of the owner.
          type: string
        Tags:
          description: The tags for the carrier gateway.
          $ref: '#/components/schemas/Tags'
      required:
        - VpcId
      x-stackql-resource-name: CarrierGateway
    ClientVpnAuthorizationRule:
      type: object
      properties:
        Id:
          type: string
        ClientVpnEndpointId:
          type: string
        Description:
          type: string
        AccessGroupId:
          type: string
        TargetNetworkCidr:
          type: string
        AuthorizeAllGroups:
          type: boolean
      required:
        - ClientVpnEndpointId
        - TargetNetworkCidr
      x-stackql-resource-name: ClientVpnAuthorizationRule
    ConnectionLogOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        CloudwatchLogGroup:
          type: string
        CloudwatchLogStream:
          type: string
      required:
        - Enabled
    ClientConnectOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        LambdaFunctionArn:
          type: string
      required:
        - Enabled
    FederatedAuthenticationRequest:
      type: object
      additionalProperties: false
      properties:
        SAMLProviderArn:
          type: string
        SelfServiceSAMLProviderArn:
          type: string
      required:
        - SAMLProviderArn
    ClientLoginBannerOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        BannerText:
          type: string
      required:
        - Enabled
    DirectoryServiceAuthenticationRequest:
      type: object
      additionalProperties: false
      properties:
        DirectoryId:
          type: string
      required:
        - DirectoryId
    CertificateAuthenticationRequest:
      type: object
      additionalProperties: false
      properties:
        ClientRootCertificateChainArn:
          type: string
      required:
        - ClientRootCertificateChainArn
    ClientAuthenticationRequest:
      type: object
      additionalProperties: false
      properties:
        MutualAuthentication:
          $ref: '#/components/schemas/CertificateAuthenticationRequest'
        Type:
          type: string
        ActiveDirectory:
          $ref: '#/components/schemas/DirectoryServiceAuthenticationRequest'
        FederatedAuthentication:
          $ref: '#/components/schemas/FederatedAuthenticationRequest'
      required:
        - Type
    ClientVpnEndpoint:
      type: object
      properties:
        ClientCidrBlock:
          type: string
        ClientConnectOptions:
          $ref: '#/components/schemas/ClientConnectOptions'
        Description:
          type: string
        TagSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagSpecification'
        AuthenticationOptions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ClientAuthenticationRequest'
        ServerCertificateArn:
          type: string
        SessionTimeoutHours:
          type: integer
        DnsServers:
          type: array
          uniqueItems: false
          items:
            type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        ConnectionLogOptions:
          $ref: '#/components/schemas/ConnectionLogOptions'
        SplitTunnel:
          type: boolean
        ClientLoginBannerOptions:
          $ref: '#/components/schemas/ClientLoginBannerOptions'
        VpcId:
          type: string
        SelfServicePortal:
          type: string
        TransportProtocol:
          type: string
        Id:
          type: string
        VpnPort:
          type: integer
      required:
        - ClientCidrBlock
        - ConnectionLogOptions
        - AuthenticationOptions
        - ServerCertificateArn
      x-stackql-resource-name: ClientVpnEndpoint
    ClientVpnRoute:
      type: object
      properties:
        Id:
          type: string
        ClientVpnEndpointId:
          type: string
        TargetVpcSubnetId:
          type: string
        Description:
          type: string
        DestinationCidrBlock:
          type: string
      required:
        - ClientVpnEndpointId
        - TargetVpcSubnetId
        - DestinationCidrBlock
      x-stackql-resource-name: ClientVpnRoute
    ClientVpnTargetNetworkAssociation:
      type: object
      properties:
        Id:
          type: string
        ClientVpnEndpointId:
          type: string
        SubnetId:
          type: string
      required:
        - ClientVpnEndpointId
        - SubnetId
      x-stackql-resource-name: ClientVpnTargetNetworkAssociation
    CustomerGateway:
      type: object
      properties:
        CustomerGatewayId:
          type: string
          description: CustomerGateway ID generated after customer gateway is created. Each customer gateway has a unique ID.
        BgpAsn:
          type: integer
          default: 65000
          description: For devices that support BGP, the customer gateway's BGP ASN.
        IpAddress:
          type: string
          description: The internet-routable IP address for the customer gateway's outside interface. The address must be static.
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          description: One or more tags for the customer gateway.
        Type:
          type: string
          description: The type of VPN connection that this customer gateway supports.
        DeviceName:
          type: string
          description: A name for the customer gateway device.
      required:
        - BgpAsn
        - IpAddress
        - Type
      x-stackql-resource-name: CustomerGateway
    DHCPOptions:
      type: object
      properties:
        DhcpOptionsId:
          type: string
        DomainName:
          type: string
          description: This value is used to complete unqualified DNS hostnames.
        DomainNameServers:
          type: array
          description: The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS.
          uniqueItems: true
          items:
            type: string
        NetbiosNameServers:
          type: array
          description: The IPv4 addresses of up to four NetBIOS name servers.
          uniqueItems: true
          items:
            type: string
        NetbiosNodeType:
          type: integer
          description: The NetBIOS node type (1, 2, 4, or 8).
        NtpServers:
          type: array
          description: The IPv4 addresses of up to four Network Time Protocol (NTP) servers.
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          description: Any tags assigned to the DHCP options set.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: DHCPOptions
    OnDemandOptionsRequest:
      type: object
      additionalProperties: false
      properties:
        SingleAvailabilityZone:
          type: boolean
        AllocationStrategy:
          type: string
        SingleInstanceType:
          type: boolean
        MinTargetCapacity:
          type: integer
        MaxTotalPrice:
          type: string
        CapacityReservationOptions:
          $ref: '#/components/schemas/CapacityReservationOptionsRequest'
    SpotOptionsRequest:
      type: object
      additionalProperties: false
      properties:
        MaintenanceStrategies:
          $ref: '#/components/schemas/MaintenanceStrategies'
        SingleAvailabilityZone:
          type: boolean
        AllocationStrategy:
          type: string
          enum:
            - lowest-price
            - lowestPrice
            - diversified
            - capacityOptimized
            - capacity-optimized
            - capacityOptimizedPrioritized
            - capacity-optimized-prioritized
            - priceCapacityOptimized
            - price-capacity-optimized
        SingleInstanceType:
          type: boolean
        MinTargetCapacity:
          type: integer
        MaxTotalPrice:
          type: string
        InstanceInterruptionBehavior:
          type: string
          enum:
            - hibernate
            - stop
            - terminate
        InstancePoolsToUseCount:
          type: integer
    TargetCapacitySpecificationRequest:
      type: object
      additionalProperties: false
      properties:
        DefaultTargetCapacityType:
          type: string
          enum:
            - on-demand
            - spot
        TargetCapacityUnitType:
          type: string
          enum:
            - vcpu
            - memory-mib
            - units
        TotalTargetCapacity:
          type: integer
        OnDemandTargetCapacity:
          type: integer
        SpotTargetCapacity:
          type: integer
      required:
        - TotalTargetCapacity
    FleetLaunchTemplateSpecificationRequest:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateName:
          type: string
          minLength: 3
          maxLength: 128
          pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
        LaunchTemplateId:
          type: string
        Version:
          type: string
      required:
        - Version
    Placement:
      type: object
      additionalProperties: false
      properties:
        GroupName:
          type: string
        Tenancy:
          type: string
        SpreadDomain:
          type: string
        PartitionNumber:
          type: integer
        AvailabilityZone:
          type: string
        Affinity:
          type: string
        HostId:
          type: string
        HostResourceGroupArn:
          type: string
        GroupId:
          type: string
    FleetLaunchTemplateConfigRequest:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateSpecification:
          $ref: '#/components/schemas/FleetLaunchTemplateSpecificationRequest'
        Overrides:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/FleetLaunchTemplateOverridesRequest'
    CapacityReservationOptionsRequest:
      type: object
      additionalProperties: false
      properties:
        UsageStrategy:
          type: string
          enum:
            - use-capacity-reservations-first
    FleetLaunchTemplateOverridesRequest:
      type: object
      additionalProperties: false
      properties:
        WeightedCapacity:
          type: number
        Placement:
          $ref: '#/components/schemas/Placement'
        Priority:
          type: number
        AvailabilityZone:
          type: string
        SubnetId:
          type: string
        InstanceType:
          type: string
        InstanceRequirements:
          $ref: '#/components/schemas/InstanceRequirementsRequest'
        MaxPrice:
          type: string
    InstanceRequirementsRequest:
      type: object
      additionalProperties: false
      properties:
        VCpuCount:
          $ref: '#/components/schemas/VCpuCountRangeRequest'
        MemoryMiB:
          $ref: '#/components/schemas/MemoryMiBRequest'
        CpuManufacturers:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - intel
              - amd
              - amazon-web-services
        MemoryGiBPerVCpu:
          $ref: '#/components/schemas/MemoryGiBPerVCpuRequest'
        AllowedInstanceTypes:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 30
            pattern: '[a-zA-Z0-9\.\*]+'
        ExcludedInstanceTypes:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 30
            pattern: '[a-zA-Z0-9\.\*]+'
        InstanceGenerations:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - current
              - previous
        SpotMaxPricePercentageOverLowestPrice:
          type: integer
        OnDemandMaxPricePercentageOverLowestPrice:
          type: integer
        BareMetal:
          type: string
          enum:
            - included
            - required
            - excluded
        BurstablePerformance:
          type: string
          enum:
            - included
            - required
            - excluded
        RequireHibernateSupport:
          type: boolean
        NetworkBandwidthGbps:
          $ref: '#/components/schemas/NetworkBandwidthGbpsRequest'
        NetworkInterfaceCount:
          $ref: '#/components/schemas/NetworkInterfaceCountRequest'
        LocalStorage:
          type: string
          enum:
            - included
            - required
            - excluded
        LocalStorageTypes:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - hdd
              - ssd
        TotalLocalStorageGB:
          $ref: '#/components/schemas/TotalLocalStorageGBRequest'
        BaselineEbsBandwidthMbps:
          $ref: '#/components/schemas/BaselineEbsBandwidthMbpsRequest'
        AcceleratorTypes:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - gpu
              - fpga
              - inference
        AcceleratorCount:
          $ref: '#/components/schemas/AcceleratorCountRequest'
        AcceleratorManufacturers:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - nvidia
              - amd
              - amazon-web-services
              - xilinx
        AcceleratorNames:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - a100
              - v100
              - k80
              - t4
              - m60
              - radeon-pro-v520
              - vu9p
              - inferentia
              - k520
        AcceleratorTotalMemoryMiB:
          $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRequest'
    VCpuCountRangeRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    MemoryMiBRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    MemoryGiBPerVCpuRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: number
        Max:
          type: number
    NetworkBandwidthGbpsRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: number
        Max:
          type: number
    NetworkInterfaceCountRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    TotalLocalStorageGBRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: number
        Max:
          type: number
    BaselineEbsBandwidthMbpsRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    AcceleratorCountRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    AcceleratorTotalMemoryMiBRequest:
      type: object
      additionalProperties: false
      properties:
        Min:
          type: integer
        Max:
          type: integer
    MaintenanceStrategies:
      type: object
      additionalProperties: false
      properties:
        CapacityRebalance:
          $ref: '#/components/schemas/CapacityRebalance'
    CapacityRebalance:
      type: object
      additionalProperties: false
      properties:
        ReplacementStrategy:
          type: string
          enum:
            - launch
            - launch-before-terminate
        TerminationDelay:
          type: integer
    EC2Fleet:
      type: object
      properties:
        TargetCapacitySpecification:
          $ref: '#/components/schemas/TargetCapacitySpecificationRequest'
        OnDemandOptions:
          $ref: '#/components/schemas/OnDemandOptionsRequest'
        Type:
          type: string
          enum:
            - maintain
            - request
            - instant
        ExcessCapacityTerminationPolicy:
          type: string
          enum:
            - termination
            - no-termination
        TagSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagSpecification'
        SpotOptions:
          $ref: '#/components/schemas/SpotOptionsRequest'
        ValidFrom:
          type: string
        ReplaceUnhealthyInstances:
          type: boolean
        LaunchTemplateConfigs:
          type: array
          uniqueItems: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/FleetLaunchTemplateConfigRequest'
        FleetId:
          type: string
        TerminateInstancesWithExpiration:
          type: boolean
        ValidUntil:
          type: string
        Context:
          type: string
      required:
        - TargetCapacitySpecification
        - LaunchTemplateConfigs
      x-stackql-resource-name: EC2Fleet
    EgressOnlyInternetGateway:
      type: object
      properties:
        Id:
          description: Service Generated ID of the EgressOnlyInternetGateway
          type: string
        VpcId:
          description: The ID of the VPC for which to create the egress-only internet gateway.
          type: string
      required:
        - VpcId
      x-stackql-resource-name: EgressOnlyInternetGateway
    EIP:
      type: object
      properties:
        PublicIp:
          description: The PublicIP of the EIP generated by resource.
          type: string
        AllocationId:
          description: The Allocation ID of the EIP generated by resource.
          type: string
        Domain:
          description: Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
          type: string
        NetworkBorderGroup:
          description: A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
          type: string
        TransferAddress:
          description: The PublicIP of the EIP generated by resource through transfer from another account
          type: string
        InstanceId:
          description: The ID of the instance.
          type: string
        PublicIpv4Pool:
          description: The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
          type: string
        Tags:
          description: Any tags assigned to the EIP.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: EIP
    EIPAssociation:
      type: object
      properties:
        Id:
          type: string
        AllocationId:
          type: string
        EIP:
          type: string
        InstanceId:
          type: string
        NetworkInterfaceId:
          type: string
        PrivateIpAddress:
          type: string
      x-stackql-resource-name: EIPAssociation
    EnclaveCertificateIamRoleAssociation:
      type: object
      properties:
        CertificateArn:
          description: The Amazon Resource Name (ARN) of the ACM certificate with which to associate the IAM role.
          type: string
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:acm:[A-Za-z0-9-]{1,64}:([0-9]{12})?:certificate/.+$
          minLength: 1
          maxLength: 1283
        RoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.
          type: string
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:iam:.*:([0-9]{12})?:role/.+$
          minLength: 1
          maxLength: 1283
        CertificateS3BucketName:
          description: The name of the Amazon S3 bucket to which the certificate was uploaded.
          type: string
        CertificateS3ObjectKey:
          description: The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored.
          type: string
        EncryptionKmsKeyId:
          description: The ID of the AWS KMS CMK used to encrypt the private key of the certificate.
          type: string
      required:
        - CertificateArn
        - RoleArn
      x-stackql-resource-name: EnclaveCertificateIamRoleAssociation
    FlowLog:
      type: object
      properties:
        Id:
          description: The Flow Log ID
          type: string
        DeliverLogsPermissionArn:
          description: The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
          type: string
        LogDestination:
          description: Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group, an Amazon S3 bucket, or a Kinesis Firehose stream. The value specified for this parameter depends on the value specified for LogDestinationType.
          type: string
        LogDestinationType:
          description: Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3.
          type: string
          enum:
            - cloud-watch-logs
            - s3
            - kinesis-data-firehose
        LogFormat:
          description: The fields to include in the flow log record, in the order in which they should appear.
          type: string
        LogGroupName:
          description: The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs. If you specify LogDestinationType as s3 or kinesis-data-firehose, do not specify DeliverLogsPermissionArn or LogGroupName.
          type: string
        MaxAggregationInterval:
          description: The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).
          type: integer
        ResourceId:
          description: The ID of the subnet, network interface, or VPC for which you want to create a flow log.
          type: string
        ResourceType:
          description: The type of resource for which to create the flow log. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property.
          type: string
          enum:
            - NetworkInterface
            - Subnet
            - VPC
            - TransitGateway
            - TransitGatewayAttachment
        Tags:
          description: The tags to apply to the flow logs.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        TrafficType:
          description: The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
          type: string
          enum:
            - ACCEPT
            - ALL
            - REJECT
        DestinationOptions:
          type: object
          additionalProperties: false
          properties:
            FileFormat:
              type: string
              enum:
                - plain-text
                - parquet
            HiveCompatiblePartitions:
              type: boolean
            PerHourPartition:
              type: boolean
          required:
            - FileFormat
            - HiveCompatiblePartitions
            - PerHourPartition
      required:
        - ResourceType
        - ResourceId
      x-stackql-resource-name: FlowLog
    GatewayRouteTableAssociation:
      type: object
      properties:
        RouteTableId:
          description: The ID of the route table.
          type: string
        GatewayId:
          description: The ID of the gateway.
          type: string
        AssociationId:
          description: The route table association ID.
          type: string
      required:
        - RouteTableId
        - GatewayId
      x-stackql-resource-name: GatewayRouteTableAssociation
    Host:
      type: object
      properties:
        HostId:
          description: Id of the host created.
          type: string
        AutoPlacement:
          description: Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID.
          type: string
        AvailabilityZone:
          description: The Availability Zone in which to allocate the Dedicated Host.
          type: string
        HostRecovery:
          description: Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default.
          type: string
        InstanceType:
          description: Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.
          type: string
        InstanceFamily:
          description: Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.
          type: string
        OutpostArn:
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host.
          type: string
        HostMaintenance:
          description: Automatically allocates a new dedicated host and moves your instances on to it if a degradation is detected on your current host.
          type: string
      required:
        - AvailabilityZone
      x-stackql-resource-name: Host
    LaunchTemplateSpecification:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateName:
          type: string
        LaunchTemplateId:
          type: string
        Version:
          type: string
      required:
        - Version
    HibernationOptions:
      type: object
      additionalProperties: false
      properties:
        Configured:
          type: boolean
    LicenseSpecification:
      type: object
      additionalProperties: false
      properties:
        LicenseConfigurationArn:
          type: string
    CpuOptions:
      type: object
      additionalProperties: false
      properties:
        ThreadsPerCore:
          type: integer
        CoreCount:
          type: integer
    NoDevice:
      type: object
      additionalProperties: false
    InstanceIpv6Address:
      type: object
      additionalProperties: false
      properties:
        Ipv6Address:
          type: string
      required:
        - Ipv6Address
    NetworkInterface:
      type: object
      properties:
        Description:
          description: A description for the network interface.
          type: string
        PrivateIpAddress:
          description: 'Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property. '
          type: string
        PrivateIpAddresses:
          description: Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PrivateIpAddressSpecification'
        SecondaryPrivateIpAddressCount:
          description: The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses
          type: integer
        PrimaryPrivateIpAddress:
          description: Returns the primary private IP address of the network interface.
          type: string
        GroupSet:
          description: A list of security group IDs associated with this network interface.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Ipv6Addresses:
          description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/InstanceIpv6Address'
        SubnetId:
          description: The ID of the subnet to associate with the network interface.
          type: string
        SourceDestCheck:
          description: Indicates whether traffic to or from the instance is validated.
          type: boolean
        InterfaceType:
          description: Indicates the type of network interface.
          type: string
        SecondaryPrivateIpAddresses:
          description: Returns the secondary private IP addresses of the network interface.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Ipv6AddressCount:
          description: The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property.
          type: integer
        Id:
          description: Network interface id.
          type: string
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this network interface.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - SubnetId
      x-stackql-resource-name: NetworkInterface
    PrivateDnsNameOptions:
      type: object
      additionalProperties: false
      properties:
        HostnameType:
          type: string
        EnableResourceNameDnsAAAARecord:
          type: boolean
        EnableResourceNameDnsARecord:
          type: boolean
    ElasticGpuSpecification:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
    ElasticInferenceAccelerator:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Count:
          type: integer
      required:
        - Type
    SsmAssociation:
      type: object
      additionalProperties: false
      properties:
        AssociationParameters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/AssociationParameter'
        DocumentName:
          type: string
      required:
        - DocumentName
    AssociationParameter:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: array
          uniqueItems: false
          items:
            type: string
        Key:
          type: string
      required:
        - Value
        - Key
    PrivateIpAddressSpecification:
      type: object
      additionalProperties: false
      properties:
        Primary:
          type: boolean
        PrivateIpAddress:
          type: string
      required:
        - PrivateIpAddress
    Volume:
      type: object
      properties:
        MultiAttachEnabled:
          type: boolean
          description: Indicates whether Amazon EBS Multi-Attach is enabled.
        KmsKeyId:
          type: string
          description: >-
            The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If KmsKeyId is specified, the encrypted state must be true. If you omit this property and your account is enabled for encryption by default, or Encrypted is set to true, then the volume is encrypted using the default CMK specified for your account. If your account does not have a default CMK, then the volume is encrypted using the AWS managed CMK.  Alternatively, if
            you want to specify a different CMK, you can specify one of the following:  Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab. Key alias. Specify the alias for the CMK, prefixed with alias/. For example, for a CMK with the alias my_cmk, use alias/my_cmk. Or to specify the AWS managed CMK, use alias/aws/ebs. Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab. Alias ARN. For example,
            arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.
        Encrypted:
          type: boolean
          description: Specifies whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by default in the Amazon Elastic Compute Cloud User Guide. Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Supported instance types.
        Size:
          type: integer
          description: 'The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.  Constraints: 1-16,384 for gp2, 4-16,384 for io1 and io2, 500-16,384 for st1, 500-16,384 for sc1, and 1-1,024 for standard. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size. Default: If you''re creating the volume from a snapshot and don''t specify a volume size, the default is the snapshot size. '
        AutoEnableIO:
          type: boolean
          description: The Availability Zone in which to create the volume.
        OutpostArn:
          type: string
          description: The Amazon Resource Name (ARN) of the Outpost.
        AvailabilityZone:
          type: string
          description: The Availability Zone in which to create the volume.
        Throughput:
          type: integer
          description: The throughput that the volume supports, in MiB/s.
        Iops:
          type: integer
          description: >-
            The number of I/O operations per second (IOPS) to provision for an io1 or io2 volume, with a maximum ratio of 50 IOPS/GiB for io1, and 500 IOPS/GiB for io2. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on Nitro-based instances. Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS volume types in the Amazon Elastic Compute Cloud User Guide. This parameter is valid only for
            Provisioned IOPS SSD (io1 and io2) volumes. 
        SnapshotId:
          type: string
          description: 'The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size. '
        VolumeType:
          type: string
          description: 'The volume type. This parameter can be one of the following values: General Purpose SSD: gp2 | gp3, Provisioned IOPS SSD: io1 | io2, Throughput Optimized HDD: st1, Cold HDD: sc1, Magnetic: standard'
        VolumeId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          description: The tags to apply to the volume during creation.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AvailabilityZone
      x-stackql-resource-name: Volume
    EnclaveOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    Ebs:
      type: object
      additionalProperties: false
      properties:
        SnapshotId:
          type: string
        VolumeType:
          type: string
        KmsKeyId:
          type: string
        Encrypted:
          type: boolean
        Throughput:
          type: integer
        Iops:
          type: integer
        VolumeSize:
          type: integer
        DeleteOnTermination:
          type: boolean
    BlockDeviceMapping:
      type: object
      additionalProperties: false
      properties:
        DeviceName:
          type: string
        Ebs:
          $ref: '#/components/schemas/EbsBlockDevice'
        NoDevice:
          type: string
        VirtualName:
          type: string
      required:
        - DeviceName
    CreditSpecification:
      type: object
      additionalProperties: false
      properties:
        CpuCredits:
          type: string
    Instance:
      type: object
      properties:
        Tenancy:
          type: string
        SecurityGroups:
          type: array
          uniqueItems: false
          items:
            type: string
        PrivateDnsName:
          type: string
        PrivateIpAddress:
          type: string
        UserData:
          type: string
        BlockDeviceMappings:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        IamInstanceProfile:
          type: string
        Ipv6Addresses:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/InstanceIpv6Address'
        KernelId:
          type: string
        SubnetId:
          type: string
        EbsOptimized:
          type: boolean
        PropagateTagsToVolumeOnCreation:
          type: boolean
        ElasticGpuSpecifications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ElasticGpuSpecification'
        ElasticInferenceAccelerators:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ElasticInferenceAccelerator'
        Volumes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Volume'
        PrivateIp:
          type: string
        Ipv6AddressCount:
          type: integer
        LaunchTemplate:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        EnclaveOptions:
          $ref: '#/components/schemas/EnclaveOptions'
        NetworkInterfaces:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NetworkInterface'
        ImageId:
          type: string
        InstanceType:
          type: string
        Monitoring:
          type: boolean
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        AdditionalInfo:
          type: string
        HibernationOptions:
          $ref: '#/components/schemas/HibernationOptions'
        LicenseSpecifications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LicenseSpecification'
        PublicIp:
          type: string
        InstanceInitiatedShutdownBehavior:
          type: string
        CpuOptions:
          $ref: '#/components/schemas/CpuOptions'
        AvailabilityZone:
          type: string
        PrivateDnsNameOptions:
          $ref: '#/components/schemas/PrivateDnsNameOptions'
        HostId:
          type: string
        HostResourceGroupArn:
          type: string
        PublicDnsName:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        DisableApiTermination:
          type: boolean
        KeyName:
          type: string
        RamdiskId:
          type: string
        SourceDestCheck:
          type: boolean
        PlacementGroupName:
          type: string
        SsmAssociations:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SsmAssociation'
        Affinity:
          type: string
        Id:
          type: string
        CreditSpecification:
          $ref: '#/components/schemas/CreditSpecification'
      x-stackql-resource-name: Instance
    InternetGateway:
      type: object
      properties:
        InternetGatewayId:
          description: ID of internet gateway.
          type: string
        Tags:
          description: Any tags to assign to the internet gateway.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: InternetGateway
    IpamOperatingRegion:
      description: The regions IPAM Resource Discovery is enabled for. Allows for monitoring.
      type: object
      properties:
        RegionName:
          type: string
          description: The name of the region.
      required:
        - RegionName
      additionalProperties: false
    IPAM:
      type: object
      properties:
        IpamId:
          description: Id of the IPAM.
          type: string
        Arn:
          description: The Amazon Resource Name (ARN) of the IPAM.
          type: string
        DefaultResourceDiscoveryId:
          description: The Id of the default resource discovery, created with this IPAM.
          type: string
        DefaultResourceDiscoveryAssociationId:
          description: The Id of the default association to the default resource discovery, created with this IPAM.
          type: string
        ResourceDiscoveryAssociationCount:
          description: The count of resource discoveries associated with this IPAM.
          type: integer
        Description:
          type: string
        PublicDefaultScopeId:
          description: The Id of the default scope for publicly routable IP space, created with this IPAM.
          type: string
          maxLength: 255
        PrivateDefaultScopeId:
          description: The Id of the default scope for publicly routable IP space, created with this IPAM.
          type: string
        ScopeCount:
          description: The number of scopes that currently exist in this IPAM.
          type: integer
        OperatingRegions:
          description: The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/IpamOperatingRegion'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: IPAM
    Cidr:
      description: Represents a single IPv4 or IPv6 CIDR
      type: string
    IPAMAllocation:
      type: object
      properties:
        IpamPoolAllocationId:
          description: Id of the allocation.
          type: string
        IpamPoolId:
          description: Id of the IPAM Pool.
          type: string
        Cidr:
          $ref: '#/components/schemas/Cidr'
        NetmaskLength:
          description: The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
          type: integer
        Description:
          type: string
      required:
        - IpamPoolId
      x-stackql-resource-name: IPAMAllocation
    ProvisionedCidr:
      description: An address space to be inserted into this pool. All allocations must be made from this address space.
      type: object
      properties:
        Cidr:
          $ref: '#/components/schemas/Cidr'
      required:
        - Cidr
      additionalProperties: false
    IPAMPool:
      type: object
      properties:
        IpamPoolId:
          description: Id of the IPAM Pool.
          type: string
        AddressFamily:
          description: The address family of the address space in this pool. Either IPv4 or IPv6.
          type: string
        AllocationMinNetmaskLength:
          description: The minimum allowed netmask length for allocations made from this pool.
          type: integer
        AllocationDefaultNetmaskLength:
          description: The default netmask length for allocations made from this pool. This value is used when the netmask length of an allocation isn't specified.
          type: integer
        AllocationMaxNetmaskLength:
          description: The maximum allowed netmask length for allocations made from this pool.
          type: integer
        AllocationResourceTags:
          description: When specified, an allocation will not be allowed unless a resource has a matching set of tags.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The Amazon Resource Name (ARN) of the IPAM Pool.
          type: string
        AutoImport:
          description: Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an allocation will be made automatically.
          type: boolean
        AwsService:
          description: Limits which service in Amazon Web Services that the pool can be used in.
          type: string
          enum:
            - ec2
        Description:
          type: string
        IpamScopeId:
          description: The Id of the scope this pool is a part of.
          type: string
        IpamScopeArn:
          description: The Amazon Resource Name (ARN) of the scope this pool is a part of.
          type: string
        IpamScopeType:
          description: Determines whether this scope contains publicly routable space or space for a private network
          type: string
          enum:
            - public
            - private
        IpamArn:
          description: The Amazon Resource Name (ARN) of the IPAM this pool is a part of.
          type: string
        Locale:
          description: The region of this pool. If not set, this will default to "None" which will disable non-custom allocations. If the locale has been specified for the source pool, this value must match.
          type: string
        PoolDepth:
          description: The depth of this pool in the source pool hierarchy.
          type: integer
        ProvisionedCidrs:
          description: A list of cidrs representing the address space available for allocation in this pool.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ProvisionedCidr'
        PublicIpSource:
          description: The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is `byoip`.
          type: string
          enum:
            - byoip
            - amazon
        PubliclyAdvertisable:
          description: Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
          type: boolean
        SourceIpamPoolId:
          description: The Id of this pool's source. If set, all space provisioned in this pool must be free space provisioned in the parent pool.
          type: string
        State:
          description: 'The state of this pool. This can be one of the following values: "create-in-progress", "create-complete", "modify-in-progress", "modify-complete", "delete-in-progress", or "delete-complete"'
          type: string
          enum:
            - create-in-progress
            - create-complete
            - modify-in-progress
            - modify-complete
            - delete-in-progress
            - delete-complete
        StateMessage:
          description: An explanation of how the pool arrived at it current state.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - IpamScopeId
        - AddressFamily
      x-stackql-resource-name: IPAMPool
    IPAMPoolCidr:
      type: object
      properties:
        IpamPoolCidrId:
          description: Id of the IPAM Pool Cidr.
          type: string
        IpamPoolId:
          description: Id of the IPAM Pool.
          type: string
        Cidr:
          description: Represents a single IPv4 or IPv6 CIDR
          type: string
        NetmaskLength:
          description: The desired netmask length of the provision. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
          type: integer
        State:
          description: Provisioned state of the cidr.
          type: string
      required:
        - IpamPoolId
      x-stackql-resource-name: IPAMPoolCidr
    IPAMResourceDiscovery:
      type: object
      properties:
        IpamResourceDiscoveryId:
          description: Id of the IPAM Pool.
          type: string
        OwnerId:
          description: Owner Account ID of the Resource Discovery
          type: string
        OperatingRegions:
          description: The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/IpamOperatingRegion'
        IpamResourceDiscoveryRegion:
          description: 'The region the resource discovery is setup in. '
          type: string
        Description:
          type: string
        IsDefault:
          description: Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
          type: boolean
        IpamResourceDiscoveryArn:
          description: Amazon Resource Name (Arn) for the Resource Discovery.
          type: string
        State:
          description: The state of this Resource Discovery.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: IPAMResourceDiscovery
    IPAMResourceDiscoveryAssociation:
      type: object
      properties:
        IpamArn:
          description: Arn of the IPAM.
          type: string
        IpamRegion:
          description: The home region of the IPAM.
          type: string
        IpamResourceDiscoveryAssociationId:
          description: Id of the IPAM Resource Discovery Association.
          type: string
        IpamResourceDiscoveryId:
          description: The Amazon Resource Name (ARN) of the IPAM Resource Discovery Association.
          type: string
        IpamId:
          description: The Id of the IPAM this Resource Discovery is associated to.
          type: string
        IpamResourceDiscoveryAssociationArn:
          description: The Amazon Resource Name (ARN) of the resource discovery association is a part of.
          type: string
        IsDefault:
          description: If the Resource Discovery Association exists due as part of CreateIpam.
          type: boolean
        OwnerId:
          description: The AWS Account ID for the account where the shared IPAM exists.
          type: string
        State:
          description: The operational state of the Resource Discovery Association. Related to Create/Delete activities.
          type: string
        ResourceDiscoveryStatus:
          description: The status of the resource discovery.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - IpamId
        - IpamResourceDiscoveryId
      x-stackql-resource-name: IPAMResourceDiscoveryAssociation
    IPAMScope:
      type: object
      properties:
        IpamScopeId:
          description: Id of the IPAM scope.
          type: string
        Arn:
          description: The Amazon Resource Name (ARN) of the IPAM scope.
          type: string
        IpamId:
          description: The Id of the IPAM this scope is a part of.
          type: string
        IpamArn:
          description: The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
          type: string
        IpamScopeType:
          description: Determines whether this scope contains publicly routable space or space for a private network
          type: string
          enum:
            - public
            - private
        IsDefault:
          description: Is this one of the default scopes created with the IPAM.
          type: boolean
        Description:
          type: string
        PoolCount:
          description: The number of pools that currently exist in this scope.
          type: integer
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - IpamId
      x-stackql-resource-name: IPAMScope
    KeyPair:
      type: object
      properties:
        KeyName:
          description: The name of the SSH key pair
          type: string
        KeyType:
          description: The title of the TPS report is a mandatory element.
          type: string
          default: rsa
          enum:
            - rsa
            - ed25519
        PublicKeyMaterial:
          description: Plain text public key to import
          type: string
        KeyFingerprint:
          description: A short sequence of bytes used for public key verification
          type: string
        KeyPairId:
          description: An AWS generated ID for the key pair
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - KeyName
      x-stackql-resource-name: KeyPair
    LaunchTemplateData:
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          type: array
          uniqueItems: false
          items:
            type: string
        TagSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagSpecification'
        UserData:
          type: string
        BlockDeviceMappings:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        MaintenanceOptions:
          $ref: '#/components/schemas/MaintenanceOptions'
        IamInstanceProfile:
          $ref: '#/components/schemas/IamInstanceProfile'
        KernelId:
          type: string
        EbsOptimized:
          type: boolean
        ElasticGpuSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ElasticGpuSpecification'
        ElasticInferenceAccelerators:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/LaunchTemplateElasticInferenceAccelerator'
        Placement:
          $ref: '#/components/schemas/Placement'
        NetworkInterfaces:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NetworkInterface'
        EnclaveOptions:
          $ref: '#/components/schemas/EnclaveOptions'
        ImageId:
          type: string
        InstanceType:
          type: string
        Monitoring:
          $ref: '#/components/schemas/Monitoring'
        HibernationOptions:
          $ref: '#/components/schemas/HibernationOptions'
        MetadataOptions:
          $ref: '#/components/schemas/MetadataOptions'
        LicenseSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/LicenseSpecification'
        InstanceInitiatedShutdownBehavior:
          type: string
        DisableApiStop:
          type: boolean
        CpuOptions:
          $ref: '#/components/schemas/CpuOptions'
        PrivateDnsNameOptions:
          $ref: '#/components/schemas/PrivateDnsNameOptions'
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        KeyName:
          type: string
        DisableApiTermination:
          type: boolean
        InstanceMarketOptions:
          $ref: '#/components/schemas/InstanceMarketOptions'
        InstanceRequirements:
          $ref: '#/components/schemas/InstanceRequirements'
        RamDiskId:
          type: string
        CapacityReservationSpecification:
          $ref: '#/components/schemas/CapacityReservationSpecification'
        CreditSpecification:
          $ref: '#/components/schemas/CreditSpecification'
    Ipv6Add:
      type: object
      additionalProperties: false
      properties:
        Ipv6Address:
          type: string
    MaintenanceOptions:
      type: object
      additionalProperties: false
      properties:
        AutoRecovery:
          type: string
    IamInstanceProfile:
      type: object
      additionalProperties: false
      properties:
        Arn:
          type: string
        Name:
          type: string
    MemoryGiBPerVCpu:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: number
        Min:
          type: number
    VCpuCount:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    Ipv4PrefixSpecification:
      type: object
      additionalProperties: false
      properties:
        Ipv4Prefix:
          type: string
    Monitoring:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    MemoryMiB:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    MetadataOptions:
      type: object
      additionalProperties: false
      properties:
        HttpPutResponseHopLimit:
          type: integer
        HttpTokens:
          type: string
        HttpProtocolIpv6:
          type: string
        InstanceMetadataTags:
          type: string
        HttpEndpoint:
          type: string
    NetworkInterfaceCount:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    SpotOptions:
      type: object
      additionalProperties: false
      properties:
        InstanceInterruptionBehavior:
          type: string
        MaxPrice:
          type: string
        SpotInstanceType:
          type: string
        BlockDurationMinutes:
          type: integer
        ValidUntil:
          type: string
    PrivateIpAdd:
      type: object
      additionalProperties: false
      properties:
        PrivateIpAddress:
          type: string
        Primary:
          type: boolean
    Ipv6PrefixSpecification:
      type: object
      additionalProperties: false
      properties:
        Ipv6Prefix:
          type: string
    LaunchTemplateTagSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourceType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
    NetworkBandwidthGbps:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: number
        Min:
          type: number
    AcceleratorCount:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    InstanceMarketOptions:
      type: object
      additionalProperties: false
      properties:
        SpotOptions:
          $ref: '#/components/schemas/SpotOptions'
        MarketType:
          type: string
    LaunchTemplateElasticInferenceAccelerator:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Count:
          type: integer
    BaselineEbsBandwidthMbps:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    InstanceRequirements:
      type: object
      additionalProperties: false
      properties:
        LocalStorageTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        InstanceGenerations:
          type: array
          uniqueItems: false
          items:
            type: string
        NetworkInterfaceCount:
          $ref: '#/components/schemas/NetworkInterfaceCount'
        MemoryGiBPerVCpu:
          $ref: '#/components/schemas/MemoryGiBPerVCpu'
        AcceleratorTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        VCpuCount:
          $ref: '#/components/schemas/VCpuCount'
        ExcludedInstanceTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        AcceleratorManufacturers:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowedInstanceTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        LocalStorage:
          type: string
        CpuManufacturers:
          type: array
          uniqueItems: false
          items:
            type: string
        AcceleratorCount:
          $ref: '#/components/schemas/AcceleratorCount'
        NetworkBandwidthGbps:
          $ref: '#/components/schemas/NetworkBandwidthGbps'
        BareMetal:
          type: string
        RequireHibernateSupport:
          type: boolean
        SpotMaxPricePercentageOverLowestPrice:
          type: integer
        BaselineEbsBandwidthMbps:
          $ref: '#/components/schemas/BaselineEbsBandwidthMbps'
        OnDemandMaxPricePercentageOverLowestPrice:
          type: integer
        AcceleratorNames:
          type: array
          uniqueItems: false
          items:
            type: string
        AcceleratorTotalMemoryMiB:
          $ref: '#/components/schemas/AcceleratorTotalMemoryMiB'
        BurstablePerformance:
          type: string
        MemoryMiB:
          $ref: '#/components/schemas/MemoryMiB'
        TotalLocalStorageGB:
          $ref: '#/components/schemas/TotalLocalStorageGB'
    AcceleratorTotalMemoryMiB:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    CapacityReservationTarget:
      type: object
      additionalProperties: false
      properties:
        CapacityReservationResourceGroupArn:
          type: string
        CapacityReservationId:
          type: string
    CapacityReservationSpecification:
      type: object
      additionalProperties: false
      properties:
        CapacityReservationTarget:
          $ref: '#/components/schemas/CapacityReservationTarget'
        CapacityReservationPreference:
          type: string
    TotalLocalStorageGB:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: number
        Min:
          type: number
    LaunchTemplate:
      type: object
      properties:
        LaunchTemplateName:
          type: string
        LaunchTemplateData:
          $ref: '#/components/schemas/LaunchTemplateData'
        VersionDescription:
          type: string
        TagSpecifications:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/LaunchTemplateTagSpecification'
        LatestVersionNumber:
          type: string
        Id:
          type: string
        DefaultVersionNumber:
          type: string
      required:
        - LaunchTemplateData
      x-stackql-resource-name: LaunchTemplate
    LocalGatewayRoute:
      type: object
      properties:
        DestinationCidrBlock:
          description: The CIDR block used for destination matches.
          type: string
        LocalGatewayRouteTableId:
          description: The ID of the local gateway route table.
          type: string
        LocalGatewayVirtualInterfaceGroupId:
          description: The ID of the virtual interface group.
          type: string
        NetworkInterfaceId:
          description: The ID of the network interface.
          type: string
        State:
          description: The state of the route.
          type: string
        Type:
          description: The route type.
          type: string
      x-stackql-resource-name: LocalGatewayRoute
    LocalGatewayRouteTable:
      type: object
      properties:
        LocalGatewayRouteTableId:
          description: The ID of the local gateway route table.
          type: string
        LocalGatewayRouteTableArn:
          description: The ARN of the local gateway route table.
          type: string
        LocalGatewayId:
          description: The ID of the local gateway.
          type: string
        OutpostArn:
          description: The ARN of the outpost.
          type: string
        OwnerId:
          description: The owner of the local gateway route table.
          type: string
        State:
          description: The state of the local gateway route table.
          type: string
        Mode:
          description: The mode of the local gateway route table.
          type: string
        Tags:
          description: The tags for the local gateway route table.
          $ref: '#/components/schemas/Tags'
      required:
        - LocalGatewayId
      x-stackql-resource-name: LocalGatewayRouteTable
    LocalGatewayRouteTableVirtualInterfaceGroupAssociation:
      type: object
      properties:
        LocalGatewayRouteTableVirtualInterfaceGroupAssociationId:
          description: The ID of the local gateway route table virtual interface group association.
          type: string
        LocalGatewayId:
          description: The ID of the local gateway.
          type: string
        LocalGatewayRouteTableId:
          description: The ID of the local gateway route table.
          type: string
        LocalGatewayRouteTableArn:
          description: The ARN of the local gateway route table.
          type: string
        LocalGatewayVirtualInterfaceGroupId:
          description: The ID of the local gateway route table virtual interface group.
          type: string
        OwnerId:
          description: The owner of the local gateway route table virtual interface group association.
          type: string
        State:
          description: The state of the local gateway route table virtual interface group association.
          type: string
        Tags:
          description: The tags for the local gateway route table virtual interface group association.
          $ref: '#/components/schemas/Tags'
      required:
        - LocalGatewayRouteTableId
        - LocalGatewayVirtualInterfaceGroupId
      x-stackql-resource-name: LocalGatewayRouteTableVirtualInterfaceGroupAssociation
    LocalGatewayRouteTableVPCAssociation:
      type: object
      properties:
        LocalGatewayId:
          description: The ID of the local gateway.
          type: string
        LocalGatewayRouteTableId:
          description: The ID of the local gateway route table.
          type: string
        LocalGatewayRouteTableVpcAssociationId:
          description: The ID of the association.
          type: string
        State:
          description: The state of the association.
          type: string
        VpcId:
          description: The ID of the VPC.
          type: string
        Tags:
          description: The tags for the association.
          $ref: '#/components/schemas/Tags'
      required:
        - LocalGatewayRouteTableId
        - VpcId
      x-stackql-resource-name: LocalGatewayRouteTableVPCAssociation
    NatGateway:
      type: object
      properties:
        SubnetId:
          type: string
        NatGatewayId:
          type: string
        ConnectivityType:
          type: string
        PrivateIpAddress:
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AllocationId:
          type: string
        SecondaryAllocationIds:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        SecondaryPrivateIpAddresses:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        SecondaryPrivateIpAddressCount:
          type: integer
          minimum: 1
        MaxDrainDurationSeconds:
          type: integer
      required:
        - SubnetId
      x-stackql-resource-name: NatGateway
    NetworkAcl:
      type: object
      properties:
        Id:
          type: string
        Tags:
          description: The tags to assign to the network ACL.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        VpcId:
          description: The ID of the VPC.
          type: string
      required:
        - VpcId
      x-stackql-resource-name: NetworkAcl
    PortRange:
      additionalProperties: false
      type: object
      properties:
        From:
          type: integer
        To:
          type: integer
    Icmp:
      type: object
      additionalProperties: false
      properties:
        Code:
          type: integer
        Type:
          type: integer
    NetworkAclEntry:
      type: object
      properties:
        Id:
          type: string
        PortRange:
          description: The IPv4 network range to allow or deny, in CIDR notation (for example 172.16.0.0/24). We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18
          $ref: '#/components/schemas/PortRange'
        NetworkAclId:
          description: The ID of the network ACL
          type: string
        RuleAction:
          description: Indicates whether to allow or deny the traffic that matches the rule
          type: string
        CidrBlock:
          description: 'The IPv4 CIDR range to allow or deny, in CIDR notation (for example, 172.16.0.0/24). Requirement is conditional: You must specify the CidrBlock or Ipv6CidrBlock property'
          type: string
        Egress:
          description: Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet)
          type: boolean
        RuleNumber:
          description: Rule number to assign to the entry, such as 100. ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule
          type: integer
        Ipv6CidrBlock:
          description: The IPv6 network range to allow or deny, in CIDR notation (for example 2001:db8:1234:1a00::/64)
          type: string
        Protocol:
          description: >-
            The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an
            ICMP type and code
          type: integer
        Icmp:
          description: 'The Internet Control Message Protocol (ICMP) code and type. Requirement is conditional: Required if specifying 1 (ICMP) for the protocol parameter'
          $ref: '#/components/schemas/Icmp'
      required:
        - NetworkAclId
        - RuleAction
        - RuleNumber
        - Protocol
      x-stackql-resource-name: NetworkAclEntry
    AccessScopePathRequest:
      type: object
      additionalProperties: false
      properties:
        Source:
          $ref: '#/components/schemas/PathStatementRequest'
        Destination:
          $ref: '#/components/schemas/PathStatementRequest'
        ThroughResources:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ThroughResourcesStatementRequest'
    PathStatementRequest:
      type: object
      additionalProperties: false
      properties:
        PacketHeaderStatement:
          $ref: '#/components/schemas/PacketHeaderStatementRequest'
        ResourceStatement:
          $ref: '#/components/schemas/ResourceStatementRequest'
    PacketHeaderStatementRequest:
      type: object
      additionalProperties: false
      properties:
        SourceAddresses:
          type: array
          x-insertionOrder: true
          items:
            type: string
        DestinationAddresses:
          type: array
          x-insertionOrder: true
          items:
            type: string
        SourcePorts:
          type: array
          x-insertionOrder: true
          items:
            type: string
        DestinationPorts:
          type: array
          x-insertionOrder: true
          items:
            type: string
        SourcePrefixLists:
          type: array
          x-insertionOrder: true
          items:
            type: string
        DestinationPrefixLists:
          type: array
          x-insertionOrder: true
          items:
            type: string
        Protocols:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Protocol'
    Protocol:
      type: string
      enum:
        - tcp
        - udp
    ResourceStatementRequest:
      type: object
      additionalProperties: false
      properties:
        Resources:
          type: array
          x-insertionOrder: true
          items:
            type: string
        ResourceTypes:
          type: array
          x-insertionOrder: true
          items:
            type: string
    ThroughResourcesStatementRequest:
      type: object
      additionalProperties: false
      properties:
        ResourceStatement:
          $ref: '#/components/schemas/ResourceStatementRequest'
    NetworkInsightsAccessScope:
      type: object
      properties:
        NetworkInsightsAccessScopeId:
          type: string
        NetworkInsightsAccessScopeArn:
          type: string
        CreatedDate:
          type: string
        UpdatedDate:
          type: string
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        MatchPaths:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/AccessScopePathRequest'
        ExcludePaths:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/AccessScopePathRequest'
      x-stackql-resource-name: NetworkInsightsAccessScope
    NetworkInsightsAccessScopeAnalysis:
      type: object
      properties:
        NetworkInsightsAccessScopeAnalysisId:
          type: string
        NetworkInsightsAccessScopeAnalysisArn:
          type: string
        NetworkInsightsAccessScopeId:
          type: string
        Status:
          type: string
          enum:
            - running
            - failed
            - succeeded
        StatusMessage:
          type: string
        StartDate:
          type: string
        EndDate:
          type: string
        FindingsFound:
          type: string
          enum:
            - 'true'
            - 'false'
            - unknown
        AnalyzedEniCount:
          type: integer
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - NetworkInsightsAccessScopeId
      x-stackql-resource-name: NetworkInsightsAccessScopeAnalysis
    PathComponent:
      additionalProperties: false
      type: object
      properties:
        AdditionalDetails:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/AdditionalDetail'
        InboundHeader:
          $ref: '#/components/schemas/AnalysisPacketHeader'
        Vpc:
          $ref: '#/components/schemas/AnalysisComponent'
        DestinationVpc:
          $ref: '#/components/schemas/AnalysisComponent'
        SecurityGroupRule:
          $ref: '#/components/schemas/AnalysisSecurityGroupRule'
        TransitGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        ElasticLoadBalancerListener:
          $ref: '#/components/schemas/AnalysisComponent'
        Explanations:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Explanation'
        ServiceName:
          type: string
        SequenceNumber:
          type: integer
        SourceVpc:
          $ref: '#/components/schemas/AnalysisComponent'
        OutboundHeader:
          $ref: '#/components/schemas/AnalysisPacketHeader'
        AclRule:
          $ref: '#/components/schemas/AnalysisAclRule'
        TransitGatewayRouteTableRoute:
          $ref: '#/components/schemas/TransitGatewayRouteTableRoute'
        Component:
          $ref: '#/components/schemas/AnalysisComponent'
        Subnet:
          $ref: '#/components/schemas/AnalysisComponent'
        RouteTableRoute:
          $ref: '#/components/schemas/AnalysisRouteTableRoute'
    AnalysisLoadBalancerListener:
      additionalProperties: false
      type: object
      properties:
        InstancePort:
          $ref: '#/components/schemas/Port'
        LoadBalancerPort:
          $ref: '#/components/schemas/Port'
    AnalysisLoadBalancerTarget:
      additionalProperties: false
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/IpAddress'
        Instance:
          $ref: '#/components/schemas/AnalysisComponent'
        Port:
          $ref: '#/components/schemas/Port'
        AvailabilityZone:
          type: string
    Explanation:
      additionalProperties: false
      type: object
      properties:
        VpnGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        PacketField:
          type: string
        TransitGatewayAttachment:
          $ref: '#/components/schemas/AnalysisComponent'
        Protocols:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Protocol'
        IngressRouteTable:
          $ref: '#/components/schemas/AnalysisComponent'
        ClassicLoadBalancerListener:
          $ref: '#/components/schemas/AnalysisLoadBalancerListener'
        VpcPeeringConnection:
          $ref: '#/components/schemas/AnalysisComponent'
        Address:
          $ref: '#/components/schemas/IpAddress'
        Port:
          $ref: '#/components/schemas/Port'
        Addresses:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
        ElasticLoadBalancerListener:
          $ref: '#/components/schemas/AnalysisComponent'
        TransitGatewayRouteTable:
          $ref: '#/components/schemas/AnalysisComponent'
        ExplanationCode:
          type: string
        InternetGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        SourceVpc:
          $ref: '#/components/schemas/AnalysisComponent'
        AttachedTo:
          $ref: '#/components/schemas/AnalysisComponent'
        PrefixList:
          $ref: '#/components/schemas/AnalysisComponent'
        TransitGatewayRouteTableRoute:
          $ref: '#/components/schemas/TransitGatewayRouteTableRoute'
        ComponentRegion:
          type: string
        LoadBalancerTargetGroup:
          $ref: '#/components/schemas/AnalysisComponent'
        NetworkInterface:
          $ref: '#/components/schemas/AnalysisComponent'
        CustomerGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        DestinationVpc:
          $ref: '#/components/schemas/AnalysisComponent'
        SecurityGroup:
          $ref: '#/components/schemas/AnalysisComponent'
        TransitGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        RouteTable:
          $ref: '#/components/schemas/AnalysisComponent'
        State:
          type: string
        LoadBalancerListenerPort:
          $ref: '#/components/schemas/Port'
        vpcEndpoint:
          $ref: '#/components/schemas/AnalysisComponent'
        Subnet:
          $ref: '#/components/schemas/AnalysisComponent'
        Cidrs:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            type: string
        Destination:
          $ref: '#/components/schemas/AnalysisComponent'
        SecurityGroups:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/AnalysisComponent'
        ComponentAccount:
          type: string
        VpnConnection:
          $ref: '#/components/schemas/AnalysisComponent'
        Vpc:
          $ref: '#/components/schemas/AnalysisComponent'
        NatGateway:
          $ref: '#/components/schemas/AnalysisComponent'
        Direction:
          type: string
        LoadBalancerTargetPort:
          $ref: '#/components/schemas/Port'
        LoadBalancerTarget:
          $ref: '#/components/schemas/AnalysisLoadBalancerTarget'
        LoadBalancerTargetGroups:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/AnalysisComponent'
        Component:
          $ref: '#/components/schemas/AnalysisComponent'
        MissingComponent:
          type: string
        RouteTableRoute:
          $ref: '#/components/schemas/AnalysisRouteTableRoute'
        AvailabilityZones:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            type: string
        PortRanges:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PortRange'
        Acl:
          $ref: '#/components/schemas/AnalysisComponent'
        SecurityGroupRule:
          $ref: '#/components/schemas/AnalysisSecurityGroupRule'
        SubnetRouteTable:
          $ref: '#/components/schemas/AnalysisComponent'
        LoadBalancerArn:
          $ref: '#/components/schemas/ResourceArn'
        AclRule:
          $ref: '#/components/schemas/AnalysisAclRule'
    Port:
      type: integer
    AnalysisPacketHeader:
      additionalProperties: false
      type: object
      properties:
        DestinationPortRanges:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PortRange'
        SourcePortRanges:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PortRange'
        DestinationAddresses:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
        Protocol:
          $ref: '#/components/schemas/Protocol'
        SourceAddresses:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
    AdditionalDetail:
      additionalProperties: false
      type: object
      properties:
        ServiceName:
          type: string
        AdditionalDetailType:
          type: string
        LoadBalancers:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/AnalysisComponent'
        Component:
          $ref: '#/components/schemas/AnalysisComponent'
    AlternatePathHint:
      additionalProperties: false
      type: object
      properties:
        ComponentArn:
          type: string
        ComponentId:
          type: string
    TransitGatewayRouteTableRoute:
      additionalProperties: false
      type: object
      properties:
        PrefixListId:
          type: string
        ResourceId:
          type: string
        State:
          type: string
        ResourceType:
          type: string
        RouteOrigin:
          type: string
        DestinationCidr:
          type: string
        AttachmentId:
          type: string
    AnalysisSecurityGroupRule:
      additionalProperties: false
      type: object
      properties:
        PortRange:
          $ref: '#/components/schemas/PortRange'
        Cidr:
          type: string
        PrefixListId:
          type: string
        SecurityGroupId:
          type: string
        Protocol:
          $ref: '#/components/schemas/Protocol'
        Direction:
          type: string
    AnalysisComponent:
      additionalProperties: false
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
    AnalysisAclRule:
      additionalProperties: false
      type: object
      properties:
        PortRange:
          $ref: '#/components/schemas/PortRange'
        Cidr:
          type: string
        RuleAction:
          type: string
        Egress:
          type: boolean
        RuleNumber:
          type: integer
        Protocol:
          $ref: '#/components/schemas/Protocol'
    AnalysisRouteTableRoute:
      additionalProperties: false
      type: object
      properties:
        Origin:
          type: string
        destinationPrefixListId:
          type: string
        destinationCidr:
          type: string
        NetworkInterfaceId:
          type: string
        TransitGatewayId:
          type: string
        VpcPeeringConnectionId:
          type: string
        instanceId:
          type: string
        State:
          type: string
        egressOnlyInternetGatewayId:
          type: string
        NatGatewayId:
          type: string
        gatewayId:
          type: string
    ResourceArn:
      type: string
    IpAddress:
      type: string
    NetworkInsightsAnalysis:
      type: object
      properties:
        Status:
          type: string
          enum:
            - running
            - failed
            - succeeded
        ReturnPathComponents:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PathComponent'
        NetworkInsightsAnalysisId:
          type: string
        NetworkInsightsPathId:
          type: string
        NetworkPathFound:
          type: boolean
        SuggestedAccounts:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        FilterInArns:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceArn'
        NetworkInsightsAnalysisArn:
          type: string
        StatusMessage:
          type: string
        StartDate:
          type: string
        AlternatePathHints:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/AlternatePathHint'
        Explanations:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Explanation'
        ForwardPathComponents:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PathComponent'
        AdditionalAccounts:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        Tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - NetworkInsightsPathId
      x-stackql-resource-name: NetworkInsightsAnalysis
    NetworkInsightsPath:
      type: object
      properties:
        Destination:
          type: string
        NetworkInsightsPathId:
          type: string
        NetworkInsightsPathArn:
          type: string
        DestinationPort:
          $ref: '#/components/schemas/Port'
        Source:
          type: string
        DestinationIp:
          $ref: '#/components/schemas/IpAddress'
        SourceIp:
          $ref: '#/components/schemas/IpAddress'
        SourceArn:
          type: string
        CreatedDate:
          type: string
        Protocol:
          $ref: '#/components/schemas/Protocol'
        DestinationArn:
          type: string
        Tags:
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Protocol
        - Source
      x-stackql-resource-name: NetworkInsightsPath
    NetworkInterfaceAttachment:
      type: object
      properties:
        Id:
          type: string
        DeleteOnTermination:
          type: boolean
        DeviceIndex:
          type: string
        InstanceId:
          type: string
        NetworkInterfaceId:
          type: string
      required:
        - NetworkInterfaceId
        - InstanceId
        - DeviceIndex
      x-stackql-resource-name: NetworkInterfaceAttachment
    NetworkInterfacePermission:
      type: object
      properties:
        Id:
          type: string
        AwsAccountId:
          type: string
        NetworkInterfaceId:
          type: string
        Permission:
          type: string
      required:
        - AwsAccountId
        - NetworkInterfaceId
        - Permission
      x-stackql-resource-name: NetworkInterfacePermission
    NetworkPerformanceMetricSubscription:
      type: object
      properties:
        Source:
          description: The starting Region or Availability Zone for metric to subscribe to.
          type: string
        Destination:
          description: The target Region or Availability Zone for the metric to subscribe to.
          type: string
        Metric:
          description: The metric type to subscribe to.
          type: string
        Statistic:
          description: The statistic to subscribe to.
          type: string
      required:
        - Source
        - Destination
        - Metric
        - Statistic
      x-stackql-resource-name: NetworkPerformanceMetricSubscription
    PlacementGroup:
      type: object
      properties:
        Strategy:
          description: The placement strategy.
          type: string
        GroupName:
          description: The Group Name of Placement Group.
          type: string
        SpreadLevel:
          description: The Spread Level of Placement Group is an enum where it accepts either host or rack when strategy is spread
          type: string
        PartitionCount:
          description: The number of partitions. Valid only when **Strategy** is set to `partition`
          type: integer
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: PlacementGroup
    Entry:
      type: object
      properties:
        Cidr:
          type: string
          minLength: 1
          maxLength: 46
        Description:
          type: string
          minLength: 0
          maxLength: 255
      required:
        - Cidr
      additionalProperties: false
    PrefixList:
      type: object
      properties:
        PrefixListName:
          description: Name of Prefix List.
          type: string
          minLength: 1
          maxLength: 255
        PrefixListId:
          description: Id of Prefix List.
          type: string
        OwnerId:
          description: Owner Id of Prefix List.
          type: string
        AddressFamily:
          description: Ip Version of Prefix List.
          type: string
          enum:
            - IPv4
            - IPv6
        MaxEntries:
          description: Max Entries of Prefix List.
          type: integer
          minimum: 1
        Version:
          description: Version of Prefix List.
          type: integer
        Tags:
          description: Tags for Prefix List
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Entries:
          description: Entries of Prefix List.
          type: array
          items:
            $ref: '#/components/schemas/Entry'
        Arn:
          description: The Amazon Resource Name (ARN) of the Prefix List.
          type: string
      required:
        - PrefixListName
        - MaxEntries
        - AddressFamily
      x-stackql-resource-name: PrefixList
    Route:
      type: object
      properties:
        DestinationIpv6CidrBlock:
          type: string
        RouteTableId:
          type: string
        InstanceId:
          type: string
        LocalGatewayId:
          type: string
        CarrierGatewayId:
          type: string
        DestinationCidrBlock:
          type: string
        GatewayId:
          type: string
        NetworkInterfaceId:
          type: string
        VpcEndpointId:
          type: string
        TransitGatewayId:
          type: string
        VpcPeeringConnectionId:
          type: string
        EgressOnlyInternetGatewayId:
          type: string
        Id:
          type: string
        NatGatewayId:
          type: string
      required:
        - RouteTableId
      x-stackql-resource-name: Route
    RouteTable:
      type: object
      properties:
        RouteTableId:
          description: The route table ID.
          type: string
        Tags:
          description: Any tags assigned to the route table.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        VpcId:
          description: The ID of the VPC.
          type: string
      required:
        - VpcId
      x-stackql-resource-name: RouteTable
    Ingress:
      type: object
      additionalProperties: false
      properties:
        CidrIp:
          type: string
        CidrIpv6:
          type: string
        Description:
          type: string
        FromPort:
          type: integer
        SourceSecurityGroupName:
          type: string
        ToPort:
          type: integer
        SourceSecurityGroupOwnerId:
          type: string
        IpProtocol:
          type: string
        SourceSecurityGroupId:
          type: string
        SourcePrefixListId:
          type: string
      required:
        - IpProtocol
    Egress:
      type: object
      additionalProperties: false
      properties:
        CidrIp:
          type: string
        CidrIpv6:
          type: string
        Description:
          type: string
        FromPort:
          type: integer
        ToPort:
          type: integer
        IpProtocol:
          type: string
        DestinationSecurityGroupId:
          type: string
        DestinationPrefixListId:
          type: string
      required:
        - IpProtocol
    SecurityGroup:
      type: object
      properties:
        GroupDescription:
          type: string
        GroupName:
          type: string
        VpcId:
          type: string
        Id:
          type: string
        SecurityGroupIngress:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Ingress'
        SecurityGroupEgress:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Egress'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        GroupId:
          type: string
      required:
        - GroupDescription
      x-stackql-resource-name: SecurityGroup
    SecurityGroupEgress:
      type: object
      properties:
        Id:
          type: string
        CidrIp:
          type: string
        CidrIpv6:
          type: string
        Description:
          type: string
        DestinationPrefixListId:
          type: string
        DestinationSecurityGroupId:
          type: string
        FromPort:
          type: integer
        GroupId:
          type: string
        IpProtocol:
          type: string
        ToPort:
          type: integer
      required:
        - IpProtocol
        - GroupId
      x-stackql-resource-name: SecurityGroupEgress
    SecurityGroupIngress:
      type: object
      properties:
        Id:
          type: string
        CidrIp:
          type: string
        CidrIpv6:
          type: string
        Description:
          type: string
        FromPort:
          type: integer
        GroupId:
          type: string
        GroupName:
          type: string
        IpProtocol:
          type: string
        SourcePrefixListId:
          type: string
        SourceSecurityGroupId:
          type: string
        SourceSecurityGroupName:
          type: string
        SourceSecurityGroupOwnerId:
          type: string
        ToPort:
          type: integer
      required:
        - IpProtocol
      x-stackql-resource-name: SecurityGroupIngress
    SpotFleetRequestConfigData:
      type: object
      additionalProperties: false
      properties:
        AllocationStrategy:
          type: string
          enum:
            - capacityOptimized
            - capacityOptimizedPrioritized
            - diversified
            - lowestPrice
            - priceCapacityOptimized
        Context:
          type: string
        ExcessCapacityTerminationPolicy:
          type: string
          enum:
            - Default
            - NoTermination
            - default
            - noTermination
        IamFleetRole:
          type: string
        InstanceInterruptionBehavior:
          type: string
          enum:
            - hibernate
            - stop
            - terminate
        InstancePoolsToUseCount:
          type: integer
        LaunchSpecifications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SpotFleetLaunchSpecification'
        LaunchTemplateConfigs:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LaunchTemplateConfig'
        LoadBalancersConfig:
          $ref: '#/components/schemas/LoadBalancersConfig'
        OnDemandAllocationStrategy:
          type: string
        OnDemandMaxTotalPrice:
          type: string
        OnDemandTargetCapacity:
          type: integer
        ReplaceUnhealthyInstances:
          type: boolean
        SpotMaintenanceStrategies:
          $ref: '#/components/schemas/SpotMaintenanceStrategies'
        SpotMaxTotalPrice:
          type: string
        SpotPrice:
          type: string
        TargetCapacity:
          type: integer
        TerminateInstancesWithExpiration:
          type: boolean
        Type:
          type: string
          enum:
            - maintain
            - request
        ValidFrom:
          type: string
        ValidUntil:
          type: string
        TagSpecifications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SpotFleetTagSpecification'
        TargetCapacityUnitType:
          type: string
          enum:
            - vcpu
            - memory-mib
            - units
      required:
        - IamFleetRole
        - TargetCapacity
    SpotFleetLaunchSpecification:
      type: object
      additionalProperties: false
      properties:
        BlockDeviceMappings:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        EbsOptimized:
          type: boolean
          default: false
        IamInstanceProfile:
          $ref: '#/components/schemas/IamInstanceProfileSpecification'
        ImageId:
          type: string
        InstanceType:
          type: string
        KernelId:
          type: string
        KeyName:
          type: string
        Monitoring:
          $ref: '#/components/schemas/SpotFleetMonitoring'
        NetworkInterfaces:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InstanceNetworkInterfaceSpecification'
        Placement:
          $ref: '#/components/schemas/SpotPlacement'
        RamdiskId:
          type: string
        SecurityGroups:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GroupIdentifier'
        SpotPrice:
          type: string
        SubnetId:
          type: string
        TagSpecifications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SpotFleetTagSpecification'
        UserData:
          type: string
        WeightedCapacity:
          type: number
        InstanceRequirements:
          $ref: '#/components/schemas/InstanceRequirementsRequest'
      required:
        - ImageId
    LoadBalancersConfig:
      type: object
      additionalProperties: false
      properties:
        ClassicLoadBalancersConfig:
          $ref: '#/components/schemas/ClassicLoadBalancersConfig'
        TargetGroupsConfig:
          $ref: '#/components/schemas/TargetGroupsConfig'
    SpotMaintenanceStrategies:
      type: object
      additionalProperties: false
      properties:
        CapacityRebalance:
          $ref: '#/components/schemas/SpotCapacityRebalance'
    SpotCapacityRebalance:
      type: object
      additionalProperties: false
      properties:
        ReplacementStrategy:
          type: string
          enum:
            - launch
            - launch-before-terminate
        TerminationDelay:
          type: integer
    LaunchTemplateConfig:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateSpecification:
          $ref: '#/components/schemas/FleetLaunchTemplateSpecification'
        Overrides:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LaunchTemplateOverrides'
    SpotFleetTagSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourceType:
          type: string
          enum:
            - client-vpn-endpoint
            - customer-gateway
            - dedicated-host
            - dhcp-options
            - egress-only-internet-gateway
            - elastic-gpu
            - elastic-ip
            - export-image-task
            - export-instance-task
            - fleet
            - fpga-image
            - host-reservation
            - image
            - import-image-task
            - import-snapshot-task
            - instance
            - internet-gateway
            - key-pair
            - launch-template
            - local-gateway-route-table-vpc-association
            - natgateway
            - network-acl
            - network-insights-analysis
            - network-insights-path
            - network-interface
            - placement-group
            - reserved-instances
            - route-table
            - security-group
            - snapshot
            - spot-fleet-request
            - spot-instances-request
            - subnet
            - traffic-mirror-filter
            - traffic-mirror-session
            - traffic-mirror-target
            - transit-gateway
            - transit-gateway-attachment
            - transit-gateway-connect-peer
            - transit-gateway-multicast-domain
            - transit-gateway-route-table
            - volume
            - vpc
            - vpc-flow-log
            - vpc-peering-connection
            - vpn-connection
            - vpn-gateway
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
    FleetLaunchTemplateSpecification:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateId:
          type: string
        LaunchTemplateName:
          type: string
          minLength: 3
          maxLength: 128
          pattern: '[a-zA-Z0-9\(\)\.\-/_]+'
        Version:
          type: string
      required:
        - Version
    GroupIdentifier:
      type: object
      additionalProperties: false
      properties:
        GroupId:
          type: string
      required:
        - GroupId
    IamInstanceProfileSpecification:
      type: object
      additionalProperties: false
      properties:
        Arn:
          type: string
    ClassicLoadBalancersConfig:
      type: object
      additionalProperties: false
      properties:
        ClassicLoadBalancers:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ClassicLoadBalancer'
      required:
        - ClassicLoadBalancers
    LaunchTemplateOverrides:
      type: object
      additionalProperties: false
      properties:
        AvailabilityZone:
          type: string
        InstanceType:
          type: string
        SpotPrice:
          type: string
        SubnetId:
          type: string
        WeightedCapacity:
          type: number
        InstanceRequirements:
          $ref: '#/components/schemas/InstanceRequirementsRequest'
        Priority:
          type: number
    SpotFleetMonitoring:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          default: false
    SpotPlacement:
      type: object
      additionalProperties: false
      properties:
        AvailabilityZone:
          type: string
        GroupName:
          type: string
        Tenancy:
          type: string
          enum:
            - dedicated
            - default
            - host
    InstanceNetworkInterfaceSpecification:
      type: object
      additionalProperties: false
      properties:
        AssociatePublicIpAddress:
          type: boolean
        DeleteOnTermination:
          type: boolean
        Description:
          type: string
        DeviceIndex:
          type: integer
        Groups:
          type: array
          uniqueItems: true
          items:
            type: string
        Ipv6AddressCount:
          type: integer
        Ipv6Addresses:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InstanceIpv6Address'
        NetworkInterfaceId:
          type: string
        PrivateIpAddresses:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PrivateIpAddressSpecification'
        SecondaryPrivateIpAddressCount:
          type: integer
        SubnetId:
          type: string
    TargetGroupsConfig:
      type: object
      additionalProperties: false
      properties:
        TargetGroups:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TargetGroup'
      required:
        - TargetGroups
    EbsBlockDevice:
      type: object
      additionalProperties: false
      properties:
        DeleteOnTermination:
          type: boolean
        Encrypted:
          type: boolean
        Iops:
          type: integer
        SnapshotId:
          type: string
        VolumeSize:
          type: integer
        VolumeType:
          type: string
          enum:
            - gp2
            - gp3
            - io1
            - io2
            - sc1
            - st1
            - standard
    TargetGroup:
      type: object
      additionalProperties: false
      properties:
        Arn:
          type: string
      required:
        - Arn
    ClassicLoadBalancer:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
      required:
        - Name
    SpotFleet:
      type: object
      properties:
        Id:
          type: string
        SpotFleetRequestConfigData:
          $ref: '#/components/schemas/SpotFleetRequestConfigData'
      required:
        - SpotFleetRequestConfigData
      x-stackql-resource-name: SpotFleet
    Subnet:
      type: object
      properties:
        AssignIpv6AddressOnCreation:
          type: boolean
        VpcId:
          type: string
        MapPublicIpOnLaunch:
          type: boolean
        NetworkAclAssociationId:
          type: string
        AvailabilityZone:
          type: string
        AvailabilityZoneId:
          type: string
        CidrBlock:
          type: string
        SubnetId:
          type: string
        Ipv6CidrBlocks:
          type: array
          uniqueItems: false
          items:
            type: string
        Ipv6CidrBlock:
          type: string
        OutpostArn:
          type: string
        Ipv6Native:
          type: boolean
        EnableDns64:
          type: boolean
        PrivateDnsNameOptionsOnLaunch:
          type: object
          additionalProperties: false
          properties:
            HostnameType:
              type: string
            EnableResourceNameDnsARecord:
              type: boolean
            EnableResourceNameDnsAAAARecord:
              type: boolean
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - VpcId
      x-stackql-resource-name: Subnet
    SubnetCidrBlock:
      type: object
      properties:
        Id:
          type: string
        Ipv6CidrBlock:
          type: string
        SubnetId:
          type: string
      required:
        - Ipv6CidrBlock
        - SubnetId
      x-stackql-resource-name: SubnetCidrBlock
    SubnetNetworkAclAssociation:
      type: object
      properties:
        SubnetId:
          type: string
          description: The ID of the subnet
        NetworkAclId:
          type: string
          description: The ID of the network ACL
        AssociationId:
          type: string
      required:
        - NetworkAclId
        - SubnetId
      x-stackql-resource-name: SubnetNetworkAclAssociation
    SubnetRouteTableAssociation:
      type: object
      properties:
        Id:
          type: string
        RouteTableId:
          type: string
        SubnetId:
          type: string
      required:
        - RouteTableId
        - SubnetId
      x-stackql-resource-name: SubnetRouteTableAssociation
    TrafficMirrorFilter:
      type: object
      properties:
        Id:
          type: string
        Description:
          type: string
        NetworkServices:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: TrafficMirrorFilter
    TrafficMirrorPortRange:
      type: object
      additionalProperties: false
      properties:
        FromPort:
          type: integer
        ToPort:
          type: integer
      required:
        - ToPort
        - FromPort
    TrafficMirrorFilterRule:
      type: object
      properties:
        Id:
          type: string
        DestinationPortRange:
          $ref: '#/components/schemas/TrafficMirrorPortRange'
        Description:
          type: string
        SourcePortRange:
          $ref: '#/components/schemas/TrafficMirrorPortRange'
        RuleAction:
          type: string
        SourceCidrBlock:
          type: string
        RuleNumber:
          type: integer
        DestinationCidrBlock:
          type: string
        TrafficMirrorFilterId:
          type: string
        TrafficDirection:
          type: string
        Protocol:
          type: integer
      required:
        - RuleAction
        - SourceCidrBlock
        - RuleNumber
        - DestinationCidrBlock
        - TrafficMirrorFilterId
        - TrafficDirection
      x-stackql-resource-name: TrafficMirrorFilterRule
    TrafficMirrorSession:
      type: object
      properties:
        Id:
          type: string
        TrafficMirrorTargetId:
          type: string
        Description:
          type: string
        SessionNumber:
          type: integer
        VirtualNetworkId:
          type: integer
        PacketLength:
          type: integer
        NetworkInterfaceId:
          type: string
        TrafficMirrorFilterId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TrafficMirrorTargetId
        - NetworkInterfaceId
        - TrafficMirrorFilterId
        - SessionNumber
      x-stackql-resource-name: TrafficMirrorSession
    TrafficMirrorTarget:
      type: object
      properties:
        NetworkLoadBalancerArn:
          type: string
        Description:
          type: string
        Id:
          type: string
        NetworkInterfaceId:
          type: string
        GatewayLoadBalancerEndpointId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: TrafficMirrorTarget
    TransitGateway:
      type: object
      properties:
        DefaultRouteTablePropagation:
          type: string
        Description:
          type: string
        AutoAcceptSharedAttachments:
          type: string
        DefaultRouteTableAssociation:
          type: string
        Id:
          type: string
        VpnEcmpSupport:
          type: string
        DnsSupport:
          type: string
        MulticastSupport:
          type: string
        AmazonSideAsn:
          type: integer
          format: int64
        TransitGatewayCidrBlocks:
          type: array
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        AssociationDefaultRouteTableId:
          type: string
        PropagationDefaultRouteTableId:
          type: string
      x-stackql-resource-name: TransitGateway
    TransitGatewayAttachment:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayId:
          type: string
        VpcId:
          type: string
        SubnetIds:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Options:
          description: The options for the transit gateway vpc attachment.
          type: object
          properties:
            DnsSupport:
              description: 'Indicates whether to enable DNS Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
            Ipv6Support:
              description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
            ApplianceModeSupport:
              description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
          additionalProperties: false
      required:
        - VpcId
        - SubnetIds
        - TransitGatewayId
      x-stackql-resource-name: TransitGatewayAttachment
    TransitGatewayConnectOptions:
      type: object
      properties:
        Protocol:
          description: The tunnel protocol.
          type: string
      additionalProperties: false
    TransitGatewayConnect:
      type: object
      properties:
        TransitGatewayAttachmentId:
          description: The ID of the Connect attachment.
          type: string
        TransportTransitGatewayAttachmentId:
          description: The ID of the attachment from which the Connect attachment was created.
          type: string
        TransitGatewayId:
          description: The ID of the transit gateway.
          type: string
        State:
          description: The state of the attachment.
          type: string
        CreationTime:
          description: The creation time.
          type: string
        Tags:
          description: The tags for the attachment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Options:
          $ref: '#/components/schemas/TransitGatewayConnectOptions'
          description: The Connect attachment options.
      required:
        - TransportTransitGatewayAttachmentId
        - Options
      x-stackql-resource-name: TransitGatewayConnect
    TransitGatewayMulticastDomain:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          description: The ID of the transit gateway multicast domain.
          type: string
        TransitGatewayMulticastDomainArn:
          description: The Amazon Resource Name (ARN) of the transit gateway multicast domain.
          type: string
        TransitGatewayId:
          description: The ID of the transit gateway.
          type: string
        State:
          description: The state of the transit gateway multicast domain.
          type: string
        CreationTime:
          description: The time the transit gateway multicast domain was created.
          type: string
          format: date-time
        Tags:
          description: The tags for the transit gateway multicast domain.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Options:
          description: The options for the transit gateway multicast domain.
          type: object
          properties:
            AutoAcceptSharedAssociations:
              description: 'Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain. Valid Values: enable | disable'
              type: string
            Igmpv2Support:
              description: 'Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain. Valid Values: enable | disable'
              type: string
            StaticSourcesSupport:
              description: 'Indicates whether support for statically configuring transit gateway multicast group sources is turned on. Valid Values: enable | disable'
              type: string
          additionalProperties: false
      required:
        - TransitGatewayId
      x-stackql-resource-name: TransitGatewayMulticastDomain
    TransitGatewayMulticastDomainAssociation:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          description: The ID of the transit gateway multicast domain.
          type: string
        TransitGatewayAttachmentId:
          description: The ID of the transit gateway attachment.
          type: string
        ResourceId:
          description: The ID of the resource.
          type: string
        ResourceType:
          description: The type of resource, for example a VPC attachment.
          type: string
        State:
          description: The state of the subnet association.
          type: string
        SubnetId:
          description: The IDs of the subnets to associate with the transit gateway multicast domain.
          type: string
      required:
        - TransitGatewayMulticastDomainId
        - TransitGatewayAttachmentId
        - SubnetId
      x-stackql-resource-name: TransitGatewayMulticastDomainAssociation
    TransitGatewayMulticastGroupMember:
      type: object
      properties:
        GroupIpAddress:
          description: The IP address assigned to the transit gateway multicast group.
          type: string
        TransitGatewayAttachmentId:
          description: The ID of the transit gateway attachment.
          type: string
        TransitGatewayMulticastDomainId:
          description: The ID of the transit gateway multicast domain.
          type: string
        SubnetId:
          description: The ID of the subnet.
          type: string
        ResourceId:
          description: The ID of the resource.
          type: string
        ResourceType:
          description: The type of resource, for example a VPC attachment.
          type: string
        NetworkInterfaceId:
          description: The ID of the transit gateway attachment.
          type: string
        GroupMember:
          description: Indicates that the resource is a transit gateway multicast group member.
          type: boolean
        GroupSource:
          description: Indicates that the resource is a transit gateway multicast group member.
          type: boolean
        MemberType:
          description: The member type (for example, static).
          type: string
        SourceType:
          description: The source type.
          type: string
      required:
        - GroupIpAddress
        - NetworkInterfaceId
        - TransitGatewayMulticastDomainId
      x-stackql-resource-name: TransitGatewayMulticastGroupMember
    TransitGatewayMulticastGroupSource:
      type: object
      properties:
        GroupIpAddress:
          description: The IP address assigned to the transit gateway multicast group.
          type: string
        TransitGatewayAttachmentId:
          description: The ID of the transit gateway attachment.
          type: string
        TransitGatewayMulticastDomainId:
          description: The ID of the transit gateway multicast domain.
          type: string
        SubnetId:
          description: The ID of the subnet.
          type: string
        ResourceId:
          description: The ID of the resource.
          type: string
        ResourceType:
          description: The type of resource, for example a VPC attachment.
          type: string
        NetworkInterfaceId:
          description: The ID of the transit gateway attachment.
          type: string
        GroupMember:
          description: Indicates that the resource is a transit gateway multicast group member.
          type: boolean
        GroupSource:
          description: Indicates that the resource is a transit gateway multicast group member.
          type: boolean
        MemberType:
          description: The member type (for example, static).
          type: string
        SourceType:
          description: The source type.
          type: string
      required:
        - TransitGatewayMulticastDomainId
        - NetworkInterfaceId
        - GroupIpAddress
      x-stackql-resource-name: TransitGatewayMulticastGroupSource
    PeeringAttachmentStatus:
      additionalProperties: false
      type: object
      properties:
        Message:
          description: The status message, if applicable.
          type: string
        Code:
          description: The status code.
          type: string
    TransitGatewayPeeringAttachment:
      type: object
      properties:
        Status:
          description: The status of the transit gateway peering attachment.
          $ref: '#/components/schemas/PeeringAttachmentStatus'
        TransitGatewayId:
          description: The ID of the transit gateway.
          type: string
        PeerTransitGatewayId:
          description: The ID of the peer transit gateway.
          type: string
        PeerAccountId:
          description: The ID of the peer account
          type: string
        State:
          description: The state of the transit gateway peering attachment. Note that the initiating state has been deprecated.
          type: string
        CreationTime:
          format: date-time
          description: The time the transit gateway peering attachment was created.
          type: string
        PeerRegion:
          description: Peer Region
          type: string
        Tags:
          description: The tags for the transit gateway peering attachment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        TransitGatewayAttachmentId:
          description: The ID of the transit gateway peering attachment.
          type: string
      required:
        - TransitGatewayId
        - PeerTransitGatewayId
        - PeerAccountId
        - PeerRegion
      x-stackql-resource-name: TransitGatewayPeeringAttachment
    TransitGatewayRoute:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayRouteTableId:
          type: string
        DestinationCidrBlock:
          type: string
        Blackhole:
          type: boolean
        TransitGatewayAttachmentId:
          type: string
      required:
        - TransitGatewayRouteTableId
      x-stackql-resource-name: TransitGatewayRoute
    TransitGatewayRouteTable:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TransitGatewayId
      x-stackql-resource-name: TransitGatewayRouteTable
    TransitGatewayRouteTableAssociation:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayRouteTableId:
          type: string
        TransitGatewayAttachmentId:
          type: string
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      x-stackql-resource-name: TransitGatewayRouteTableAssociation
    TransitGatewayRouteTablePropagation:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayRouteTableId:
          type: string
        TransitGatewayAttachmentId:
          type: string
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      x-stackql-resource-name: TransitGatewayRouteTablePropagation
    TransitGatewayVpcAttachment:
      type: object
      properties:
        Id:
          type: string
        TransitGatewayId:
          type: string
        VpcId:
          type: string
        SubnetIds:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            type: string
        AddSubnetIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        RemoveSubnetIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Options:
          description: The options for the transit gateway vpc attachment.
          type: object
          properties:
            DnsSupport:
              description: 'Indicates whether to enable DNS Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
            Ipv6Support:
              description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
            ApplianceModeSupport:
              description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
              type: string
          additionalProperties: false
      required:
        - SubnetIds
        - VpcId
        - TransitGatewayId
      x-stackql-resource-name: TransitGatewayVpcAttachment
    VolumeAttachment:
      type: object
      properties:
        VolumeId:
          type: string
        Id:
          type: string
        InstanceId:
          type: string
        Device:
          type: string
      required:
        - VolumeId
        - InstanceId
        - Device
      x-stackql-resource-name: VolumeAttachment
    VPC:
      type: object
      properties:
        VpcId:
          type: string
          description: The Id for the model.
        CidrBlock:
          type: string
          description: The primary IPv4 CIDR block for the VPC.
        CidrBlockAssociations:
          type: array
          description: A list of IPv4 CIDR block association IDs for the VPC.
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        DefaultNetworkAcl:
          type: string
          x-insertionOrder: false
          description: The default network ACL ID that is associated with the VPC.
        DefaultSecurityGroup:
          type: string
          x-insertionOrder: false
          description: The default security group ID that is associated with the VPC.
        Ipv6CidrBlocks:
          type: array
          description: A list of IPv6 CIDR blocks that are associated with the VPC.
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        EnableDnsHostnames:
          type: boolean
          description: Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. Disabled by default for nondefault VPCs.
        EnableDnsSupport:
          type: boolean
          description: Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled. Enabled by default.
        InstanceTenancy:
          type: string
          description: |-
            The allowed tenancy of instances launched into the VPC.

            "default": An instance launched into the VPC runs on shared hardware by default, unless you explicitly specify a different tenancy during instance launch.

            "dedicated": An instance launched into the VPC is a Dedicated Instance by default, unless you explicitly specify a tenancy of host during instance launch. You cannot specify a tenancy of default during instance launch.

            Updating InstanceTenancy requires no replacement only if you are updating its value from "dedicated" to "default". Updating InstanceTenancy from "default" to "dedicated" requires replacement.
        Ipv4IpamPoolId:
          type: string
          description: The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR
        Ipv4NetmaskLength:
          type: integer
          description: The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool
        Tags:
          type: array
          description: The tags for the VPC.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: VPC
    VPCCidrBlock:
      type: object
      properties:
        Ipv6NetmaskLength:
          type: integer
        Ipv6IpamPoolId:
          type: string
        VpcId:
          type: string
        Ipv4NetmaskLength:
          type: integer
        CidrBlock:
          type: string
        Ipv4IpamPoolId:
          type: string
        Ipv6Pool:
          type: string
        Id:
          type: string
        Ipv6CidrBlock:
          type: string
        AmazonProvidedIpv6CidrBlock:
          type: boolean
      required:
        - VpcId
      x-stackql-resource-name: VPCCidrBlock
    VPCDHCPOptionsAssociation:
      type: object
      properties:
        DhcpOptionsId:
          type: string
          description: The ID of the DHCP options set, or default to associate no DHCP options with the VPC.
        VpcId:
          type: string
          description: The ID of the VPC.
      required:
        - VpcId
        - DhcpOptionsId
      x-stackql-resource-name: VPCDHCPOptionsAssociation
    VPCEndpoint:
      type: object
      properties:
        Id:
          type: string
        CreationTimestamp:
          type: string
        DnsEntries:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        NetworkInterfaceIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        PolicyDocument:
          type: string
        PrivateDnsEnabled:
          type: boolean
          description: Indicate whether to associate a private hosted zone with the specified VPC.
        RouteTableIds:
          type: array
          description: One or more route table IDs.
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        SecurityGroupIds:
          type: array
          description: The ID of one or more security groups to associate with the endpoint network interface.
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        ServiceName:
          type: string
          description: The service name.
        SubnetIds:
          type: array
          description: The ID of one or more subnets in which to create an endpoint network interface.
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        VpcEndpointType:
          type: string
          enum:
            - Interface
            - Gateway
            - GatewayLoadBalancer
        VpcId:
          type: string
          description: The ID of the VPC in which the endpoint will be used.
      required:
        - VpcId
        - ServiceName
      x-stackql-resource-name: VPCEndpoint
    VPCEndpointConnectionNotification:
      type: object
      properties:
        Id:
          type: string
        ConnectionEvents:
          type: array
          uniqueItems: false
          items:
            type: string
        VPCEndpointId:
          type: string
        ServiceId:
          type: string
        ConnectionNotificationArn:
          type: string
      required:
        - ConnectionEvents
        - ConnectionNotificationArn
      x-stackql-resource-name: VPCEndpointConnectionNotification
    VPCEndpointService:
      type: object
      properties:
        NetworkLoadBalancerArns:
          type: array
          uniqueItems: false
          items:
            type: string
        ContributorInsightsEnabled:
          type: boolean
        PayerResponsibility:
          type: string
        ServiceId:
          type: string
        AcceptanceRequired:
          type: boolean
        GatewayLoadBalancerArns:
          type: array
          uniqueItems: false
          items:
            type: string
      x-stackql-resource-name: VPCEndpointService
    VPCEndpointServicePermissions:
      type: object
      properties:
        Id:
          type: string
        AllowedPrincipals:
          type: array
          uniqueItems: false
          items:
            type: string
        ServiceId:
          type: string
      required:
        - ServiceId
      x-stackql-resource-name: VPCEndpointServicePermissions
    VPCGatewayAttachment:
      type: object
      properties:
        Id:
          type: string
        InternetGatewayId:
          type: string
        VpcId:
          type: string
        VpnGatewayId:
          type: string
      required:
        - VpcId
      x-stackql-resource-name: VPCGatewayAttachment
    VPCPeeringConnection:
      type: object
      properties:
        Id:
          type: string
        PeerOwnerId:
          description: The AWS account ID of the owner of the accepter VPC.
          type: string
        PeerRegion:
          description: The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.
          type: string
        PeerRoleArn:
          description: The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.
          type: string
        PeerVpcId:
          description: The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
          type: string
        VpcId:
          description: The ID of the VPC.
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - VpcId
        - PeerVpcId
      x-stackql-resource-name: VPCPeeringConnection
    VpnTunnelOptionsSpecification:
      type: object
      additionalProperties: false
      properties:
        PreSharedKey:
          type: string
        TunnelInsideCidr:
          type: string
    VPNConnection:
      type: object
      properties:
        VpnConnectionId:
          description: The provider-assigned unique ID for this managed resource
          type: string
        CustomerGatewayId:
          description: The ID of the customer gateway at your end of the VPN connection.
          type: string
        StaticRoutesOnly:
          description: Indicates whether the VPN connection uses static routes only.
          type: boolean
        Tags:
          description: Any tags assigned to the VPN connection.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        TransitGatewayId:
          description: The ID of the transit gateway associated with the VPN connection.
          type: string
        Type:
          description: The type of VPN connection.
          type: string
        VpnGatewayId:
          description: The ID of the virtual private gateway at the AWS side of the VPN connection.
          type: string
        VpnTunnelOptionsSpecifications:
          description: The tunnel options for the VPN connection.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/VpnTunnelOptionsSpecification'
      required:
        - Type
        - CustomerGatewayId
      x-stackql-resource-name: VPNConnection
    VPNConnectionRoute:
      type: object
      properties:
        DestinationCidrBlock:
          description: The CIDR block associated with the local subnet of the customer network.
          type: string
        VpnConnectionId:
          description: The ID of the VPN connection.
          type: string
      required:
        - DestinationCidrBlock
        - VpnConnectionId
      x-stackql-resource-name: VPNConnectionRoute
    VPNGateway:
      type: object
      properties:
        VPNGatewayId:
          description: VPN Gateway ID generated by service
          type: string
        AmazonSideAsn:
          description: The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
          type: integer
          format: int64
        Tags:
          description: Any tags assigned to the virtual private gateway.
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          description: The type of VPN connection the virtual private gateway supports.
          type: string
      required:
        - Type
      x-stackql-resource-name: VPNGateway
    VPNGatewayRoutePropagation:
      type: object
      properties:
        Id:
          type: string
        RouteTableIds:
          description: The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        VpnGatewayId:
          description: The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with
          type: string
      required:
        - RouteTableIds
        - VpnGatewayId
      x-stackql-resource-name: VPNGatewayRoutePropagation
x-stackql-views:
  - CapacityReservation:
      name: CapacityReservation
      id: aws.ec2.CapacityReservation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Tenancy') as tenancy,
              JSON_EXTRACT(Properties, '$.EndDateType') as end_date_type,
              JSON_EXTRACT(Properties, '$.TagSpecifications') as tag_specifications,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.TotalInstanceCount') as total_instance_count,
              JSON_EXTRACT(Properties, '$.EndDate') as end_date,
              JSON_EXTRACT(Properties, '$.EbsOptimized') as ebs_optimized,
              JSON_EXTRACT(Properties, '$.OutPostArn') as out_post_arn,
              JSON_EXTRACT(Properties, '$.InstanceCount') as instance_count,
              JSON_EXTRACT(Properties, '$.PlacementGroupArn') as placement_group_arn,
              JSON_EXTRACT(Properties, '$.AvailableInstanceCount') as available_instance_count,
              JSON_EXTRACT(Properties, '$.InstancePlatform') as instance_platform,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.EphemeralStorage') as ephemeral_storage,
              JSON_EXTRACT(Properties, '$.InstanceMatchCriteria') as instance_match_criteria
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::CapacityReservation' ;
  - CapacityReservationFleet:
      name: CapacityReservationFleet
      id: aws.ec2.CapacityReservationFleet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.AllocationStrategy') as allocation_strategy,
              JSON_EXTRACT(Properties, '$.TagSpecifications') as tag_specifications,
              JSON_EXTRACT(Properties, '$.InstanceTypeSpecifications') as instance_type_specifications,
              JSON_EXTRACT(Properties, '$.TotalTargetCapacity') as total_target_capacity,
              JSON_EXTRACT(Properties, '$.EndDate') as end_date,
              JSON_EXTRACT(Properties, '$.InstanceMatchCriteria') as instance_match_criteria,
              JSON_EXTRACT(Properties, '$.CapacityReservationFleetId') as capacity_reservation_fleet_id,
              JSON_EXTRACT(Properties, '$.Tenancy') as tenancy,
              JSON_EXTRACT(Properties, '$.RemoveEndDate') as remove_end_date,
              JSON_EXTRACT(Properties, '$.NoRemoveEndDate') as no_remove_end_date
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::CapacityReservationFleet' ;
  - CarrierGateway:
      name: CarrierGateway
      id: aws.ec2.CarrierGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.CarrierGatewayId') as carrier_gateway_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::CarrierGateway' ;
  - ClientVpnAuthorizationRule:
      name: ClientVpnAuthorizationRule
      id: aws.ec2.ClientVpnAuthorizationRule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ClientVpnEndpointId') as client_vpn_endpoint_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AccessGroupId') as access_group_id,
              JSON_EXTRACT(Properties, '$.TargetNetworkCidr') as target_network_cidr,
              JSON_EXTRACT(Properties, '$.AuthorizeAllGroups') as authorize_all_groups
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::ClientVpnAuthorizationRule' ;
  - ClientVpnEndpoint:
      name: ClientVpnEndpoint
      id: aws.ec2.ClientVpnEndpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.ClientCidrBlock') as client_cidr_block,
              JSON_EXTRACT(Properties, '$.ClientConnectOptions.Enabled') as client_connect_options_enabled,
              JSON_EXTRACT(Properties, '$.ClientConnectOptions.LambdaFunctionArn') as client_connect_options_lambda_function_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TagSpecifications') as tag_specifications,
              JSON_EXTRACT(Properties, '$.AuthenticationOptions') as authentication_options,
              JSON_EXTRACT(Properties, '$.ServerCertificateArn') as server_certificate_arn,
              JSON_EXTRACT(Properties, '$.SessionTimeoutHours') as session_timeout_hours,
              JSON_EXTRACT(Properties, '$.DnsServers') as dns_servers,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.ConnectionLogOptions.Enabled') as connection_log_options_enabled,
              JSON_EXTRACT(Properties, '$.ConnectionLogOptions.CloudwatchLogGroup') as connection_log_options_cloudwatch_log_group,
              JSON_EXTRACT(Properties, '$.ConnectionLogOptions.CloudwatchLogStream') as connection_log_options_cloudwatch_log_stream,
              JSON_EXTRACT(Properties, '$.SplitTunnel') as split_tunnel,
              JSON_EXTRACT(Properties, '$.ClientLoginBannerOptions.Enabled') as client_login_banner_options_enabled,
              JSON_EXTRACT(Properties, '$.ClientLoginBannerOptions.BannerText') as client_login_banner_options_banner_text,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.SelfServicePortal') as self_service_portal,
              JSON_EXTRACT(Properties, '$.TransportProtocol') as transport_protocol,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.VpnPort') as vpn_port
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::ClientVpnEndpoint' ;
  - ClientVpnRoute:
      name: ClientVpnRoute
      id: aws.ec2.ClientVpnRoute
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ClientVpnEndpointId') as client_vpn_endpoint_id,
              JSON_EXTRACT(Properties, '$.TargetVpcSubnetId') as target_vpc_subnet_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::ClientVpnRoute' ;
  - ClientVpnTargetNetworkAssociation:
      name: ClientVpnTargetNetworkAssociation
      id: aws.ec2.ClientVpnTargetNetworkAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ClientVpnEndpointId') as client_vpn_endpoint_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::ClientVpnTargetNetworkAssociation' ;
  - CustomerGateway:
      name: CustomerGateway
      id: aws.ec2.CustomerGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.CustomerGatewayId') as customer_gateway_id,
              JSON_EXTRACT(Properties, '$.BgpAsn') as bgp_asn,
              JSON_EXTRACT(Properties, '$.IpAddress') as ip_address,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.DeviceName') as device_name
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::CustomerGateway' ;
  - DHCPOptions:
      name: DHCPOptions
      id: aws.ec2.DHCPOptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DhcpOptionsId') as dhcp_options_id,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainNameServers') as domain_name_servers,
              JSON_EXTRACT(Properties, '$.NetbiosNameServers') as netbios_name_servers,
              JSON_EXTRACT(Properties, '$.NetbiosNodeType') as netbios_node_type,
              JSON_EXTRACT(Properties, '$.NtpServers') as ntp_servers,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::DHCPOptions' ;
  - EC2Fleet:
      name: EC2Fleet
      id: aws.ec2.EC2Fleet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.TargetCapacitySpecification.DefaultTargetCapacityType') as target_capacity_specification_default_target_capacity_type,
              JSON_EXTRACT(Properties, '$.TargetCapacitySpecification.TargetCapacityUnitType') as target_capacity_specification_target_capacity_unit_type,
              JSON_EXTRACT(Properties, '$.TargetCapacitySpecification.TotalTargetCapacity') as target_capacity_specification_total_target_capacity,
              JSON_EXTRACT(Properties, '$.TargetCapacitySpecification.OnDemandTargetCapacity') as target_capacity_specification_on_demand_target_capacity,
              JSON_EXTRACT(Properties, '$.TargetCapacitySpecification.SpotTargetCapacity') as target_capacity_specification_spot_target_capacity,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.SingleAvailabilityZone') as on_demand_options_single_availability_zone,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.AllocationStrategy') as on_demand_options_allocation_strategy,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.SingleInstanceType') as on_demand_options_single_instance_type,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.MinTargetCapacity') as on_demand_options_min_target_capacity,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.MaxTotalPrice') as on_demand_options_max_total_price,
              JSON_EXTRACT(Properties, '$.OnDemandOptions.CapacityReservationOptions') as on_demand_options_capacity_reservation_options,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ExcessCapacityTerminationPolicy') as excess_capacity_termination_policy,
              JSON_EXTRACT(Properties, '$.TagSpecifications') as tag_specifications,
              JSON_EXTRACT(Properties, '$.SpotOptions.MaintenanceStrategies') as spot_options_maintenance_strategies,
              JSON_EXTRACT(Properties, '$.SpotOptions.SingleAvailabilityZone') as spot_options_single_availability_zone,
              JSON_EXTRACT(Properties, '$.SpotOptions.AllocationStrategy') as spot_options_allocation_strategy,
              JSON_EXTRACT(Properties, '$.SpotOptions.SingleInstanceType') as spot_options_single_instance_type,
              JSON_EXTRACT(Properties, '$.SpotOptions.MinTargetCapacity') as spot_options_min_target_capacity,
              JSON_EXTRACT(Properties, '$.SpotOptions.MaxTotalPrice') as spot_options_max_total_price,
              JSON_EXTRACT(Properties, '$.SpotOptions.InstanceInterruptionBehavior') as spot_options_instance_interruption_behavior,
              JSON_EXTRACT(Properties, '$.SpotOptions.InstancePoolsToUseCount') as spot_options_instance_pools_to_use_count,
              JSON_EXTRACT(Properties, '$.ValidFrom') as valid_from,
              JSON_EXTRACT(Properties, '$.ReplaceUnhealthyInstances') as replace_unhealthy_instances,
              JSON_EXTRACT(Properties, '$.LaunchTemplateConfigs') as launch_template_configs,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(Properties, '$.TerminateInstancesWithExpiration') as terminate_instances_with_expiration,
              JSON_EXTRACT(Properties, '$.ValidUntil') as valid_until,
              JSON_EXTRACT(Properties, '$.Context') as context
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::EC2Fleet' ;
  - EgressOnlyInternetGateway:
      name: EgressOnlyInternetGateway
      id: aws.ec2.EgressOnlyInternetGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::EgressOnlyInternetGateway' ;
  - EIP:
      name: EIP
      id: aws.ec2.EIP
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.PublicIp') as public_ip,
              JSON_EXTRACT(Properties, '$.AllocationId') as allocation_id,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.NetworkBorderGroup') as network_border_group,
              JSON_EXTRACT(Properties, '$.TransferAddress') as transfer_address,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.PublicIpv4Pool') as public_ipv4_pool,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::EIP' ;
  - EIPAssociation:
      name: EIPAssociation
      id: aws.ec2.EIPAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AllocationId') as allocation_id,
              JSON_EXTRACT(Properties, '$.EIP') as e_ip,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.PrivateIpAddress') as private_ip_address
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::EIPAssociation' ;
  - EnclaveCertificateIamRoleAssociation:
      name: EnclaveCertificateIamRoleAssociation
      id: aws.ec2.EnclaveCertificateIamRoleAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.CertificateArn') as certificate_arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.CertificateS3BucketName') as certificate_s3_bucket_name,
              JSON_EXTRACT(Properties, '$.CertificateS3ObjectKey') as certificate_s3_object_key,
              JSON_EXTRACT(Properties, '$.EncryptionKmsKeyId') as encryption_kms_key_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::EnclaveCertificateIamRoleAssociation' ;
  - FlowLog:
      name: FlowLog
      id: aws.ec2.FlowLog
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DeliverLogsPermissionArn') as deliver_logs_permission_arn,
              JSON_EXTRACT(Properties, '$.LogDestination') as log_destination,
              JSON_EXTRACT(Properties, '$.LogDestinationType') as log_destination_type,
              JSON_EXTRACT(Properties, '$.LogFormat') as log_format,
              JSON_EXTRACT(Properties, '$.LogGroupName') as log_group_name,
              JSON_EXTRACT(Properties, '$.MaxAggregationInterval') as max_aggregation_interval,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrafficType') as traffic_type,
              JSON_EXTRACT(Properties, '$.DestinationOptions') as destination_options
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::FlowLog' ;
  - GatewayRouteTableAssociation:
      name: GatewayRouteTableAssociation
      id: aws.ec2.GatewayRouteTableAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.RouteTableId') as route_table_id,
              JSON_EXTRACT(Properties, '$.GatewayId') as gateway_id,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::GatewayRouteTableAssociation' ;
  - Host:
      name: Host
      id: aws.ec2.Host
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.HostId') as host_id,
              JSON_EXTRACT(Properties, '$.AutoPlacement') as auto_placement,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.HostRecovery') as host_recovery,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.InstanceFamily') as instance_family,
              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,
              JSON_EXTRACT(Properties, '$.HostMaintenance') as host_maintenance
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::Host' ;
  - NetworkInterface:
      name: NetworkInterface
      id: aws.ec2.NetworkInterface
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PrivateIpAddress') as private_ip_address,
              JSON_EXTRACT(Properties, '$.PrivateIpAddresses') as private_ip_addresses,
              JSON_EXTRACT(Properties, '$.SecondaryPrivateIpAddressCount') as secondary_private_ip_address_count,
              JSON_EXTRACT(Properties, '$.PrimaryPrivateIpAddress') as primary_private_ip_address,
              JSON_EXTRACT(Properties, '$.GroupSet') as group_set,
              JSON_EXTRACT(Properties, '$.Ipv6Addresses') as ipv6_addresses,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.SourceDestCheck') as source_dest_check,
              JSON_EXTRACT(Properties, '$.InterfaceType') as interface_type,
              JSON_EXTRACT(Properties, '$.SecondaryPrivateIpAddresses') as secondary_private_ip_addresses,
              JSON_EXTRACT(Properties, '$.Ipv6AddressCount') as ipv6_address_count,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInterface' ;
  - Volume:
      name: Volume
      id: aws.ec2.Volume
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.MultiAttachEnabled') as multi_attach_enabled,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Encrypted') as encrypted,
              JSON_EXTRACT(Properties, '$.Size') as size,
              JSON_EXTRACT(Properties, '$.AutoEnableIO') as auto_enable_io,
              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.Throughput') as throughput,
              JSON_EXTRACT(Properties, '$.Iops') as iops,
              JSON_EXTRACT(Properties, '$.SnapshotId') as snapshot_id,
              JSON_EXTRACT(Properties, '$.VolumeType') as volume_type,
              JSON_EXTRACT(Properties, '$.VolumeId') as volume_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::Volume' ;
  - Instance:
      name: Instance
      id: aws.ec2.Instance
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Tenancy') as tenancy,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.PrivateDnsName') as private_dns_name,
              JSON_EXTRACT(Properties, '$.PrivateIpAddress') as private_ip_address,
              JSON_EXTRACT(Properties, '$.UserData') as user_data,
              JSON_EXTRACT(Properties, '$.BlockDeviceMappings') as block_device_mappings,
              JSON_EXTRACT(Properties, '$.IamInstanceProfile') as iam_instance_profile,
              JSON_EXTRACT(Properties, '$.Ipv6Addresses') as ipv6_addresses,
              JSON_EXTRACT(Properties, '$.KernelId') as kernel_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.EbsOptimized') as ebs_optimized,
              JSON_EXTRACT(Properties, '$.PropagateTagsToVolumeOnCreation') as propagate_tags_to_volume_on_creation,
              JSON_EXTRACT(Properties, '$.ElasticGpuSpecifications') as elastic_gpu_specifications,
              JSON_EXTRACT(Properties, '$.ElasticInferenceAccelerators') as elastic_inference_accelerators,
              JSON_EXTRACT(Properties, '$.Volumes') as volumes,
              JSON_EXTRACT(Properties, '$.PrivateIp') as private_ip,
              JSON_EXTRACT(Properties, '$.Ipv6AddressCount') as ipv6_address_count,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.LaunchTemplateName') as launch_template_launch_template_name,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.LaunchTemplateId') as launch_template_launch_template_id,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.Version') as launch_template_version,
              JSON_EXTRACT(Properties, '$.EnclaveOptions.Enabled') as enclave_options_enabled,
              JSON_EXTRACT(Properties, '$.NetworkInterfaces') as network_interfaces,
              JSON_EXTRACT(Properties, '$.ImageId') as image_id,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.Monitoring') as monitoring,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AdditionalInfo') as additional_info,
              JSON_EXTRACT(Properties, '$.HibernationOptions.Configured') as hibernation_options_configured,
              JSON_EXTRACT(Properties, '$.LicenseSpecifications') as license_specifications,
              JSON_EXTRACT(Properties, '$.PublicIp') as public_ip,
              JSON_EXTRACT(Properties, '$.InstanceInitiatedShutdownBehavior') as instance_initiated_shutdown_behavior,
              JSON_EXTRACT(Properties, '$.CpuOptions.ThreadsPerCore') as cpu_options_threads_per_core,
              JSON_EXTRACT(Properties, '$.CpuOptions.CoreCount') as cpu_options_core_count,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.PrivateDnsNameOptions.HostnameType') as private_dns_name_options_hostname_type,
              JSON_EXTRACT(Properties, '$.PrivateDnsNameOptions.EnableResourceNameDnsAAAARecord') as private_dns_name_options_enable_resource_name_dns_aa_aa_record,
              JSON_EXTRACT(Properties, '$.PrivateDnsNameOptions.EnableResourceNameDnsARecord') as private_dns_name_options_enable_resource_name_dns_arecord,
              JSON_EXTRACT(Properties, '$.HostId') as host_id,
              JSON_EXTRACT(Properties, '$.HostResourceGroupArn') as host_resource_group_arn,
              JSON_EXTRACT(Properties, '$.PublicDnsName') as public_dns_name,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.DisableApiTermination') as disable_api_termination,
              JSON_EXTRACT(Properties, '$.KeyName') as key_name,
              JSON_EXTRACT(Properties, '$.RamdiskId') as ramdisk_id,
              JSON_EXTRACT(Properties, '$.SourceDestCheck') as source_dest_check,
              JSON_EXTRACT(Properties, '$.PlacementGroupName') as placement_group_name,
              JSON_EXTRACT(Properties, '$.SsmAssociations') as ssm_associations,
              JSON_EXTRACT(Properties, '$.Affinity') as affinity,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CreditSpecification.CpuCredits') as credit_specification_cpu_credits
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::Instance' ;
  - InternetGateway:
      name: InternetGateway
      id: aws.ec2.InternetGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.InternetGatewayId') as internet_gateway_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::InternetGateway' ;
  - IPAM:
      name: IPAM
      id: aws.ec2.IPAM
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamId') as ipam_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DefaultResourceDiscoveryId') as default_resource_discovery_id,
              JSON_EXTRACT(Properties, '$.DefaultResourceDiscoveryAssociationId') as default_resource_discovery_association_id,
              JSON_EXTRACT(Properties, '$.ResourceDiscoveryAssociationCount') as resource_discovery_association_count,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PublicDefaultScopeId') as public_default_scope_id,
              JSON_EXTRACT(Properties, '$.PrivateDefaultScopeId') as private_default_scope_id,
              JSON_EXTRACT(Properties, '$.ScopeCount') as scope_count,
              JSON_EXTRACT(Properties, '$.OperatingRegions') as operating_regions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAM' ;
  - IPAMAllocation:
      name: IPAMAllocation
      id: aws.ec2.IPAMAllocation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamPoolAllocationId') as ipam_pool_allocation_id,
              JSON_EXTRACT(Properties, '$.IpamPoolId') as ipam_pool_id,
              JSON_EXTRACT(Properties, '$.NetmaskLength') as netmask_length,
              JSON_EXTRACT(Properties, '$.Description') as description
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMAllocation' ;
  - IPAMPool:
      name: IPAMPool
      id: aws.ec2.IPAMPool
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamPoolId') as ipam_pool_id,
              JSON_EXTRACT(Properties, '$.AddressFamily') as address_family,
              JSON_EXTRACT(Properties, '$.AllocationMinNetmaskLength') as allocation_min_netmask_length,
              JSON_EXTRACT(Properties, '$.AllocationDefaultNetmaskLength') as allocation_default_netmask_length,
              JSON_EXTRACT(Properties, '$.AllocationMaxNetmaskLength') as allocation_max_netmask_length,
              JSON_EXTRACT(Properties, '$.AllocationResourceTags') as allocation_resource_tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AutoImport') as auto_import,
              JSON_EXTRACT(Properties, '$.AwsService') as aws_service,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.IpamScopeId') as ipam_scope_id,
              JSON_EXTRACT(Properties, '$.IpamScopeArn') as ipam_scope_arn,
              JSON_EXTRACT(Properties, '$.IpamScopeType') as ipam_scope_type,
              JSON_EXTRACT(Properties, '$.IpamArn') as ipam_arn,
              JSON_EXTRACT(Properties, '$.Locale') as locale,
              JSON_EXTRACT(Properties, '$.PoolDepth') as pool_depth,
              JSON_EXTRACT(Properties, '$.ProvisionedCidrs') as provisioned_cidrs,
              JSON_EXTRACT(Properties, '$.PublicIpSource') as public_ip_source,
              JSON_EXTRACT(Properties, '$.PubliclyAdvertisable') as publicly_advertisable,
              JSON_EXTRACT(Properties, '$.SourceIpamPoolId') as source_ipam_pool_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.StateMessage') as state_message,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMPool' ;
  - IPAMPoolCidr:
      name: IPAMPoolCidr
      id: aws.ec2.IPAMPoolCidr
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamPoolCidrId') as ipam_pool_cidr_id,
              JSON_EXTRACT(Properties, '$.IpamPoolId') as ipam_pool_id,
              JSON_EXTRACT(Properties, '$.Cidr') as cidr,
              JSON_EXTRACT(Properties, '$.NetmaskLength') as netmask_length,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMPoolCidr' ;
  - IPAMResourceDiscovery:
      name: IPAMResourceDiscovery
      id: aws.ec2.IPAMResourceDiscovery
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryId') as ipam_resource_discovery_id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.OperatingRegions') as operating_regions,
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryRegion') as ipam_resource_discovery_region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.IsDefault') as is_default,
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryArn') as ipam_resource_discovery_arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMResourceDiscovery' ;
  - IPAMResourceDiscoveryAssociation:
      name: IPAMResourceDiscoveryAssociation
      id: aws.ec2.IPAMResourceDiscoveryAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamArn') as ipam_arn,
              JSON_EXTRACT(Properties, '$.IpamRegion') as ipam_region,
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryAssociationId') as ipam_resource_discovery_association_id,
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryId') as ipam_resource_discovery_id,
              JSON_EXTRACT(Properties, '$.IpamId') as ipam_id,
              JSON_EXTRACT(Properties, '$.IpamResourceDiscoveryAssociationArn') as ipam_resource_discovery_association_arn,
              JSON_EXTRACT(Properties, '$.IsDefault') as is_default,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.ResourceDiscoveryStatus') as resource_discovery_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMResourceDiscoveryAssociation' ;
  - IPAMScope:
      name: IPAMScope
      id: aws.ec2.IPAMScope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.IpamScopeId') as ipam_scope_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.IpamId') as ipam_id,
              JSON_EXTRACT(Properties, '$.IpamArn') as ipam_arn,
              JSON_EXTRACT(Properties, '$.IpamScopeType') as ipam_scope_type,
              JSON_EXTRACT(Properties, '$.IsDefault') as is_default,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PoolCount') as pool_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::IPAMScope' ;
  - KeyPair:
      name: KeyPair
      id: aws.ec2.KeyPair
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.KeyName') as key_name,
              JSON_EXTRACT(Properties, '$.KeyType') as key_type,
              JSON_EXTRACT(Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(Properties, '$.KeyFingerprint') as key_fingerprint,
              JSON_EXTRACT(Properties, '$.KeyPairId') as key_pair_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::KeyPair' ;
  - LaunchTemplate:
      name: LaunchTemplate
      id: aws.ec2.LaunchTemplate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.LaunchTemplateName') as launch_template_name,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.SecurityGroups') as launch_template_data_security_groups,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.TagSpecifications') as launch_template_data_tag_specifications,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.UserData') as launch_template_data_user_data,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.BlockDeviceMappings') as launch_template_data_block_device_mappings,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.MaintenanceOptions') as launch_template_data_maintenance_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.IamInstanceProfile') as launch_template_data_iam_instance_profile,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.KernelId') as launch_template_data_kernel_id,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.EbsOptimized') as launch_template_data_ebs_optimized,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.ElasticGpuSpecifications') as launch_template_data_elastic_gpu_specifications,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.ElasticInferenceAccelerators') as launch_template_data_elastic_inference_accelerators,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.Placement') as launch_template_data_placement,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.NetworkInterfaces') as launch_template_data_network_interfaces,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.EnclaveOptions') as launch_template_data_enclave_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.ImageId') as launch_template_data_image_id,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.InstanceType') as launch_template_data_instance_type,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.Monitoring') as launch_template_data_monitoring,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.HibernationOptions') as launch_template_data_hibernation_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.MetadataOptions') as launch_template_data_metadata_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.LicenseSpecifications') as launch_template_data_license_specifications,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.InstanceInitiatedShutdownBehavior') as launch_template_data_instance_initiated_shutdown_behavior,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.DisableApiStop') as launch_template_data_disable_api_stop,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.CpuOptions') as launch_template_data_cpu_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.PrivateDnsNameOptions') as launch_template_data_private_dns_name_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.SecurityGroupIds') as launch_template_data_security_group_ids,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.KeyName') as launch_template_data_key_name,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.DisableApiTermination') as launch_template_data_disable_api_termination,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.InstanceMarketOptions') as launch_template_data_instance_market_options,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.InstanceRequirements') as launch_template_data_instance_requirements,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.RamDiskId') as launch_template_data_ram_disk_id,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.CapacityReservationSpecification') as launch_template_data_capacity_reservation_specification,
              JSON_EXTRACT(Properties, '$.LaunchTemplateData.CreditSpecification') as launch_template_data_credit_specification,
              JSON_EXTRACT(Properties, '$.VersionDescription') as version_description,
              JSON_EXTRACT(Properties, '$.TagSpecifications') as tag_specifications,
              JSON_EXTRACT(Properties, '$.LatestVersionNumber') as latest_version_number,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultVersionNumber') as default_version_number
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::LaunchTemplate' ;
  - LocalGatewayRoute:
      name: LocalGatewayRoute
      id: aws.ec2.LocalGatewayRoute
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableId') as local_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayVirtualInterfaceGroupId') as local_gateway_virtual_interface_group_id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::LocalGatewayRoute' ;
  - LocalGatewayRouteTable:
      name: LocalGatewayRouteTable
      id: aws.ec2.LocalGatewayRouteTable
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableId') as local_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableArn') as local_gateway_route_table_arn,
              JSON_EXTRACT(Properties, '$.LocalGatewayId') as local_gateway_id,
              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Mode') as mode
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::LocalGatewayRouteTable' ;
  - LocalGatewayRouteTableVirtualInterfaceGroupAssociation:
      name: LocalGatewayRouteTableVirtualInterfaceGroupAssociation
      id: aws.ec2.LocalGatewayRouteTableVirtualInterfaceGroupAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableVirtualInterfaceGroupAssociationId') as local_gateway_route_table_virtual_interface_group_association_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayId') as local_gateway_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableId') as local_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableArn') as local_gateway_route_table_arn,
              JSON_EXTRACT(Properties, '$.LocalGatewayVirtualInterfaceGroupId') as local_gateway_virtual_interface_group_id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.State') as state
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation' ;
  - LocalGatewayRouteTableVPCAssociation:
      name: LocalGatewayRouteTableVPCAssociation
      id: aws.ec2.LocalGatewayRouteTableVPCAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.LocalGatewayId') as local_gateway_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableId') as local_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayRouteTableVpcAssociationId') as local_gateway_route_table_vpc_association_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::LocalGatewayRouteTableVPCAssociation' ;
  - NatGateway:
      name: NatGateway
      id: aws.ec2.NatGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.NatGatewayId') as nat_gateway_id,
              JSON_EXTRACT(Properties, '$.ConnectivityType') as connectivity_type,
              JSON_EXTRACT(Properties, '$.PrivateIpAddress') as private_ip_address,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AllocationId') as allocation_id,
              JSON_EXTRACT(Properties, '$.SecondaryAllocationIds') as secondary_allocation_ids,
              JSON_EXTRACT(Properties, '$.SecondaryPrivateIpAddresses') as secondary_private_ip_addresses,
              JSON_EXTRACT(Properties, '$.SecondaryPrivateIpAddressCount') as secondary_private_ip_address_count,
              JSON_EXTRACT(Properties, '$.MaxDrainDurationSeconds') as max_drain_duration_seconds
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NatGateway' ;
  - NetworkAcl:
      name: NetworkAcl
      id: aws.ec2.NetworkAcl
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkAcl' ;
  - NetworkAclEntry:
      name: NetworkAclEntry
      id: aws.ec2.NetworkAclEntry
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PortRange.From') as port_range_from,
              JSON_EXTRACT(Properties, '$.PortRange.To') as port_range_to,
              JSON_EXTRACT(Properties, '$.NetworkAclId') as network_acl_id,
              JSON_EXTRACT(Properties, '$.RuleAction') as rule_action,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.Egress') as egress,
              JSON_EXTRACT(Properties, '$.RuleNumber') as rule_number,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlock') as ipv6_cidr_block,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol,
              JSON_EXTRACT(Properties, '$.Icmp.Code') as icmp_code,
              JSON_EXTRACT(Properties, '$.Icmp.Type') as icmp_type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkAclEntry' ;
  - NetworkInsightsAccessScope:
      name: NetworkInsightsAccessScope
      id: aws.ec2.NetworkInsightsAccessScope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.NetworkInsightsAccessScopeId') as network_insights_access_scope_id,
              JSON_EXTRACT(Properties, '$.NetworkInsightsAccessScopeArn') as network_insights_access_scope_arn,
              JSON_EXTRACT(Properties, '$.CreatedDate') as created_date,
              JSON_EXTRACT(Properties, '$.UpdatedDate') as updated_date,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.MatchPaths') as match_paths,
              JSON_EXTRACT(Properties, '$.ExcludePaths') as exclude_paths
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInsightsAccessScope' ;
  - NetworkInsightsAccessScopeAnalysis:
      name: NetworkInsightsAccessScopeAnalysis
      id: aws.ec2.NetworkInsightsAccessScopeAnalysis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.NetworkInsightsAccessScopeAnalysisId') as network_insights_access_scope_analysis_id,
              JSON_EXTRACT(Properties, '$.NetworkInsightsAccessScopeAnalysisArn') as network_insights_access_scope_analysis_arn,
              JSON_EXTRACT(Properties, '$.NetworkInsightsAccessScopeId') as network_insights_access_scope_id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.StartDate') as start_date,
              JSON_EXTRACT(Properties, '$.EndDate') as end_date,
              JSON_EXTRACT(Properties, '$.FindingsFound') as findings_found,
              JSON_EXTRACT(Properties, '$.AnalyzedEniCount') as analyzed_eni_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInsightsAccessScopeAnalysis' ;
  - NetworkInsightsAnalysis:
      name: NetworkInsightsAnalysis
      id: aws.ec2.NetworkInsightsAnalysis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ReturnPathComponents') as return_path_components,
              JSON_EXTRACT(Properties, '$.NetworkInsightsAnalysisId') as network_insights_analysis_id,
              JSON_EXTRACT(Properties, '$.NetworkInsightsPathId') as network_insights_path_id,
              JSON_EXTRACT(Properties, '$.NetworkPathFound') as network_path_found,
              JSON_EXTRACT(Properties, '$.SuggestedAccounts') as suggested_accounts,
              JSON_EXTRACT(Properties, '$.FilterInArns') as filter_in_arns,
              JSON_EXTRACT(Properties, '$.NetworkInsightsAnalysisArn') as network_insights_analysis_arn,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.StartDate') as start_date,
              JSON_EXTRACT(Properties, '$.AlternatePathHints') as alternate_path_hints,
              JSON_EXTRACT(Properties, '$.Explanations') as explanations,
              JSON_EXTRACT(Properties, '$.ForwardPathComponents') as forward_path_components,
              JSON_EXTRACT(Properties, '$.AdditionalAccounts') as additional_accounts,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInsightsAnalysis' ;
  - NetworkInsightsPath:
      name: NetworkInsightsPath
      id: aws.ec2.NetworkInsightsPath
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Destination') as destination,
              JSON_EXTRACT(Properties, '$.NetworkInsightsPathId') as network_insights_path_id,
              JSON_EXTRACT(Properties, '$.NetworkInsightsPathArn') as network_insights_path_arn,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,
              JSON_EXTRACT(Properties, '$.CreatedDate') as created_date,
              JSON_EXTRACT(Properties, '$.DestinationArn') as destination_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInsightsPath' ;
  - NetworkInterfaceAttachment:
      name: NetworkInterfaceAttachment
      id: aws.ec2.NetworkInterfaceAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DeleteOnTermination') as delete_on_termination,
              JSON_EXTRACT(Properties, '$.DeviceIndex') as device_index,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInterfaceAttachment' ;
  - NetworkInterfacePermission:
      name: NetworkInterfacePermission
      id: aws.ec2.NetworkInterfacePermission
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.Permission') as permission
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkInterfacePermission' ;
  - NetworkPerformanceMetricSubscription:
      name: NetworkPerformanceMetricSubscription
      id: aws.ec2.NetworkPerformanceMetricSubscription
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.Destination') as destination,
              JSON_EXTRACT(Properties, '$.Metric') as metric,
              JSON_EXTRACT(Properties, '$.Statistic') as statistic
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::NetworkPerformanceMetricSubscription' ;
  - PlacementGroup:
      name: PlacementGroup
      id: aws.ec2.PlacementGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Strategy') as strategy,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.SpreadLevel') as spread_level,
              JSON_EXTRACT(Properties, '$.PartitionCount') as partition_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::PlacementGroup' ;
  - PrefixList:
      name: PrefixList
      id: aws.ec2.PrefixList
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.PrefixListName') as prefix_list_name,
              JSON_EXTRACT(Properties, '$.PrefixListId') as prefix_list_id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.AddressFamily') as address_family,
              JSON_EXTRACT(Properties, '$.MaxEntries') as max_entries,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Entries') as entries,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::PrefixList' ;
  - Route:
      name: Route
      id: aws.ec2.Route
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DestinationIpv6CidrBlock') as destination_ipv6_cidr_block,
              JSON_EXTRACT(Properties, '$.RouteTableId') as route_table_id,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.LocalGatewayId') as local_gateway_id,
              JSON_EXTRACT(Properties, '$.CarrierGatewayId') as carrier_gateway_id,
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block,
              JSON_EXTRACT(Properties, '$.GatewayId') as gateway_id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.VpcEndpointId') as vpc_endpoint_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.VpcPeeringConnectionId') as vpc_peering_connection_id,
              JSON_EXTRACT(Properties, '$.EgressOnlyInternetGatewayId') as egress_only_internet_gateway_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NatGatewayId') as nat_gateway_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::Route' ;
  - RouteTable:
      name: RouteTable
      id: aws.ec2.RouteTable
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.RouteTableId') as route_table_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::RouteTable' ;
  - SecurityGroup:
      name: SecurityGroup
      id: aws.ec2.SecurityGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.GroupDescription') as group_description,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SecurityGroupIngress') as security_group_ingress,
              JSON_EXTRACT(Properties, '$.SecurityGroupEgress') as security_group_egress,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SecurityGroup' ;
  - SecurityGroupEgress:
      name: SecurityGroupEgress
      id: aws.ec2.SecurityGroupEgress
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CidrIp') as cidr_ip,
              JSON_EXTRACT(Properties, '$.CidrIpv6') as cidr_ipv6,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DestinationPrefixListId') as destination_prefix_list_id,
              JSON_EXTRACT(Properties, '$.DestinationSecurityGroupId') as destination_security_group_id,
              JSON_EXTRACT(Properties, '$.FromPort') as from_port,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id,
              JSON_EXTRACT(Properties, '$.IpProtocol') as ip_protocol,
              JSON_EXTRACT(Properties, '$.ToPort') as to_port
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SecurityGroupEgress' ;
  - SecurityGroupIngress:
      name: SecurityGroupIngress
      id: aws.ec2.SecurityGroupIngress
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CidrIp') as cidr_ip,
              JSON_EXTRACT(Properties, '$.CidrIpv6') as cidr_ipv6,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FromPort') as from_port,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.IpProtocol') as ip_protocol,
              JSON_EXTRACT(Properties, '$.SourcePrefixListId') as source_prefix_list_id,
              JSON_EXTRACT(Properties, '$.SourceSecurityGroupId') as source_security_group_id,
              JSON_EXTRACT(Properties, '$.SourceSecurityGroupName') as source_security_group_name,
              JSON_EXTRACT(Properties, '$.SourceSecurityGroupOwnerId') as source_security_group_owner_id,
              JSON_EXTRACT(Properties, '$.ToPort') as to_port
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SecurityGroupIngress' ;
  - SpotFleet:
      name: SpotFleet
      id: aws.ec2.SpotFleet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.AllocationStrategy') as spot_fleet_request_config_data_allocation_strategy,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.Context') as spot_fleet_request_config_data_context,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.ExcessCapacityTerminationPolicy') as spot_fleet_request_config_data_excess_capacity_termination_policy,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.IamFleetRole') as spot_fleet_request_config_data_iam_fleet_role,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.InstanceInterruptionBehavior') as spot_fleet_request_config_data_instance_interruption_behavior,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.InstancePoolsToUseCount') as spot_fleet_request_config_data_instance_pools_to_use_count,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.LaunchSpecifications') as spot_fleet_request_config_data_launch_specifications,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.LaunchTemplateConfigs') as spot_fleet_request_config_data_launch_template_configs,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.LoadBalancersConfig') as spot_fleet_request_config_data_load_balancers_config,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.OnDemandAllocationStrategy') as spot_fleet_request_config_data_on_demand_allocation_strategy,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.OnDemandMaxTotalPrice') as spot_fleet_request_config_data_on_demand_max_total_price,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.OnDemandTargetCapacity') as spot_fleet_request_config_data_on_demand_target_capacity,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.ReplaceUnhealthyInstances') as spot_fleet_request_config_data_replace_unhealthy_instances,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.SpotMaintenanceStrategies') as spot_fleet_request_config_data_spot_maintenance_strategies,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.SpotMaxTotalPrice') as spot_fleet_request_config_data_spot_max_total_price,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.SpotPrice') as spot_fleet_request_config_data_spot_price,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.TargetCapacity') as spot_fleet_request_config_data_target_capacity,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.TerminateInstancesWithExpiration') as spot_fleet_request_config_data_terminate_instances_with_expiration,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.Type') as spot_fleet_request_config_data_type,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.ValidFrom') as spot_fleet_request_config_data_valid_from,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.ValidUntil') as spot_fleet_request_config_data_valid_until,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.TagSpecifications') as spot_fleet_request_config_data_tag_specifications,
              JSON_EXTRACT(Properties, '$.SpotFleetRequestConfigData.TargetCapacityUnitType') as spot_fleet_request_config_data_target_capacity_unit_type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SpotFleet' ;
  - Subnet:
      name: Subnet
      id: aws.ec2.Subnet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.AssignIpv6AddressOnCreation') as assign_ipv6_address_on_creation,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.MapPublicIpOnLaunch') as map_public_ip_on_launch,
              JSON_EXTRACT(Properties, '$.NetworkAclAssociationId') as network_acl_association_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.AvailabilityZoneId') as availability_zone_id,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlocks') as ipv6_cidr_blocks,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlock') as ipv6_cidr_block,
              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,
              JSON_EXTRACT(Properties, '$.Ipv6Native') as ipv6_native,
              JSON_EXTRACT(Properties, '$.EnableDns64') as enable_dns64,
              JSON_EXTRACT(Properties, '$.PrivateDnsNameOptionsOnLaunch') as private_dns_name_options_on_launch,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::Subnet' ;
  - SubnetCidrBlock:
      name: SubnetCidrBlock
      id: aws.ec2.SubnetCidrBlock
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlock') as ipv6_cidr_block,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SubnetCidrBlock' ;
  - SubnetNetworkAclAssociation:
      name: SubnetNetworkAclAssociation
      id: aws.ec2.SubnetNetworkAclAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.NetworkAclId') as network_acl_id,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SubnetNetworkAclAssociation' ;
  - SubnetRouteTableAssociation:
      name: SubnetRouteTableAssociation
      id: aws.ec2.SubnetRouteTableAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RouteTableId') as route_table_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::SubnetRouteTableAssociation' ;
  - TrafficMirrorFilter:
      name: TrafficMirrorFilter
      id: aws.ec2.TrafficMirrorFilter
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.NetworkServices') as network_services,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TrafficMirrorFilter' ;
  - TrafficMirrorFilterRule:
      name: TrafficMirrorFilterRule
      id: aws.ec2.TrafficMirrorFilterRule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DestinationPortRange.FromPort') as destination_port_range_from_port,
              JSON_EXTRACT(Properties, '$.DestinationPortRange.ToPort') as destination_port_range_to_port,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SourcePortRange.FromPort') as source_port_range_from_port,
              JSON_EXTRACT(Properties, '$.SourcePortRange.ToPort') as source_port_range_to_port,
              JSON_EXTRACT(Properties, '$.RuleAction') as rule_action,
              JSON_EXTRACT(Properties, '$.SourceCidrBlock') as source_cidr_block,
              JSON_EXTRACT(Properties, '$.RuleNumber') as rule_number,
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block,
              JSON_EXTRACT(Properties, '$.TrafficMirrorFilterId') as traffic_mirror_filter_id,
              JSON_EXTRACT(Properties, '$.TrafficDirection') as traffic_direction,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TrafficMirrorFilterRule' ;
  - TrafficMirrorSession:
      name: TrafficMirrorSession
      id: aws.ec2.TrafficMirrorSession
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TrafficMirrorTargetId') as traffic_mirror_target_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SessionNumber') as session_number,
              JSON_EXTRACT(Properties, '$.VirtualNetworkId') as virtual_network_id,
              JSON_EXTRACT(Properties, '$.PacketLength') as packet_length,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.TrafficMirrorFilterId') as traffic_mirror_filter_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TrafficMirrorSession' ;
  - TrafficMirrorTarget:
      name: TrafficMirrorTarget
      id: aws.ec2.TrafficMirrorTarget
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.NetworkLoadBalancerArn') as network_load_balancer_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.GatewayLoadBalancerEndpointId') as gateway_load_balancer_endpoint_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TrafficMirrorTarget' ;
  - TransitGateway:
      name: TransitGateway
      id: aws.ec2.TransitGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DefaultRouteTablePropagation') as default_route_table_propagation,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AutoAcceptSharedAttachments') as auto_accept_shared_attachments,
              JSON_EXTRACT(Properties, '$.DefaultRouteTableAssociation') as default_route_table_association,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.VpnEcmpSupport') as vpn_ecmp_support,
              JSON_EXTRACT(Properties, '$.DnsSupport') as dns_support,
              JSON_EXTRACT(Properties, '$.MulticastSupport') as multicast_support,
              JSON_EXTRACT(Properties, '$.AmazonSideAsn') as amazon_side_asn,
              JSON_EXTRACT(Properties, '$.TransitGatewayCidrBlocks') as transit_gateway_cidr_blocks,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AssociationDefaultRouteTableId') as association_default_route_table_id,
              JSON_EXTRACT(Properties, '$.PropagationDefaultRouteTableId') as propagation_default_route_table_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGateway' ;
  - TransitGatewayAttachment:
      name: TransitGatewayAttachment
      id: aws.ec2.TransitGatewayAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayAttachment' ;
  - TransitGatewayConnect:
      name: TransitGatewayConnect
      id: aws.ec2.TransitGatewayConnect
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id,
              JSON_EXTRACT(Properties, '$.TransportTransitGatewayAttachmentId') as transport_transit_gateway_attachment_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Options.Protocol') as options_protocol
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayConnect' ;
  - TransitGatewayMulticastDomain:
      name: TransitGatewayMulticastDomain
      id: aws.ec2.TransitGatewayMulticastDomain
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.TransitGatewayMulticastDomainId') as transit_gateway_multicast_domain_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayMulticastDomainArn') as transit_gateway_multicast_domain_arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayMulticastDomain' ;
  - TransitGatewayMulticastDomainAssociation:
      name: TransitGatewayMulticastDomainAssociation
      id: aws.ec2.TransitGatewayMulticastDomainAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.TransitGatewayMulticastDomainId') as transit_gateway_multicast_domain_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayMulticastDomainAssociation' ;
  - TransitGatewayMulticastGroupMember:
      name: TransitGatewayMulticastGroupMember
      id: aws.ec2.TransitGatewayMulticastGroupMember
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.GroupIpAddress') as group_ip_address,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayMulticastDomainId') as transit_gateway_multicast_domain_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.GroupMember') as group_member,
              JSON_EXTRACT(Properties, '$.GroupSource') as group_source,
              JSON_EXTRACT(Properties, '$.MemberType') as member_type,
              JSON_EXTRACT(Properties, '$.SourceType') as source_type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayMulticastGroupMember' ;
  - TransitGatewayMulticastGroupSource:
      name: TransitGatewayMulticastGroupSource
      id: aws.ec2.TransitGatewayMulticastGroupSource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.GroupIpAddress') as group_ip_address,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayMulticastDomainId') as transit_gateway_multicast_domain_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceId') as network_interface_id,
              JSON_EXTRACT(Properties, '$.GroupMember') as group_member,
              JSON_EXTRACT(Properties, '$.GroupSource') as group_source,
              JSON_EXTRACT(Properties, '$.MemberType') as member_type,
              JSON_EXTRACT(Properties, '$.SourceType') as source_type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayMulticastGroupSource' ;
  - TransitGatewayPeeringAttachment:
      name: TransitGatewayPeeringAttachment
      id: aws.ec2.TransitGatewayPeeringAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Status.Message') as status_message,
              JSON_EXTRACT(Properties, '$.Status.Code') as status_code,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.PeerTransitGatewayId') as peer_transit_gateway_id,
              JSON_EXTRACT(Properties, '$.PeerAccountId') as peer_account_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.PeerRegion') as peer_region,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayPeeringAttachment' ;
  - TransitGatewayRoute:
      name: TransitGatewayRoute
      id: aws.ec2.TransitGatewayRoute
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayRouteTableId') as transit_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block,
              JSON_EXTRACT(Properties, '$.Blackhole') as blackhole,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayRoute' ;
  - TransitGatewayRouteTable:
      name: TransitGatewayRouteTable
      id: aws.ec2.TransitGatewayRouteTable
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayRouteTable' ;
  - TransitGatewayRouteTableAssociation:
      name: TransitGatewayRouteTableAssociation
      id: aws.ec2.TransitGatewayRouteTableAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayRouteTableId') as transit_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayRouteTableAssociation' ;
  - TransitGatewayRouteTablePropagation:
      name: TransitGatewayRouteTablePropagation
      id: aws.ec2.TransitGatewayRouteTablePropagation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayRouteTableId') as transit_gateway_route_table_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayAttachmentId') as transit_gateway_attachment_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayRouteTablePropagation' ;
  - TransitGatewayVpcAttachment:
      name: TransitGatewayVpcAttachment
      id: aws.ec2.TransitGatewayVpcAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.AddSubnetIds') as add_subnet_ids,
              JSON_EXTRACT(Properties, '$.RemoveSubnetIds') as remove_subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::TransitGatewayVpcAttachment' ;
  - VolumeAttachment:
      name: VolumeAttachment
      id: aws.ec2.VolumeAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.VolumeId') as volume_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.Device') as device
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VolumeAttachment' ;
  - VPC:
      name: VPC
      id: aws.ec2.VPC
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.CidrBlockAssociations') as cidr_block_associations,
              JSON_EXTRACT(Properties, '$.DefaultNetworkAcl') as default_network_acl,
              JSON_EXTRACT(Properties, '$.DefaultSecurityGroup') as default_security_group,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlocks') as ipv6_cidr_blocks,
              JSON_EXTRACT(Properties, '$.EnableDnsHostnames') as enable_dns_hostnames,
              JSON_EXTRACT(Properties, '$.EnableDnsSupport') as enable_dns_support,
              JSON_EXTRACT(Properties, '$.InstanceTenancy') as instance_tenancy,
              JSON_EXTRACT(Properties, '$.Ipv4IpamPoolId') as ipv4_ipam_pool_id,
              JSON_EXTRACT(Properties, '$.Ipv4NetmaskLength') as ipv4_netmask_length,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPC' ;
  - VPCCidrBlock:
      name: VPCCidrBlock
      id: aws.ec2.VPCCidrBlock
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Ipv6NetmaskLength') as ipv6_netmask_length,
              JSON_EXTRACT(Properties, '$.Ipv6IpamPoolId') as ipv6_ipam_pool_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Ipv4NetmaskLength') as ipv4_netmask_length,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.Ipv4IpamPoolId') as ipv4_ipam_pool_id,
              JSON_EXTRACT(Properties, '$.Ipv6Pool') as ipv6_pool,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Ipv6CidrBlock') as ipv6_cidr_block,
              JSON_EXTRACT(Properties, '$.AmazonProvidedIpv6CidrBlock') as amazon_provided_ipv6_cidr_block
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCCidrBlock' ;
  - VPCDHCPOptionsAssociation:
      name: VPCDHCPOptionsAssociation
      id: aws.ec2.VPCDHCPOptionsAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DhcpOptionsId') as dhcp_options_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCDHCPOptionsAssociation' ;
  - VPCEndpoint:
      name: VPCEndpoint
      id: aws.ec2.VPCEndpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CreationTimestamp') as creation_timestamp,
              JSON_EXTRACT(Properties, '$.DnsEntries') as dns_entries,
              JSON_EXTRACT(Properties, '$.NetworkInterfaceIds') as network_interface_ids,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.PrivateDnsEnabled') as private_dns_enabled,
              JSON_EXTRACT(Properties, '$.RouteTableIds') as route_table_ids,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.ServiceName') as service_name,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.VpcEndpointType') as vpc_endpoint_type,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCEndpoint' ;
  - VPCEndpointConnectionNotification:
      name: VPCEndpointConnectionNotification
      id: aws.ec2.VPCEndpointConnectionNotification
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ConnectionEvents') as connection_events,
              JSON_EXTRACT(Properties, '$.VPCEndpointId') as v_pc_endpoint_id,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id,
              JSON_EXTRACT(Properties, '$.ConnectionNotificationArn') as connection_notification_arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCEndpointConnectionNotification' ;
  - VPCEndpointService:
      name: VPCEndpointService
      id: aws.ec2.VPCEndpointService
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.NetworkLoadBalancerArns') as network_load_balancer_arns,
              JSON_EXTRACT(Properties, '$.ContributorInsightsEnabled') as contributor_insights_enabled,
              JSON_EXTRACT(Properties, '$.PayerResponsibility') as payer_responsibility,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id,
              JSON_EXTRACT(Properties, '$.AcceptanceRequired') as acceptance_required,
              JSON_EXTRACT(Properties, '$.GatewayLoadBalancerArns') as gateway_load_balancer_arns
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCEndpointService' ;
  - VPCEndpointServicePermissions:
      name: VPCEndpointServicePermissions
      id: aws.ec2.VPCEndpointServicePermissions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AllowedPrincipals') as allowed_principals,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCEndpointServicePermissions' ;
  - VPCGatewayAttachment:
      name: VPCGatewayAttachment
      id: aws.ec2.VPCGatewayAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.InternetGatewayId') as internet_gateway_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.VpnGatewayId') as vpn_gateway_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCGatewayAttachment' ;
  - VPCPeeringConnection:
      name: VPCPeeringConnection
      id: aws.ec2.VPCPeeringConnection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PeerOwnerId') as peer_owner_id,
              JSON_EXTRACT(Properties, '$.PeerRegion') as peer_region,
              JSON_EXTRACT(Properties, '$.PeerRoleArn') as peer_role_arn,
              JSON_EXTRACT(Properties, '$.PeerVpcId') as peer_vpc_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPCPeeringConnection' ;
  - VPNConnection:
      name: VPNConnection
      id: aws.ec2.VPNConnection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.VpnConnectionId') as vpn_connection_id,
              JSON_EXTRACT(Properties, '$.CustomerGatewayId') as customer_gateway_id,
              JSON_EXTRACT(Properties, '$.StaticRoutesOnly') as static_routes_only,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TransitGatewayId') as transit_gateway_id,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.VpnGatewayId') as vpn_gateway_id,
              JSON_EXTRACT(Properties, '$.VpnTunnelOptionsSpecifications') as vpn_tunnel_options_specifications
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPNConnection' ;
  - VPNConnectionRoute:
      name: VPNConnectionRoute
      id: aws.ec2.VPNConnectionRoute
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.DestinationCidrBlock') as destination_cidr_block,
              JSON_EXTRACT(Properties, '$.VpnConnectionId') as vpn_connection_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPNConnectionRoute' ;
  - VPNGateway:
      name: VPNGateway
      id: aws.ec2.VPNGateway
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.VPNGatewayId') as v_pn_gateway_id,
              JSON_EXTRACT(Properties, '$.AmazonSideAsn') as amazon_side_asn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPNGateway' ;
  - VPNGatewayRoutePropagation:
      name: VPNGatewayRoutePropagation
      id: aws.ec2.VPNGatewayRoutePropagation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RouteTableIds') as route_table_ids,
              JSON_EXTRACT(Properties, '$.VpnGatewayId') as vpn_gateway_id
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::EC2::VPNGatewayRoutePropagation' ;
