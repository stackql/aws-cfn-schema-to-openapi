openapi: 3.0.0
info:
  title: MediaConnect
  version: 1.0.0
paths: {}
components:
  schemas:
    Source:
      description: The settings for the source of the flow.
      type: object
      properties:
        SourceArn:
          type: string
          description: The ARN of the source.
        Decryption:
          $ref: '#/components/schemas/Encryption'
          description: >-
            The type of decryption that is used on the content ingested from
            this source.
        Description:
          type: string
          description: >-
            A description for the source. This value is not used or seen outside
            of the current AWS Elemental MediaConnect account.
        EntitlementArn:
          type: string
          description: >-
            The ARN of the entitlement that allows you to subscribe to content
            that comes from another AWS account. The entitlement is set by the
            content originator and the ARN is generated as part of the
            originator's flow.
        IngestIp:
          type: string
          description: >-
            The IP address that the flow will be listening on for incoming
            content.
        IngestPort:
          type: integer
          description: The port that the flow will be listening on for incoming content.
        MaxBitrate:
          type: integer
          description: The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
        MaxLatency:
          type: integer
          description: >-
            The maximum latency in milliseconds. This parameter applies only to
            RIST-based and Zixi-based streams.
          default: 2000
        MinLatency:
          type: integer
          description: The minimum latency in milliseconds.
          default: 2000
        Name:
          type: string
          description: The name of the source.
        Protocol:
          type: string
          enum:
            - zixi-push
            - rtp-fec
            - rtp
            - rist
            - fujitsu-qos
            - srt-listener
            - srt-caller
          description: The protocol that is used by the source.
        SenderIpAddress:
          type: string
          description: >-
            The IP address that the flow communicates with to initiate
            connection with the sender for fujitsu-qos protocol.
        SenderControlPort:
          type: integer
          description: >-
            The port that the flow uses to send outbound requests to initiate
            connection with the sender for fujitsu-qos protocol.
        StreamId:
          type: string
          description: >-
            The stream ID that you want to use for this transport. This
            parameter applies only to Zixi-based streams.
        SourceIngestPort:
          type: string
          description: >-
            The port that the flow will be listening on for incoming
            content.(ReadOnly)
        SourceListenerAddress:
          type: string
          description: Source IP or domain name for SRT-caller protocol.
        SourceListenerPort:
          type: integer
          description: Source port for SRT-caller protocol.
        VpcInterfaceName:
          type: string
          description: The name of the VPC Interface this Source is configured with.
        WhitelistCidr:
          type: string
          description: >-
            The range of IP addresses that should be allowed to contribute
            content to your source. These IP addresses should be in the form of
            a Classless Inter-Domain Routing (CIDR) block; for example,
            10.0.0.0/16.
      additionalProperties: false
    Encryption:
      type: object
      description: Information about the encryption of the flow.
      properties:
        Algorithm:
          type: string
          enum:
            - aes128
            - aes192
            - aes256
          description: >-
            The type of algorithm that is used for the encryption (such as
            aes128, aes192, or aes256).
        ConstantInitializationVector:
          type: string
          description: >-
            A 128-bit, 16-byte hex value represented by a 32-character string,
            to be used with the key for encrypting content. This parameter is
            not valid for static key encryption.
        DeviceId:
          type: string
          description: >-
            The value of one of the devices that you configured with your
            digital rights management (DRM) platform key provider. This
            parameter is required for SPEKE encryption and is not valid for
            static key encryption.
        KeyType:
          type: string
          enum:
            - speke
            - static-key
          description: >-
            The type of key that is used for the encryption. If no keyType is
            provided, the service will use the default setting (static-key).
          default: static-key
        Region:
          type: string
          description: >-
            The AWS Region that the API Gateway proxy endpoint was created in.
            This parameter is required for SPEKE encryption and is not valid for
            static key encryption.
        ResourceId:
          type: string
          description: >-
            An identifier for the content. The service sends this value to the
            key server to identify the current endpoint. The resource ID is also
            known as the content ID. This parameter is required for SPEKE
            encryption and is not valid for static key encryption.
        RoleArn:
          type: string
          description: >-
            The ARN of the role that you created during setup (when you set up
            AWS Elemental MediaConnect as a trusted entity).
        SecretArn:
          type: string
          description: ' The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.'
        Url:
          type: string
          description: >-
            The URL from the API Gateway proxy that you set up to talk to your
            key server. This parameter is required for SPEKE encryption and is
            not valid for static key encryption.
      additionalProperties: false
      required:
        - Algorithm
        - RoleArn
    FailoverConfig:
      type: object
      description: The settings for source failover
      properties:
        State:
          type: string
          enum:
            - ENABLED
            - DISABLED
        RecoveryWindow:
          type: integer
          description: Search window time to look for dash-7 packets
        FailoverMode:
          type: string
          description: >-
            The type of failover you choose for this flow. MERGE combines the
            source streams into a single stream, allowing graceful recovery from
            any single-source loss. FAILOVER allows switching between different
            streams.
          enum:
            - MERGE
            - FAILOVER
        SourcePriority:
          type: object
          description: >-
            The priority you want to assign to a source. You can have a primary
            stream and a backup stream or two equally prioritized streams.
          properties:
            PrimarySource:
              type: string
              description: >-
                The name of the source you choose as the primary source for this
                flow.
          required:
            - PrimarySource
          additionalProperties: false
      additionalProperties: false
    Flow:
      type: object
      properties:
        FlowArn:
          description: >-
            The Amazon Resource Name (ARN), a unique identifier for any AWS
            resource, of the flow.
          type: string
          x-is-top-level-property: true
        Name:
          description: The name of the flow.
          type: string
          x-is-top-level-property: true
        AvailabilityZone:
          description: >-
            The Availability Zone that you want to create the flow in. These
            options are limited to the Availability Zones within the current
            AWS.
          type: string
          x-is-top-level-property: true
        FlowAvailabilityZone:
          description: >-
            The Availability Zone that you want to create the flow in. These
            options are limited to the Availability Zones within the current
            AWS.(ReadOnly)
          type: string
          x-is-top-level-property: true
        Source:
          description: The source of the flow.
          $ref: '#/components/schemas/Source'
          x-is-top-level-property: true
        SourceFailoverConfig:
          description: The source failover config of the flow.
          $ref: '#/components/schemas/FailoverConfig'
          x-is-top-level-property: true
      required:
        - Name
        - Source
      x-stackql-resource-name: Flow
    FlowEntitlement:
      type: object
      properties:
        FlowArn:
          type: string
          description: The ARN of the flow.
          x-is-top-level-property: true
        EntitlementArn:
          type: string
          description: The ARN of the entitlement.
          x-is-top-level-property: true
        DataTransferSubscriberFeePercent:
          type: integer
          default: 0
          description: >-
            Percentage from 0-100 of the data transfer cost to be billed to the
            subscriber.
          x-is-top-level-property: true
        Description:
          type: string
          description: A description of the entitlement.
          x-is-top-level-property: true
        Encryption:
          $ref: '#/components/schemas/Encryption'
          description: >-
            The type of encryption that will be used on the output that is
            associated with this entitlement.
          x-is-top-level-property: true
        EntitlementStatus:
          type: string
          description: ' An indication of whether the entitlement is enabled.'
          enum:
            - ENABLED
            - DISABLED
          x-is-top-level-property: true
        Name:
          type: string
          description: The name of the entitlement.
          x-is-top-level-property: true
        Subscribers:
          type: array
          description: >-
            The AWS account IDs that you want to share your content with. The
            receiving accounts (subscribers) will be allowed to create their own
            flow using your content as the source.
          items:
            type: string
          x-is-top-level-property: true
      required:
        - FlowArn
        - Name
        - Subscribers
        - Description
      x-stackql-resource-name: FlowEntitlement
    VpcInterfaceAttachment:
      type: object
      description: The settings for attaching a VPC interface to an output.
      properties:
        VpcInterfaceName:
          type: string
          description: The name of the VPC interface to use for this output.
      additionalProperties: false
    FlowOutput:
      type: object
      properties:
        FlowArn:
          description: >-
            The Amazon Resource Name (ARN), a unique identifier for any AWS
            resource, of the flow.
          type: string
          x-is-top-level-property: true
        OutputArn:
          description: The ARN of the output.
          type: string
          x-is-top-level-property: true
        CidrAllowList:
          type: array
          description: >-
            The range of IP addresses that should be allowed to initiate output
            requests to this flow. These IP addresses should be in the form of a
            Classless Inter-Domain Routing (CIDR) block; for example,
            10.0.0.0/16.
          items:
            type: string
          x-is-top-level-property: true
        Encryption:
          $ref: '#/components/schemas/Encryption'
          description: >-
            The type of key used for the encryption. If no keyType is provided,
            the service will use the default setting (static-key).
          x-is-top-level-property: true
        Description:
          type: string
          description: A description of the output.
          x-is-top-level-property: true
        Destination:
          type: string
          description: The address where you want to send the output.
          x-is-top-level-property: true
        MaxLatency:
          type: integer
          description: >-
            The maximum latency in milliseconds. This parameter applies only to
            RIST-based and Zixi-based streams.
          x-is-top-level-property: true
        MinLatency:
          type: integer
          description: The minimum latency in milliseconds.
          x-is-top-level-property: true
        Name:
          type: string
          description: >-
            The name of the output. This value must be unique within the current
            flow.
          x-is-top-level-property: true
        Port:
          type: integer
          description: The port to use when content is distributed to this output.
          x-is-top-level-property: true
        Protocol:
          type: string
          enum:
            - zixi-push
            - rtp-fec
            - rtp
            - zixi-pull
            - rist
            - fujitsu-qos
            - srt-listener
            - srt-caller
          description: The protocol that is used by the source or output.
          x-is-top-level-property: true
        RemoteId:
          type: string
          description: The remote ID for the Zixi-pull stream.
          x-is-top-level-property: true
        SmoothingLatency:
          type: integer
          description: >-
            The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC
            streams.
          x-is-top-level-property: true
        StreamId:
          type: string
          description: >-
            The stream ID that you want to use for this transport. This
            parameter applies only to Zixi-based streams.
          x-is-top-level-property: true
        VpcInterfaceAttachment:
          $ref: '#/components/schemas/VpcInterfaceAttachment'
          description: The name of the VPC interface attachment to use for this output.
          x-is-top-level-property: true
      required:
        - FlowArn
        - Protocol
      x-stackql-resource-name: FlowOutput
    FlowSource:
      type: object
      properties:
        FlowArn:
          type: string
          description: The ARN of the flow.
          x-is-top-level-property: true
        SourceArn:
          type: string
          description: The ARN of the source.
          x-is-top-level-property: true
        Decryption:
          $ref: '#/components/schemas/Encryption'
          description: >-
            The type of encryption that is used on the content ingested from
            this source.
          x-is-top-level-property: true
        Description:
          type: string
          description: >-
            A description for the source. This value is not used or seen outside
            of the current AWS Elemental MediaConnect account.
          x-is-top-level-property: true
        EntitlementArn:
          type: string
          description: >-
            The ARN of the entitlement that allows you to subscribe to content
            that comes from another AWS account. The entitlement is set by the
            content originator and the ARN is generated as part of the
            originator's flow.
          x-is-top-level-property: true
        IngestIp:
          type: string
          description: >-
            The IP address that the flow will be listening on for incoming
            content.
          x-is-top-level-property: true
        IngestPort:
          type: integer
          description: The port that the flow will be listening on for incoming content.
          x-is-top-level-property: true
        MaxBitrate:
          type: integer
          description: The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
          x-is-top-level-property: true
        MaxLatency:
          type: integer
          description: >-
            The maximum latency in milliseconds. This parameter applies only to
            RIST-based and Zixi-based streams.
          default: 2000
          x-is-top-level-property: true
        Name:
          type: string
          description: The name of the source.
          x-is-top-level-property: true
        Protocol:
          type: string
          enum:
            - zixi-push
            - rtp-fec
            - rtp
            - rist
          description: The protocol that is used by the source.
          x-is-top-level-property: true
        StreamId:
          type: string
          description: >-
            The stream ID that you want to use for this transport. This
            parameter applies only to Zixi-based streams.
          x-is-top-level-property: true
        SourceIngestPort:
          type: string
          description: >-
            The port that the flow will be listening on for incoming
            content.(ReadOnly)
          x-is-top-level-property: true
        VpcInterfaceName:
          type: string
          description: The name of the VPC Interface this Source is configured with.
          x-is-top-level-property: true
        WhitelistCidr:
          type: string
          description: >-
            The range of IP addresses that should be allowed to contribute
            content to your source. These IP addresses should be in the form of
            a Classless Inter-Domain Routing (CIDR) block; for example,
            10.0.0.0/16.
          x-is-top-level-property: true
      required:
        - Name
        - Description
      x-stackql-resource-name: FlowSource
    FlowVpcInterface:
      type: object
      properties:
        FlowArn:
          type: string
          description: >-
            The Amazon Resource Name (ARN), a unique identifier for any AWS
            resource, of the flow.
          x-is-top-level-property: true
        Name:
          type: string
          description: >-
            Immutable and has to be a unique against other VpcInterfaces in this
            Flow.
          x-is-top-level-property: true
        RoleArn:
          type: string
          description: >-
            Role Arn MediaConnect can assumes to create ENIs in customer's
            account.
          x-is-top-level-property: true
        SecurityGroupIds:
          type: array
          description: Security Group IDs to be used on ENI.
          items:
            type: string
          x-is-top-level-property: true
        SubnetId:
          type: string
          description: Subnet must be in the AZ of the Flow
          x-is-top-level-property: true
        NetworkInterfaceIds:
          type: array
          description: >-
            IDs of the network interfaces created in customer's account by
            MediaConnect.
          items:
            type: string
          x-is-top-level-property: true
      required:
        - FlowArn
        - Name
        - RoleArn
        - SubnetId
        - SecurityGroupIds
      x-stackql-resource-name: FlowVpcInterface
x-stackql-views:
  - Flow:
      name: Flow
      id: aws.mediaconnect.Flow
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.AvailabilityZone') as
              availability_zone,

              JSON_EXTRACT(Properties, '$.FlowAvailabilityZone') as
              flow_availability_zone,

              JSON_EXTRACT(Properties, '$.Source.SourceArn') as
              source_source_arn,

              JSON_EXTRACT(Properties, '$.Source.Decryption') as
              source_decryption,

              JSON_EXTRACT(Properties, '$.Source.Description') as
              source_description,

              JSON_EXTRACT(Properties, '$.Source.EntitlementArn') as
              source_entitlement_arn,

              JSON_EXTRACT(Properties, '$.Source.IngestIp') as source_ingest_ip,

              JSON_EXTRACT(Properties, '$.Source.IngestPort') as
              source_ingest_port,

              JSON_EXTRACT(Properties, '$.Source.MaxBitrate') as
              source_max_bitrate,

              JSON_EXTRACT(Properties, '$.Source.MaxLatency') as
              source_max_latency,

              JSON_EXTRACT(Properties, '$.Source.MinLatency') as
              source_min_latency,

              JSON_EXTRACT(Properties, '$.Source.Name') as source_name,

              JSON_EXTRACT(Properties, '$.Source.Protocol') as source_protocol,

              JSON_EXTRACT(Properties, '$.Source.SenderIpAddress') as
              source_sender_ip_address,

              JSON_EXTRACT(Properties, '$.Source.SenderControlPort') as
              source_sender_control_port,

              JSON_EXTRACT(Properties, '$.Source.StreamId') as source_stream_id,

              JSON_EXTRACT(Properties, '$.Source.SourceIngestPort') as
              source_source_ingest_port,

              JSON_EXTRACT(Properties, '$.Source.SourceListenerAddress') as
              source_source_listener_address,

              JSON_EXTRACT(Properties, '$.Source.SourceListenerPort') as
              source_source_listener_port,

              JSON_EXTRACT(Properties, '$.Source.VpcInterfaceName') as
              source_vpc_interface_name,

              JSON_EXTRACT(Properties, '$.Source.WhitelistCidr') as
              source_whitelist_cidr,

              JSON_EXTRACT(Properties, '$.SourceFailoverConfig.State') as
              source_failover_config_state,

              JSON_EXTRACT(Properties, '$.SourceFailoverConfig.RecoveryWindow')
              as source_failover_config_recovery_window,

              JSON_EXTRACT(Properties, '$.SourceFailoverConfig.FailoverMode') as
              source_failover_config_failover_mode,

              JSON_EXTRACT(Properties, '$.SourceFailoverConfig.SourcePriority')
              as source_failover_config_source_priority

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::MediaConnect::Flow' ;
  - FlowEntitlement:
      name: FlowEntitlement
      id: aws.mediaconnect.FlowEntitlement
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,

              JSON_EXTRACT(Properties, '$.EntitlementArn') as entitlement_arn,

              JSON_EXTRACT(Properties, '$.DataTransferSubscriberFeePercent') as
              data_transfer_subscriber_fee_percent,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Encryption.Algorithm') as
              encryption_algorithm,

              JSON_EXTRACT(Properties,
              '$.Encryption.ConstantInitializationVector') as
              encryption_constant_initialization_vector,

              JSON_EXTRACT(Properties, '$.Encryption.DeviceId') as
              encryption_device_id,

              JSON_EXTRACT(Properties, '$.Encryption.KeyType') as
              encryption_key_type,

              JSON_EXTRACT(Properties, '$.Encryption.Region') as
              encryption_region,

              JSON_EXTRACT(Properties, '$.Encryption.ResourceId') as
              encryption_resource_id,

              JSON_EXTRACT(Properties, '$.Encryption.RoleArn') as
              encryption_role_arn,

              JSON_EXTRACT(Properties, '$.Encryption.SecretArn') as
              encryption_secret_arn,

              JSON_EXTRACT(Properties, '$.Encryption.Url') as encryption_url,

              JSON_EXTRACT(Properties, '$.EntitlementStatus') as
              entitlement_status,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Subscribers') as subscribers

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::MediaConnect::FlowEntitlement' ;
  - FlowOutput:
      name: FlowOutput
      id: aws.mediaconnect.FlowOutput
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,

              JSON_EXTRACT(Properties, '$.OutputArn') as output_arn,

              JSON_EXTRACT(Properties, '$.CidrAllowList') as cidr_allow_list,

              JSON_EXTRACT(Properties, '$.Encryption.Algorithm') as
              encryption_algorithm,

              JSON_EXTRACT(Properties,
              '$.Encryption.ConstantInitializationVector') as
              encryption_constant_initialization_vector,

              JSON_EXTRACT(Properties, '$.Encryption.DeviceId') as
              encryption_device_id,

              JSON_EXTRACT(Properties, '$.Encryption.KeyType') as
              encryption_key_type,

              JSON_EXTRACT(Properties, '$.Encryption.Region') as
              encryption_region,

              JSON_EXTRACT(Properties, '$.Encryption.ResourceId') as
              encryption_resource_id,

              JSON_EXTRACT(Properties, '$.Encryption.RoleArn') as
              encryption_role_arn,

              JSON_EXTRACT(Properties, '$.Encryption.SecretArn') as
              encryption_secret_arn,

              JSON_EXTRACT(Properties, '$.Encryption.Url') as encryption_url,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Destination') as destination,

              JSON_EXTRACT(Properties, '$.MaxLatency') as max_latency,

              JSON_EXTRACT(Properties, '$.MinLatency') as min_latency,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Port') as port,

              JSON_EXTRACT(Properties, '$.Protocol') as protocol,

              JSON_EXTRACT(Properties, '$.RemoteId') as remote_id,

              JSON_EXTRACT(Properties, '$.SmoothingLatency') as
              smoothing_latency,

              JSON_EXTRACT(Properties, '$.StreamId') as stream_id,

              JSON_EXTRACT(Properties,
              '$.VpcInterfaceAttachment.VpcInterfaceName') as
              vpc_interface_attachment_vpc_interface_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::MediaConnect::FlowOutput' ;
  - FlowSource:
      name: FlowSource
      id: aws.mediaconnect.FlowSource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,

              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,

              JSON_EXTRACT(Properties, '$.Decryption.Algorithm') as
              decryption_algorithm,

              JSON_EXTRACT(Properties,
              '$.Decryption.ConstantInitializationVector') as
              decryption_constant_initialization_vector,

              JSON_EXTRACT(Properties, '$.Decryption.DeviceId') as
              decryption_device_id,

              JSON_EXTRACT(Properties, '$.Decryption.KeyType') as
              decryption_key_type,

              JSON_EXTRACT(Properties, '$.Decryption.Region') as
              decryption_region,

              JSON_EXTRACT(Properties, '$.Decryption.ResourceId') as
              decryption_resource_id,

              JSON_EXTRACT(Properties, '$.Decryption.RoleArn') as
              decryption_role_arn,

              JSON_EXTRACT(Properties, '$.Decryption.SecretArn') as
              decryption_secret_arn,

              JSON_EXTRACT(Properties, '$.Decryption.Url') as decryption_url,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.EntitlementArn') as entitlement_arn,

              JSON_EXTRACT(Properties, '$.IngestIp') as ingest_ip,

              JSON_EXTRACT(Properties, '$.IngestPort') as ingest_port,

              JSON_EXTRACT(Properties, '$.MaxBitrate') as max_bitrate,

              JSON_EXTRACT(Properties, '$.MaxLatency') as max_latency,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Protocol') as protocol,

              JSON_EXTRACT(Properties, '$.StreamId') as stream_id,

              JSON_EXTRACT(Properties, '$.SourceIngestPort') as
              source_ingest_port,

              JSON_EXTRACT(Properties, '$.VpcInterfaceName') as
              vpc_interface_name,

              JSON_EXTRACT(Properties, '$.WhitelistCidr') as whitelist_cidr

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::MediaConnect::FlowSource' ;
  - FlowVpcInterface:
      name: FlowVpcInterface
      id: aws.mediaconnect.FlowVpcInterface
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as
              security_group_ids,

              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,

              JSON_EXTRACT(Properties, '$.NetworkInterfaceIds') as
              network_interface_ids

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::MediaConnect::FlowVpcInterface' ;
