openapi: 3.0.0
info:
  title: Lightsail
  version: 1.0.0
paths: {}
components:
  schemas:
    Alarm:
      type: object
      properties:
        AlarmName:
          description: >-
            The name for the alarm. Specify the name of an existing alarm to
            update, and overwrite the previous configuration of the alarm.
          type: string
          pattern: \w[\w\-]*\w
          x-is-top-level-property: true
        MonitoredResourceName:
          description: The validation status of the SSL/TLS certificate.
          type: string
          x-is-top-level-property: true
        MetricName:
          description: The name of the metric to associate with the alarm.
          type: string
          x-is-top-level-property: true
        ComparisonOperator:
          description: >-
            The arithmetic operation to use when comparing the specified
            statistic to the threshold. The specified statistic value is used as
            the first operand.
          type: string
          x-is-top-level-property: true
        ContactProtocols:
          description: >-
            The contact protocols to use for the alarm, such as Email, SMS (text
            messaging), or both.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        AlarmArn:
          type: string
          x-is-top-level-property: true
        DatapointsToAlarm:
          description: >-
            The number of data points that must be not within the specified
            threshold to trigger the alarm. If you are setting an "M out of N"
            alarm, this value (datapointsToAlarm) is the M.
          type: integer
          x-is-top-level-property: true
        EvaluationPeriods:
          description: >-
            The number of most recent periods over which data is compared to the
            specified threshold. If you are setting an "M out of N" alarm, this
            value (evaluationPeriods) is the N.
          type: integer
          x-is-top-level-property: true
        NotificationEnabled:
          description: >-
            Indicates whether the alarm is enabled. Notifications are enabled by
            default if you don't specify this parameter.
          type: boolean
          x-is-top-level-property: true
        NotificationTriggers:
          description: The alarm states that trigger a notification.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        Threshold:
          description: The value against which the specified statistic is compared.
          type: number
          x-is-top-level-property: true
        TreatMissingData:
          description: Sets how this alarm will handle missing data points.
          type: string
          x-is-top-level-property: true
        State:
          description: The current state of the alarm.
          type: string
          x-is-top-level-property: true
      required:
        - AlarmName
        - MonitoredResourceName
        - MetricName
        - ComparisonOperator
        - EvaluationPeriods
        - Threshold
      x-stackql-resource-name: Alarm
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: >-
            The key name of the tag. You can specify a value that is 1 to 128
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -.
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: >-
            The value for the tag. You can specify a value that is 0 to 256
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -.
          minLength: 0
          maxLength: 256
      required:
        - Key
      additionalProperties: false
    AccessRules:
      description: >-
        An object that sets the public accessibility of objects in the specified
        bucket.
      type: object
      properties:
        GetObject:
          type: string
          description: Specifies the anonymous access to all objects in a bucket.
        AllowPublicOverrides:
          type: boolean
          description: >-
            A Boolean value that indicates whether the access control list (ACL)
            permissions that are applied to individual objects override the
            getObject option that is currently specified.
      additionalProperties: false
    Bucket:
      type: object
      properties:
        BucketName:
          description: The name for the bucket.
          type: string
          pattern: ^[a-z0-9][a-z0-9-]{1,52}[a-z0-9]$
          minLength: 3
          maxLength: 54
          x-is-top-level-property: true
        BundleId:
          description: The ID of the bundle to use for the bucket.
          type: string
          x-is-top-level-property: true
        BucketArn:
          type: string
          x-is-top-level-property: true
        ObjectVersioning:
          description: >-
            Specifies whether to enable or disable versioning of objects in the
            bucket.
          type: boolean
          x-is-top-level-property: true
        AccessRules:
          $ref: '#/components/schemas/AccessRules'
          x-is-top-level-property: true
        ResourcesReceivingAccess:
          description: The names of the Lightsail resources for which to set bucket access.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        ReadOnlyAccessAccounts:
          description: >-
            An array of strings to specify the AWS account IDs that can access
            the bucket.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        Url:
          description: The URL of the bucket.
          type: string
          x-is-top-level-property: true
        AbleToUpdateBundle:
          description: >-
            Indicates whether the bundle that is currently applied to a bucket
            can be changed to another bundle. You can update a bucket's bundle
            only one time within a monthly AWS billing cycle.
          type: boolean
          x-is-top-level-property: true
      required:
        - BucketName
        - BundleId
      x-stackql-resource-name: Bucket
    Certificate:
      type: object
      properties:
        CertificateName:
          description: The name for the certificate.
          type: string
          x-is-top-level-property: true
        DomainName:
          description: The domain name (e.g., example.com ) for the certificate.
          type: string
          x-is-top-level-property: true
        SubjectAlternativeNames:
          description: >-
            An array of strings that specify the alternate domains (e.g.,
            example2.com) and subdomains (e.g., blog.example.com) for the
            certificate.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        CertificateArn:
          type: string
          x-is-top-level-property: true
        Status:
          description: The validation status of the certificate.
          type: string
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required:
        - CertificateName
        - DomainName
      x-stackql-resource-name: Certificate
    HealthCheckConfig:
      description: >-
        Describes the health check configuration of an Amazon Lightsail
        container service.
      type: object
      properties:
        HealthyThreshold:
          type: integer
          description: >-
            The number of consecutive health checks successes required before
            moving the container to the Healthy state. The default value is 2.
        IntervalSeconds:
          type: integer
          description: >-
            The approximate interval, in seconds, between health checks of an
            individual container. You can specify between 5 and 300 seconds. The
            default value is 5.
        Path:
          type: string
          description: >-
            The path on the container on which to perform the health check. The
            default value is /.
        SuccessCodes:
          type: string
          description: >-
            The HTTP codes to use when checking for a successful response from a
            container. You can specify values between 200 and 499. You can
            specify multiple values (for example, 200,202) or a range of values
            (for example, 200-299).
        TimeoutSeconds:
          type: integer
          description: >-
            The amount of time, in seconds, during which no response means a
            failed health check. You can specify between 2 and 60 seconds. The
            default value is 2.
        UnhealthyThreshold:
          type: integer
          description: >-
            The number of consecutive health check failures required before
            moving the container to the Unhealthy state. The default value is 2.
      additionalProperties: false
    PublicEndpoint:
      description: >-
        Describes the settings of a public endpoint for an Amazon Lightsail
        container service.
      type: object
      properties:
        ContainerName:
          type: string
          description: The name of the container for the endpoint.
        ContainerPort:
          type: integer
          description: The port of the container to which traffic is forwarded to.
        HealthCheckConfig:
          $ref: '#/components/schemas/HealthCheckConfig'
          description: >-
            An object that describes the health check configuration of the
            container.
      additionalProperties: false
    EnvironmentVariable:
      type: object
      properties:
        Variable:
          type: string
        Value:
          type: string
      additionalProperties: false
    PortInfo:
      type: object
      properties:
        Port:
          type: string
        Protocol:
          type: string
      additionalProperties: false
    Container:
      type: object
      properties:
        ServiceName:
          description: The name for the container service.
          type: string
          pattern: ^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$
          minLength: 1
          maxLength: 63
          x-is-top-level-property: true
        Power:
          description: The power specification for the container service.
          type: string
          x-is-top-level-property: true
        ContainerArn:
          type: string
          x-is-top-level-property: true
        Scale:
          description: The scale specification for the container service.
          type: integer
          minimum: 1
          maximum: 20
          x-is-top-level-property: true
        PublicDomainNames:
          description: >-
            The public domain names to use with the container service, such as
            example.com and www.example.com.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PublicDomainName'
          x-is-top-level-property: true
        ContainerServiceDeployment:
          $ref: '#/components/schemas/ContainerServiceDeployment'
          description: >-
            Describes a container deployment configuration of an Amazon
            Lightsail container service.
          x-is-top-level-property: true
        IsDisabled:
          description: >-
            A Boolean value to indicate whether the container service is
            disabled.
          type: boolean
          x-is-top-level-property: true
        Url:
          description: The publicly accessible URL of the container service.
          type: string
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required:
        - ServiceName
        - Power
        - Scale
      x-stackql-resource-name: Container
    ContainerServiceDeployment:
      description: >-
        Describes a container deployment configuration of an Amazon Lightsail
        container service.
      type: object
      properties:
        Containers:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Container'
          description: >-
            An object that describes the configuration for the containers of the
            deployment.
        PublicEndpoint:
          $ref: '#/components/schemas/PublicEndpoint'
          description: An object that describes the endpoint of the deployment.
      additionalProperties: false
    PublicDomainName:
      description: >-
        The public domain name to use with the container service, such as
        example.com and www.example.com.
      type: object
      properties:
        CertificateName:
          type: string
        DomainNames:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          description: >-
            An object that describes the configuration for the containers of the
            deployment.
      additionalProperties: false
    RelationalDatabaseParameter:
      description: Describes the parameters of the database.
      type: object
      properties:
        AllowedValues:
          type: string
          description: Specifies the valid range of values for the parameter.
        ApplyMethod:
          type: string
          description: >-
            Indicates when parameter updates are applied. Can be immediate or
            pending-reboot.
        ApplyType:
          type: string
          description: Specifies the engine-specific parameter type.
        DataType:
          type: string
          description: Specifies the valid data type for the parameter.
        Description:
          type: string
          description: Provides a description of the parameter.
        IsModifiable:
          type: boolean
          description: A Boolean value indicating whether the parameter can be modified.
        ParameterName:
          type: string
          description: Specifies the name of the parameter.
        ParameterValue:
          type: string
          description: Specifies the value of the parameter.
      additionalProperties: false
    Database:
      type: object
      properties:
        RelationalDatabaseName:
          description: The name to use for your new Lightsail database resource.
          type: string
          pattern: \w[\w\-]*\w
          minLength: 2
          maxLength: 255
          x-is-top-level-property: true
        DatabaseArn:
          type: string
          x-is-top-level-property: true
        AvailabilityZone:
          description: >-
            The Availability Zone in which to create your new database. Use the
            us-east-2a case-sensitive format.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        RelationalDatabaseBlueprintId:
          description: >-
            The blueprint ID for your new database. A blueprint describes the
            major engine version of a database.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        RelationalDatabaseBundleId:
          description: >-
            The bundle ID for your new database. A bundle describes the
            performance specifications for your database.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        MasterDatabaseName:
          description: >-
            The name of the database to create when the Lightsail database
            resource is created. For MySQL, if this parameter isn't specified,
            no database is created in the database resource. For PostgreSQL, if
            this parameter isn't specified, a database named postgres is created
            in the database resource.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        MasterUsername:
          description: The name for the master user.
          type: string
          minLength: 1
          maxLength: 63
          x-is-top-level-property: true
        MasterUserPassword:
          description: >-
            The password for the master user. The password can include any
            printable ASCII character except "/", """, or "@". It cannot contain
            spaces.
          type: string
          minLength: 1
          maxLength: 63
          x-is-top-level-property: true
        PreferredBackupWindow:
          description: >-
            The daily time range during which automated backups are created for
            your new database if automated backups are enabled.
          type: string
          x-is-top-level-property: true
        PreferredMaintenanceWindow:
          description: >-
            The weekly time range during which system maintenance can occur on
            your new database.
          type: string
          x-is-top-level-property: true
        PubliclyAccessible:
          description: >-
            Specifies the accessibility options for your new database. A value
            of true specifies a database that is available to resources outside
            of your Lightsail account. A value of false specifies a database
            that is available only to your Lightsail resources in the same
            region as your database.
          type: boolean
          x-is-top-level-property: true
        CaCertificateIdentifier:
          description: >-
            Indicates the certificate that needs to be associated with the
            database.
          type: string
          x-is-top-level-property: true
        BackupRetention:
          description: >-
            When true, enables automated backup retention for your database.
            Updates are applied during the next maintenance window because this
            can result in an outage.
          type: boolean
          x-is-top-level-property: true
        RotateMasterUserPassword:
          description: >-
            When true, the master user password is changed to a new strong
            password generated by Lightsail. Use the get relational database
            master user password operation to get the new password.
          type: boolean
          x-is-top-level-property: true
        RelationalDatabaseParameters:
          description: Update one or more parameters of the relational database.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RelationalDatabaseParameter'
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required:
        - RelationalDatabaseName
        - RelationalDatabaseBlueprintId
        - RelationalDatabaseBundleId
        - MasterDatabaseName
        - MasterUsername
      x-stackql-resource-name: Database
    AutoSnapshotAddOn:
      description: >-
        An object that represents additional parameters when enabling or
        modifying the automatic snapshot add-on
      type: object
      properties:
        SnapshotTimeOfDay:
          type: string
          description: The daily time when an automatic snapshot will be created.
          pattern: ^[0-9]{2}:00$
      additionalProperties: false
    AddOn:
      description: A addon associate with a resource.
      type: object
      properties:
        AddOnType:
          type: string
          description: The add-on type
          minLength: 1
          maxLength: 128
        Status:
          type: string
          description: Status of the Addon
          enum:
            - Enabling
            - Disabling
            - Enabled
            - Terminating
            - Terminated
            - Disabled
            - Failed
        AutoSnapshotAddOnRequest:
          $ref: '#/components/schemas/AutoSnapshotAddOn'
      required:
        - AddOnType
      additionalProperties: false
    Location:
      description: Location of a resource.
      type: object
      properties:
        AvailabilityZone:
          type: string
          description: >-
            The Availability Zone in which to create your instance. Use the
            following format: us-east-2a (case sensitive). Be sure to add the
            include Availability Zones parameter to your request.
        RegionName:
          type: string
          description: The Region Name in which to create your instance.
      additionalProperties: false
    Disk:
      description: Disk associated with the Instance.
      type: object
      properties:
        DiskName:
          description: The names to use for your new Lightsail disk.
          type: string
          pattern: ^[a-zA-Z0-9][\w\-.]*[a-zA-Z0-9]$
          minLength: 1
          maxLength: 254
        SizeInGb:
          type: string
          description: Size of the disk attached to the Instance.
        IsSystemDisk:
          type: boolean
          description: Is the Attached disk is the system disk of the Instance.
        IOPS:
          type: integer
          description: IOPS of disk.
        Path:
          type: string
          description: Path of the disk attached to the instance.
        AttachedTo:
          type: string
          description: Instance attached to the disk.
        AttachmentState:
          type: string
          description: Attachment state of the disk.
      required:
        - DiskName
        - Path
      additionalProperties: false
    ipv6Cidrs:
      description: IPv6 Cidrs
      type: array
      x-insertionOrder: false
      items:
        type: string
    cidrs:
      description: cidrs
      type: array
      x-insertionOrder: false
      items:
        type: string
    cidrListAliases:
      description: cidr List Aliases
      type: array
      x-insertionOrder: false
      items:
        type: string
    Hardware:
      description: Hardware of the Instance.
      type: object
      properties:
        CpuCount:
          type: integer
          description: CPU count of the Instance.
        RamSizeInGb:
          type: integer
          description: RAM Size of the Instance.
        Disks:
          description: Disks attached to the Instance.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Disk'
      additionalProperties: false
    State:
      description: Current State of the Instance.
      type: object
      properties:
        Code:
          type: integer
          description: Status code of the Instance.
        Name:
          type: string
          description: Status code of the Instance.
      additionalProperties: false
    Port:
      description: Port of the Instance.
      type: object
      properties:
        FromPort:
          type: integer
          description: From Port of the Instance.
        ToPort:
          type: integer
          description: To Port of the Instance.
        Protocol:
          type: string
          description: Port Protocol of the Instance.
        AccessFrom:
          type: string
          description: Access From Protocol of the Instance.
        AccessType:
          type: string
          description: Access Type Protocol of the Instance.
        CommonName:
          type: string
          description: CommonName for Protocol of the Instance.
        AccessDirection:
          type: string
          description: Access Direction for Protocol of the Instance(inbound/outbound).
        Ipv6Cidrs:
          $ref: '#/components/schemas/ipv6Cidrs'
        CidrListAliases:
          $ref: '#/components/schemas/cidrListAliases'
        Cidrs:
          $ref: '#/components/schemas/cidrs'
      additionalProperties: false
    MonthlyTransfer:
      description: Monthly Transfer of the Instance.
      type: object
      properties:
        GbPerMonthAllocated:
          type: string
          description: GbPerMonthAllocated of the Instance.
      additionalProperties: false
    Networking:
      description: Networking of the Instance.
      type: object
      properties:
        Ports:
          description: Ports to the Instance.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Port'
        MonthlyTransfer:
          $ref: '#/components/schemas/MonthlyTransfer'
      required:
        - Ports
      additionalProperties: false
    Instance:
      type: object
      properties:
        SupportCode:
          description: Support code to help identify any issues
          type: string
          x-is-top-level-property: true
        ResourceType:
          description: Resource type of Lightsail instance.
          type: string
          x-is-top-level-property: true
        IsStaticIp:
          description: Is the IP Address of the Instance is the static IP
          type: boolean
          x-is-top-level-property: true
        PrivateIpAddress:
          description: Private IP Address of the Instance
          type: string
          x-is-top-level-property: true
        PublicIpAddress:
          description: Public IP Address of the Instance
          type: string
          x-is-top-level-property: true
        Location:
          $ref: '#/components/schemas/Location'
          x-is-top-level-property: true
        Hardware:
          $ref: '#/components/schemas/Hardware'
          x-is-top-level-property: true
        State:
          $ref: '#/components/schemas/State'
          x-is-top-level-property: true
        Networking:
          $ref: '#/components/schemas/Networking'
          x-is-top-level-property: true
        UserName:
          description: Username of the  Lightsail instance.
          type: string
          x-is-top-level-property: true
        SshKeyName:
          description: SSH Key Name of the  Lightsail instance.
          type: string
          x-is-top-level-property: true
        InstanceName:
          description: The names to use for your new Lightsail instance.
          type: string
          pattern: ^[a-zA-Z0-9][\w\-.]*[a-zA-Z0-9]$
          minLength: 1
          maxLength: 254
          x-is-top-level-property: true
        AvailabilityZone:
          description: >-
            The Availability Zone in which to create your instance. Use the
            following format: us-east-2a (case sensitive). Be sure to add the
            include Availability Zones parameter to your request.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        BundleId:
          description: >-
            The bundle of specification information for your virtual private
            server (or instance ), including the pricing plan (e.g., micro_1_0
            ).
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        BlueprintId:
          description: >-
            The ID for a virtual private server image (e.g., app_wordpress_4_4
            or app_lamp_7_0 ). Use the get blueprints operation to return a list
            of available images (or blueprints ).
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        AddOns:
          description: >-
            An array of objects representing the add-ons to enable for the new
            instance.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AddOn'
          x-is-top-level-property: true
        UserData:
          description: >-
            A launch script you can create that configures a server with
            additional user data. For example, you might want to run apt-get -y
            update.
          type: string
          x-is-top-level-property: true
        KeyPairName:
          description: The name of your key pair.
          type: string
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        InstanceArn:
          type: string
          x-is-top-level-property: true
      required:
        - InstanceName
        - BlueprintId
        - BundleId
      x-stackql-resource-name: Instance
    LoadBalancer:
      type: object
      properties:
        LoadBalancerName:
          description: The name of your load balancer.
          type: string
          pattern: \w[\w\-]*\w
          x-is-top-level-property: true
        LoadBalancerArn:
          type: string
          x-is-top-level-property: true
        InstancePort:
          description: The instance port where you're creating your load balancer.
          type: integer
          x-is-top-level-property: true
        IpAddressType:
          description: >-
            The IP address type for the load balancer. The possible values are
            ipv4 for IPv4 only, and dualstack for IPv4 and IPv6. The default
            value is dualstack.
          type: string
          x-is-top-level-property: true
        AttachedInstances:
          description: The names of the instances attached to the load balancer.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        HealthCheckPath:
          description: >-
            The path you provided to perform the load balancer health check. If
            you didn't specify a health check path, Lightsail uses the root path
            of your website (e.g., "/").
          type: string
          x-is-top-level-property: true
        SessionStickinessEnabled:
          description: Configuration option to enable session stickiness.
          type: boolean
          x-is-top-level-property: true
        SessionStickinessLBCookieDurationSeconds:
          description: >-
            Configuration option to adjust session stickiness cookie duration
            parameter.
          type: string
          x-is-top-level-property: true
        TlsPolicyName:
          description: The name of the TLS policy to apply to the load balancer.
          type: string
          x-is-top-level-property: true
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required:
        - LoadBalancerName
        - InstancePort
      x-stackql-resource-name: LoadBalancer
    LoadBalancerTlsCertificate:
      type: object
      properties:
        LoadBalancerName:
          description: The name of your load balancer.
          type: string
          pattern: \w[\w\-]*\w
          x-is-top-level-property: true
        CertificateName:
          description: The SSL/TLS certificate name.
          type: string
          x-is-top-level-property: true
        CertificateDomainName:
          description: The domain name (e.g., example.com ) for your SSL/TLS certificate.
          type: string
          x-is-top-level-property: true
        CertificateAlternativeNames:
          description: >-
            An array of strings listing alternative domains and subdomains for
            your SSL/TLS certificate.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          x-is-top-level-property: true
        LoadBalancerTlsCertificateArn:
          type: string
          x-is-top-level-property: true
        IsAttached:
          description: >-
            When true, the SSL/TLS certificate is attached to the Lightsail load
            balancer.
          type: boolean
          x-is-top-level-property: true
        HttpsRedirectionEnabled:
          description: >-
            A Boolean value that indicates whether HTTPS redirection is enabled
            for the load balancer.
          type: boolean
          x-is-top-level-property: true
        Status:
          description: The validation status of the SSL/TLS certificate.
          type: string
          x-is-top-level-property: true
      required:
        - LoadBalancerName
        - CertificateName
        - CertificateDomainName
      x-stackql-resource-name: LoadBalancerTlsCertificate
    StaticIp:
      type: object
      properties:
        StaticIpName:
          description: The name of the static IP address.
          type: string
          x-is-top-level-property: true
        AttachedTo:
          description: The instance where the static IP is attached.
          type: string
          x-is-top-level-property: true
        IsAttached:
          description: A Boolean value indicating whether the static IP is attached.
          type: boolean
          x-is-top-level-property: true
        IpAddress:
          description: The static IP address.
          type: string
          x-is-top-level-property: true
        StaticIpArn:
          type: string
          x-is-top-level-property: true
      required:
        - StaticIpName
      x-stackql-resource-name: StaticIp
x-stackql-views:
  - Alarm:
      name: Alarm
      id: aws.lightsail.Alarm
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,

              JSON_EXTRACT(Properties, '$.MonitoredResourceName') as
              monitored_resource_name,

              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,

              JSON_EXTRACT(Properties, '$.ComparisonOperator') as
              comparison_operator,

              JSON_EXTRACT(Properties, '$.ContactProtocols') as
              contact_protocols,

              JSON_EXTRACT(Properties, '$.AlarmArn') as alarm_arn,

              JSON_EXTRACT(Properties, '$.DatapointsToAlarm') as
              datapoints_to_alarm,

              JSON_EXTRACT(Properties, '$.EvaluationPeriods') as
              evaluation_periods,

              JSON_EXTRACT(Properties, '$.NotificationEnabled') as
              notification_enabled,

              JSON_EXTRACT(Properties, '$.NotificationTriggers') as
              notification_triggers,

              JSON_EXTRACT(Properties, '$.Threshold') as threshold,

              JSON_EXTRACT(Properties, '$.TreatMissingData') as
              treat_missing_data,

              JSON_EXTRACT(Properties, '$.State') as state

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Alarm' ;
  - Bucket:
      name: Bucket
      id: aws.lightsail.Bucket
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,

              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,

              JSON_EXTRACT(Properties, '$.BucketArn') as bucket_arn,

              JSON_EXTRACT(Properties, '$.ObjectVersioning') as
              object_versioning,

              JSON_EXTRACT(Properties, '$.AccessRules.GetObject') as
              access_rules_get_object,

              JSON_EXTRACT(Properties, '$.AccessRules.AllowPublicOverrides') as
              access_rules_allow_public_overrides,

              JSON_EXTRACT(Properties, '$.ResourcesReceivingAccess') as
              resources_receiving_access,

              JSON_EXTRACT(Properties, '$.ReadOnlyAccessAccounts') as
              read_only_access_accounts,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Url') as url,

              JSON_EXTRACT(Properties, '$.AbleToUpdateBundle') as
              able_to_update_bundle

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Bucket' ;
  - Certificate:
      name: Certificate
      id: aws.lightsail.Certificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.CertificateName') as certificate_name,

              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,

              JSON_EXTRACT(Properties, '$.SubjectAlternativeNames') as
              subject_alternative_names,

              JSON_EXTRACT(Properties, '$.CertificateArn') as certificate_arn,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Certificate' ;
  - Container:
      name: Container
      id: aws.lightsail.Container
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ServiceName') as service_name,

              JSON_EXTRACT(Properties, '$.Power') as power,

              JSON_EXTRACT(Properties, '$.ContainerArn') as container_arn,

              JSON_EXTRACT(Properties, '$.Scale') as scale,

              JSON_EXTRACT(Properties, '$.PublicDomainNames') as
              public_domain_names,

              JSON_EXTRACT(Properties,
              '$.ContainerServiceDeployment.Containers') as
              container_service_deployment_containers,

              JSON_EXTRACT(Properties,
              '$.ContainerServiceDeployment.PublicEndpoint') as
              container_service_deployment_public_endpoint,

              JSON_EXTRACT(Properties, '$.IsDisabled') as is_disabled,

              JSON_EXTRACT(Properties, '$.Url') as url,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Container' ;
  - Database:
      name: Database
      id: aws.lightsail.Database
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.RelationalDatabaseName') as
              relational_database_name,

              JSON_EXTRACT(Properties, '$.DatabaseArn') as database_arn,

              JSON_EXTRACT(Properties, '$.AvailabilityZone') as
              availability_zone,

              JSON_EXTRACT(Properties, '$.RelationalDatabaseBlueprintId') as
              relational_database_blueprint_id,

              JSON_EXTRACT(Properties, '$.RelationalDatabaseBundleId') as
              relational_database_bundle_id,

              JSON_EXTRACT(Properties, '$.MasterDatabaseName') as
              master_database_name,

              JSON_EXTRACT(Properties, '$.MasterUsername') as master_username,

              JSON_EXTRACT(Properties, '$.MasterUserPassword') as
              master_user_password,

              JSON_EXTRACT(Properties, '$.PreferredBackupWindow') as
              preferred_backup_window,

              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as
              preferred_maintenance_window,

              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as
              publicly_accessible,

              JSON_EXTRACT(Properties, '$.CaCertificateIdentifier') as
              ca_certificate_identifier,

              JSON_EXTRACT(Properties, '$.BackupRetention') as backup_retention,

              JSON_EXTRACT(Properties, '$.RotateMasterUserPassword') as
              rotate_master_user_password,

              JSON_EXTRACT(Properties, '$.RelationalDatabaseParameters') as
              relational_database_parameters,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Database' ;
  - Instance:
      name: Instance
      id: aws.lightsail.Instance
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.SupportCode') as support_code,

              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,

              JSON_EXTRACT(Properties, '$.IsStaticIp') as is_static_ip,

              JSON_EXTRACT(Properties, '$.PrivateIpAddress') as
              private_ip_address,

              JSON_EXTRACT(Properties, '$.PublicIpAddress') as
              public_ip_address,

              JSON_EXTRACT(Properties, '$.Location.AvailabilityZone') as
              location_availability_zone,

              JSON_EXTRACT(Properties, '$.Location.RegionName') as
              location_region_name,

              JSON_EXTRACT(Properties, '$.Hardware.CpuCount') as
              hardware_cpu_count,

              JSON_EXTRACT(Properties, '$.Hardware.RamSizeInGb') as
              hardware_ram_size_in_gb,

              JSON_EXTRACT(Properties, '$.Hardware.Disks') as hardware_disks,

              JSON_EXTRACT(Properties, '$.State.Code') as state_code,

              JSON_EXTRACT(Properties, '$.State.Name') as state_name,

              JSON_EXTRACT(Properties, '$.Networking.Ports') as
              networking_ports,

              JSON_EXTRACT(Properties, '$.Networking.MonthlyTransfer') as
              networking_monthly_transfer,

              JSON_EXTRACT(Properties, '$.UserName') as user_name,

              JSON_EXTRACT(Properties, '$.SshKeyName') as ssh_key_name,

              JSON_EXTRACT(Properties, '$.InstanceName') as instance_name,

              JSON_EXTRACT(Properties, '$.AvailabilityZone') as
              availability_zone,

              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,

              JSON_EXTRACT(Properties, '$.BlueprintId') as blueprint_id,

              JSON_EXTRACT(Properties, '$.AddOns') as add_ons,

              JSON_EXTRACT(Properties, '$.UserData') as user_data,

              JSON_EXTRACT(Properties, '$.KeyPairName') as key_pair_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::Instance' ;
  - LoadBalancer:
      name: LoadBalancer
      id: aws.lightsail.LoadBalancer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.LoadBalancerName') as
              load_balancer_name,

              JSON_EXTRACT(Properties, '$.LoadBalancerArn') as
              load_balancer_arn,

              JSON_EXTRACT(Properties, '$.InstancePort') as instance_port,

              JSON_EXTRACT(Properties, '$.IpAddressType') as ip_address_type,

              JSON_EXTRACT(Properties, '$.AttachedInstances') as
              attached_instances,

              JSON_EXTRACT(Properties, '$.HealthCheckPath') as
              health_check_path,

              JSON_EXTRACT(Properties, '$.SessionStickinessEnabled') as
              session_stickiness_enabled,

              JSON_EXTRACT(Properties,
              '$.SessionStickinessLBCookieDurationSeconds') as
              session_stickiness_lb_cookie_duration_seconds,

              JSON_EXTRACT(Properties, '$.TlsPolicyName') as tls_policy_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::LoadBalancer' ;
  - LoadBalancerTlsCertificate:
      name: LoadBalancerTlsCertificate
      id: aws.lightsail.LoadBalancerTlsCertificate
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.LoadBalancerName') as
              load_balancer_name,

              JSON_EXTRACT(Properties, '$.CertificateName') as certificate_name,

              JSON_EXTRACT(Properties, '$.CertificateDomainName') as
              certificate_domain_name,

              JSON_EXTRACT(Properties, '$.CertificateAlternativeNames') as
              certificate_alternative_names,

              JSON_EXTRACT(Properties, '$.LoadBalancerTlsCertificateArn') as
              load_balancer_tls_certificate_arn,

              JSON_EXTRACT(Properties, '$.IsAttached') as is_attached,

              JSON_EXTRACT(Properties, '$.HttpsRedirectionEnabled') as
              https_redirection_enabled,

              JSON_EXTRACT(Properties, '$.Status') as status

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::LoadBalancerTlsCertificate'
              ;
  - StaticIp:
      name: StaticIp
      id: aws.lightsail.StaticIp
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.StaticIpName') as static_ip_name,

              JSON_EXTRACT(Properties, '$.AttachedTo') as attached_to,

              JSON_EXTRACT(Properties, '$.IsAttached') as is_attached,

              JSON_EXTRACT(Properties, '$.IpAddress') as ip_address,

              JSON_EXTRACT(Properties, '$.StaticIpArn') as static_ip_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Lightsail::StaticIp' ;
