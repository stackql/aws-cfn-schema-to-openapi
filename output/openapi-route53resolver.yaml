openapi: 3.0.0
info:
  title: Route53Resolver
  version: 1.0.0
paths: {}
components:
  schemas:
    Domains:
      description: An inline list of domains to use for this domain list.
      type: array
      uniqueItems: true
      items:
        description: FirewallDomainName
        type: string
        minLength: 1
        maxLength: 255
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: >-
            The key name of the tag. You can specify a value that is 1 to 128
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -.
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: >-
            The value for the tag. You can specify a value that is 0 to 256
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -.
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
    FirewallDomainList:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
          x-is-top-level-property: true
        Name:
          description: FirewallDomainListName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        DomainCount:
          description: Count
          type: integer
          minimum: 0
          x-is-top-level-property: true
        Status:
          description: >-
            ResolverFirewallDomainList, possible values are COMPLETE, DELETING,
            UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and
            INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - COMPLETE_IMPORT_FAILED
            - IMPORTING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
          x-is-top-level-property: true
        StatusMessage:
          description: FirewallDomainListAssociationStatus
          type: string
          x-is-top-level-property: true
        ManagedOwnerName:
          description: ServicePrincipal
          type: string
          minLength: 1
          maxLength: 512
          x-is-top-level-property: true
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        Domains:
          $ref: '#/components/schemas/Domains'
          x-is-top-level-property: true
        DomainFileUrl:
          description: S3 URL to import domains from.
          type: string
          minLength: 1
          maxLength: 1024
          x-is-top-level-property: true
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: FirewallDomainList
    FirewallRule:
      description: Firewall Rule associating the Rule Group to a Domain List
      type: object
      properties:
        FirewallDomainListId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        Priority:
          description: Rule Priority
          type: integer
        Action:
          description: Rule Action
          type: string
          enum:
            - ALLOW
            - BLOCK
            - ALERT
        BlockResponse:
          description: BlockResponse
          type: string
          enum:
            - NODATA
            - NXDOMAIN
            - OVERRIDE
        BlockOverrideDomain:
          description: BlockOverrideDomain
          type: string
          minLength: 1
          maxLength: 255
        BlockOverrideDnsType:
          description: BlockOverrideDnsType
          type: string
          enum:
            - CNAME
        BlockOverrideTtl:
          description: BlockOverrideTtl
          type: integer
          minimum: 0
          maximum: 604800
      required:
        - FirewallDomainListId
        - Priority
        - Action
      additionalProperties: false
    FirewallRuleGroup:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
          x-is-top-level-property: true
        Name:
          description: FirewallRuleGroupName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        RuleCount:
          description: Count
          type: integer
          x-is-top-level-property: true
        Status:
          description: >-
            ResolverFirewallRuleGroupAssociation, possible values are COMPLETE,
            DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
          x-is-top-level-property: true
        StatusMessage:
          description: FirewallRuleGroupStatus
          type: string
          x-is-top-level-property: true
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
          x-is-top-level-property: true
        ShareStatus:
          description: >-
            ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME,
            SHARED_BY_ME.
          type: string
          enum:
            - NOT_SHARED
            - SHARED_WITH_ME
            - SHARED_BY_ME
          x-is-top-level-property: true
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        FirewallRules:
          description: FirewallRules
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/FirewallRule'
          x-is-top-level-property: true
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: FirewallRuleGroup
    FirewallRuleGroupAssociation:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
          x-is-top-level-property: true
        FirewallRuleGroupId:
          description: FirewallRuleGroupId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        VpcId:
          description: VpcId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Name:
          description: FirewallRuleGroupAssociationName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 0
          maxLength: 64
          x-is-top-level-property: true
        Priority:
          description: Priority
          type: integer
          x-is-top-level-property: true
        MutationProtection:
          description: MutationProtectionStatus
          type: string
          enum:
            - ENABLED
            - DISABLED
          x-is-top-level-property: true
        ManagedOwnerName:
          description: ServicePrincipal
          type: string
          minLength: 1
          maxLength: 512
          x-is-top-level-property: true
        Status:
          description: >-
            ResolverFirewallRuleGroupAssociation, possible values are COMPLETE,
            DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
          x-is-top-level-property: true
        StatusMessage:
          description: FirewallDomainListAssociationStatus
          type: string
          x-is-top-level-property: true
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
      required:
        - FirewallRuleGroupId
        - VpcId
        - Priority
      x-stackql-resource-name: FirewallRuleGroupAssociation
    ResolverConfig:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
          x-is-top-level-property: true
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        AutodefinedReverse:
          description: >-
            ResolverAutodefinedReverseStatus, possible values are ENABLING,
            ENABLED, DISABLING AND DISABLED.
          type: string
          enum:
            - ENABLING
            - ENABLED
            - DISABLING
            - DISABLED
          x-is-top-level-property: true
        AutodefinedReverseFlag:
          description: >-
            Represents the desired status of AutodefinedReverse. The only
            supported value on creation is DISABLE. Deletion of this resource
            will return AutodefinedReverse to its default value (ENABLED).
          type: string
          enum:
            - DISABLE
          x-is-top-level-property: true
      required:
        - ResourceId
        - AutodefinedReverseFlag
      x-stackql-resource-name: ResolverConfig
    ResolverDNSSECConfig:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
          x-is-top-level-property: true
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        ValidationStatus:
          description: >-
            ResolverDNSSECValidationStatus, possible values are ENABLING,
            ENABLED, DISABLING AND DISABLED.
          type: string
          enum:
            - ENABLING
            - ENABLED
            - DISABLING
            - DISABLED
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: ResolverDNSSECConfig
    IpAddressRequest:
      type: object
      additionalProperties: false
      properties:
        SubnetId:
          type: string
        Ipv6:
          type: string
        Ip:
          type: string
      required:
        - SubnetId
    ResolverEndpoint:
      type: object
      properties:
        IpAddresses:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/IpAddressRequest'
          x-is-top-level-property: true
        ResolverEndpointId:
          type: string
          x-is-top-level-property: true
        IpAddressCount:
          type: string
          x-is-top-level-property: true
        OutpostArn:
          type: string
          x-is-top-level-property: true
        PreferredInstanceType:
          type: string
          x-is-top-level-property: true
        ResolverEndpointType:
          type: string
          x-is-top-level-property: true
        Arn:
          type: string
          x-is-top-level-property: true
        Direction:
          type: string
          x-is-top-level-property: true
        HostVPCId:
          type: string
          x-is-top-level-property: true
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        Name:
          type: string
          x-is-top-level-property: true
      required:
        - IpAddresses
        - Direction
        - SecurityGroupIds
      x-stackql-resource-name: ResolverEndpoint
    ResolverQueryLoggingConfig:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
          x-is-top-level-property: true
        Status:
          description: >-
            ResolverQueryLogConfigStatus, possible values are CREATING, CREATED,
            DELETED AND FAILED.
          type: string
          enum:
            - CREATING
            - CREATED
            - DELETING
            - FAILED
          x-is-top-level-property: true
        ShareStatus:
          description: >-
            ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME,
            SHARED_BY_ME.
          type: string
          enum:
            - NOT_SHARED
            - SHARED_WITH_ME
            - SHARED_BY_ME
          x-is-top-level-property: true
        AssociationCount:
          description: Count
          type: integer
          x-is-top-level-property: true
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
          x-is-top-level-property: true
        Name:
          description: ResolverQueryLogConfigName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
          x-is-top-level-property: true
        DestinationArn:
          description: destination arn
          type: string
          minLength: 1
          maxLength: 600
          x-is-top-level-property: true
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: ResolverQueryLoggingConfig
    ResolverQueryLoggingConfigAssociation:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        ResolverQueryLogConfigId:
          description: ResolverQueryLogConfigId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Status:
          description: ResolverQueryLogConfigAssociationStatus
          type: string
          enum:
            - CREATING
            - ACTIVE
            - ACTION_NEEDED
            - DELETING
            - FAILED
            - OVERRIDDEN
          x-is-top-level-property: true
        Error:
          description: ResolverQueryLogConfigAssociationError
          type: string
          enum:
            - NONE
            - DESTINATION_NOT_FOUND
            - ACCESS_DENIED
          x-is-top-level-property: true
        ErrorMessage:
          description: ResolverQueryLogConfigAssociationErrorMessage
          type: string
          x-is-top-level-property: true
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: ResolverQueryLoggingConfigAssociation
    TargetAddress:
      type: object
      additionalProperties: false
      properties:
        Ip:
          type: string
          description: >-
            One IP address that you want to forward DNS queries to. You can
            specify only IPv4 addresses. 
        Ipv6:
          type: string
          description: >-
            One IPv6 address that you want to forward DNS queries to. You can
            specify only IPv6 addresses. 
        Port:
          type: string
          description: 'The port at Ip that you want to forward DNS queries to. '
          minLength: 0
          maxLength: 65535
    ResolverRule:
      type: object
      properties:
        ResolverEndpointId:
          type: string
          description: The ID of the endpoint that the rule is associated with.
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        DomainName:
          type: string
          description: >-
            DNS queries for this domain name are forwarded to the IP addresses
            that are specified in TargetIps
          minLength: 1
          maxLength: 256
          x-is-top-level-property: true
        Name:
          type: string
          description: The name for the Resolver rule
          minLength: 0
          maxLength: 64
          x-is-top-level-property: true
        RuleType:
          type: string
          description: >-
            When you want to forward DNS queries for specified domain name to
            resolvers on your network, specify FORWARD. When you have a
            forwarding rule to forward DNS queries for a domain to your network
            and you want Resolver to process queries for a subdomain of that
            domain, specify SYSTEM.
          enum:
            - FORWARD
            - SYSTEM
            - RECURSIVE
          x-is-top-level-property: true
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        TargetIps:
          type: array
          description: >-
            An array that contains the IP addresses and ports that an outbound
            endpoint forwards DNS queries to. Typically, these are the IP
            addresses of DNS resolvers on your network. Specify IPv4 addresses.
            IPv6 is not supported.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TargetAddress'
          x-is-top-level-property: true
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the resolver rule.
          x-is-top-level-property: true
        ResolverRuleId:
          type: string
          description: The ID of the endpoint that the rule is associated with.
          x-is-top-level-property: true
      required:
        - DomainName
        - RuleType
      x-stackql-resource-name: ResolverRule
    ResolverRuleAssociation:
      type: object
      properties:
        VPCId:
          description: The ID of the VPC that you associated the Resolver rule with.
          type: string
          x-is-top-level-property: true
        ResolverRuleId:
          description: >-
            The ID of the Resolver rule that you associated with the VPC that is
            specified by VPCId.
          type: string
          x-is-top-level-property: true
        ResolverRuleAssociationId:
          description: Primary Identifier for Resolver Rule Association
          type: string
          x-is-top-level-property: true
        Name:
          description: The name of an association between a Resolver rule and a VPC.
          type: string
          x-is-top-level-property: true
      required:
        - VPCId
        - ResolverRuleId
      x-stackql-resource-name: ResolverRuleAssociation
x-stackql-views:
  - FirewallDomainList:
      name: FirewallDomainList
      id: aws.route53resolver.FirewallDomainList
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.DomainCount') as domain_count,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,

              JSON_EXTRACT(Properties, '$.ManagedOwnerName') as
              managed_owner_name,

              JSON_EXTRACT(Properties, '$.CreatorRequestId') as
              creator_request_id,

              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,

              JSON_EXTRACT(Properties, '$.ModificationTime') as
              modification_time,

              JSON_EXTRACT(Properties, '$.DomainFileUrl') as domain_file_url,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::FirewallDomainList' ;
  - FirewallRuleGroup:
      name: FirewallRuleGroup
      id: aws.route53resolver.FirewallRuleGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.RuleCount') as rule_count,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,

              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,

              JSON_EXTRACT(Properties, '$.ShareStatus') as share_status,

              JSON_EXTRACT(Properties, '$.CreatorRequestId') as
              creator_request_id,

              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,

              JSON_EXTRACT(Properties, '$.ModificationTime') as
              modification_time,

              JSON_EXTRACT(Properties, '$.FirewallRules') as firewall_rules,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::FirewallRuleGroup' ;
  - FirewallRuleGroupAssociation:
      name: FirewallRuleGroupAssociation
      id: aws.route53resolver.FirewallRuleGroupAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.FirewallRuleGroupId') as
              firewall_rule_group_id,

              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Priority') as priority,

              JSON_EXTRACT(Properties, '$.MutationProtection') as
              mutation_protection,

              JSON_EXTRACT(Properties, '$.ManagedOwnerName') as
              managed_owner_name,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,

              JSON_EXTRACT(Properties, '$.CreatorRequestId') as
              creator_request_id,

              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,

              JSON_EXTRACT(Properties, '$.ModificationTime') as
              modification_time,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::Route53Resolver::FirewallRuleGroupAssociation' ;
  - ResolverConfig:
      name: ResolverConfig
      id: aws.route53resolver.ResolverConfig
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,

              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,

              JSON_EXTRACT(Properties, '$.AutodefinedReverse') as
              autodefined_reverse,

              JSON_EXTRACT(Properties, '$.AutodefinedReverseFlag') as
              autodefined_reverse_flag

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::ResolverConfig' ;
  - ResolverDNSSECConfig:
      name: ResolverDNSSECConfig
      id: aws.route53resolver.ResolverDNSSECConfig
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,

              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,

              JSON_EXTRACT(Properties, '$.ValidationStatus') as
              validation_status

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::ResolverDNSSECConfig'
              ;
  - ResolverEndpoint:
      name: ResolverEndpoint
      id: aws.route53resolver.ResolverEndpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.IpAddresses') as ip_addresses,

              JSON_EXTRACT(Properties, '$.ResolverEndpointId') as
              resolver_endpoint_id,

              JSON_EXTRACT(Properties, '$.IpAddressCount') as ip_address_count,

              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,

              JSON_EXTRACT(Properties, '$.PreferredInstanceType') as
              preferred_instance_type,

              JSON_EXTRACT(Properties, '$.ResolverEndpointType') as
              resolver_endpoint_type,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Direction') as direction,

              JSON_EXTRACT(Properties, '$.HostVPCId') as host_vp_cid,

              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as
              security_group_ids,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::ResolverEndpoint' ;
  - ResolverQueryLoggingConfig:
      name: ResolverQueryLoggingConfig
      id: aws.route53resolver.ResolverQueryLoggingConfig
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.ShareStatus') as share_status,

              JSON_EXTRACT(Properties, '$.AssociationCount') as
              association_count,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.CreatorRequestId') as
              creator_request_id,

              JSON_EXTRACT(Properties, '$.DestinationArn') as destination_arn,

              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::Route53Resolver::ResolverQueryLoggingConfig' ;
  - ResolverQueryLoggingConfigAssociation:
      name: ResolverQueryLoggingConfigAssociation
      id: aws.route53resolver.ResolverQueryLoggingConfigAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ResolverQueryLogConfigId') as
              resolver_query_log_config_id,

              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.Error') as error,

              JSON_EXTRACT(Properties, '$.ErrorMessage') as error_message,

              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation' ;
  - ResolverRule:
      name: ResolverRule
      id: aws.route53resolver.ResolverRule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ResolverEndpointId') as
              resolver_endpoint_id,

              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.RuleType') as rule_type,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.TargetIps') as target_ips,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.ResolverRuleId') as resolver_rule_id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Route53Resolver::ResolverRule' ;
  - ResolverRuleAssociation:
      name: ResolverRuleAssociation
      id: aws.route53resolver.ResolverRuleAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.VPCId') as v_pc_id,

              JSON_EXTRACT(Properties, '$.ResolverRuleId') as resolver_rule_id,

              JSON_EXTRACT(Properties, '$.ResolverRuleAssociationId') as
              resolver_rule_association_id,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::Route53Resolver::ResolverRuleAssociation' ;
