openapi: 3.0.0
info:
  title: CodeStarNotifications
  version: 1.0.0
paths: {}
components:
  schemas:
    Target:
      type: object
      additionalProperties: false
      properties:
        TargetType:
          type: string
        TargetAddress:
          type: string
      required:
        - TargetType
        - TargetAddress
    NotificationRule:
      type: object
      properties:
        EventTypeId:
          type: string
          minLength: 1
          maxLength: 2048
        CreatedBy:
          type: string
          minLength: 1
          maxLength: 2048
        TargetAddress:
          type: string
          minLength: 1
          maxLength: 2048
        EventTypeIds:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 200
        Status:
          type: string
          enum:
            - ENABLED
            - DISABLED
        DetailType:
          type: string
          enum:
            - BASIC
            - FULL
        Resource:
          type: string
          pattern: ^arn:aws[^:\s]*:[^:\s]*:[^:\s]*:[0-9]{12}:[^\s]+$
        Targets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 10
        Tags:
          type: object
          additionalProperties: false
          x-patternProperties:
            .*:
              type: string
        Name:
          type: string
          pattern: '[A-Za-z0-9\-_ ]+$'
          minLength: 1
          maxLength: 64
        Arn:
          type: string
          pattern: ^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$
      required:
        - EventTypeIds
        - Resource
        - DetailType
        - Targets
        - Name
      x-stackql-resource-name: NotificationRule
x-stackql-views:
  - NotificationRule:
      name: NotificationRule
      id: aws.codestarnotifications.NotificationRule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(Properties, '$.EventTypeId') as event_type_id,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.TargetAddress') as target_address,
              JSON_EXTRACT(Properties, '$.EventTypeIds') as event_type_ids,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.DetailType') as detail_type,
              JSON_EXTRACT(Properties, '$.Resource') as resource,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1' and data__TypeName = 'AWS::CodeStarNotifications::NotificationRule' ;
