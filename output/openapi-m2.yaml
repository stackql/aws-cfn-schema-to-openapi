openapi: 3.0.0
info:
  title: M2
  version: 1.0.0
paths: {}
components:
  schemas:
    Definition:
      oneOf:
        - type: object
          title: S3Location
          properties:
            S3Location:
              type: string
              pattern: ^\S{1,2000}$
          required:
            - S3Location
          additionalProperties: false
        - type: object
          title: Content
          properties:
            Content:
              type: string
              maxLength: 65000
              minLength: 1
          required:
            - Content
          additionalProperties: false
    EngineType:
      type: string
      description: The target platform for the environment.
      enum:
        - microfocus
        - bluage
    TagMap:
      type: object
      description: Defines tags associated to an environment.
      maxProperties: 200
      minProperties: 0
      x-patternProperties:
        ^(?!aws:).+$:
          type: string
          maxLength: 256
          minLength: 0
      additionalProperties: false
    Application:
      type: object
      properties:
        ApplicationArn:
          type: string
          pattern: >-
            ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
          x-is-top-level-property: true
        ApplicationId:
          type: string
          pattern: ^\S{1,80}$
          x-is-top-level-property: true
        Definition:
          $ref: '#/components/schemas/Definition'
          x-is-top-level-property: true
        Description:
          type: string
          maxLength: 500
          minLength: 0
          x-is-top-level-property: true
        EngineType:
          $ref: '#/components/schemas/EngineType'
          x-is-top-level-property: true
        KmsKeyId:
          type: string
          maxLength: 2048
          description: >-
            The ID or the Amazon Resource Name (ARN) of the customer managed KMS
            Key used for encrypting application-related resources.
          x-is-top-level-property: true
        Name:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
          x-is-top-level-property: true
        Tags:
          $ref: '#/components/schemas/TagMap'
          x-is-top-level-property: true
      required:
        - Definition
        - EngineType
        - Name
      x-stackql-resource-name: Application
    EfsStorageConfiguration:
      type: object
      description: Defines the storage configuration for an Amazon EFS file system.
      properties:
        FileSystemId:
          type: string
          description: The file system identifier.
          pattern: ^\S{1,200}$
        MountPoint:
          type: string
          description: The mount point for the file system.
          pattern: ^\S{1,200}$
      required:
        - FileSystemId
        - MountPoint
      additionalProperties: false
    FsxStorageConfiguration:
      type: object
      description: Defines the storage configuration for an Amazon FSx file system.
      properties:
        FileSystemId:
          type: string
          description: The file system identifier.
          pattern: ^\S{1,200}$
        MountPoint:
          type: string
          description: The mount point for the file system.
          pattern: ^\S{1,200}$
      required:
        - FileSystemId
        - MountPoint
      additionalProperties: false
    HighAvailabilityConfig:
      type: object
      description: Defines the details of a high availability configuration.
      properties:
        DesiredCapacity:
          type: integer
          maximum: 100
          minimum: 1
      required:
        - DesiredCapacity
      additionalProperties: false
    StorageConfiguration:
      type: object
      description: Defines the storage configuration for an environment.
      oneOf:
        - properties:
            Efs:
              $ref: '#/components/schemas/EfsStorageConfiguration'
          required:
            - Efs
          additionalProperties: false
        - properties:
            Fsx:
              $ref: '#/components/schemas/FsxStorageConfiguration'
          required:
            - Fsx
          additionalProperties: false
    Environment:
      type: object
      properties:
        Description:
          type: string
          description: The description of the environment.
          maxLength: 500
          minLength: 0
          x-is-top-level-property: true
        EngineType:
          $ref: '#/components/schemas/EngineType'
          x-is-top-level-property: true
        EngineVersion:
          type: string
          description: The version of the runtime engine for the environment.
          pattern: ^\S{1,10}$
          x-is-top-level-property: true
        EnvironmentArn:
          type: string
          description: The Amazon Resource Name (ARN) of the runtime environment.
          pattern: >-
            ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
          x-is-top-level-property: true
        EnvironmentId:
          type: string
          description: The unique identifier of the environment.
          pattern: ^\S{1,80}$
          x-is-top-level-property: true
        HighAvailabilityConfig:
          $ref: '#/components/schemas/HighAvailabilityConfig'
          x-is-top-level-property: true
        InstanceType:
          type: string
          description: The type of instance underlying the environment.
          pattern: ^\S{1,20}$
          x-is-top-level-property: true
        KmsKeyId:
          type: string
          maxLength: 2048
          description: >-
            The ID or the Amazon Resource Name (ARN) of the customer managed KMS
            Key used for encrypting environment-related resources.
          x-is-top-level-property: true
        Name:
          type: string
          description: The name of the environment.
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
          x-is-top-level-property: true
        PreferredMaintenanceWindow:
          type: string
          description: >-
            Configures a desired maintenance window for the environment. If you
            do not provide a value, a random system-generated value will be
            assigned.
          pattern: ^\S{1,50}$
          x-is-top-level-property: true
        PubliclyAccessible:
          type: boolean
          description: Specifies whether the environment is publicly accessible.
          x-is-top-level-property: true
        SecurityGroupIds:
          type: array
          description: >-
            The list of security groups for the VPC associated with this
            environment.
          x-insertionOrder: false
          items:
            type: string
            pattern: ^\S{1,50}$
          x-is-top-level-property: true
        StorageConfigurations:
          type: array
          description: The storage configurations defined for the runtime environment.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StorageConfiguration'
          x-is-top-level-property: true
        SubnetIds:
          type: array
          description: >-
            The unique identifiers of the subnets assigned to this runtime
            environment.
          x-insertionOrder: false
          items:
            type: string
            pattern: ^\S{1,50}$
          x-is-top-level-property: true
        Tags:
          description: Tags associated to this environment.
          $ref: '#/components/schemas/TagMap'
          x-is-top-level-property: true
      required:
        - EngineType
        - InstanceType
        - Name
      x-stackql-resource-name: Environment
x-stackql-views:
  - Application:
      name: Application
      id: aws.m2.Application
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::M2::Application' ;
  - Environment:
      name: Environment
      id: aws.m2.Environment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,

              JSON_EXTRACT(Properties, '$.EnvironmentArn') as environment_arn,

              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,

              JSON_EXTRACT(Properties,
              '$.HighAvailabilityConfig.DesiredCapacity') as
              high_availability_config_desired_capacity,

              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,

              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as
              preferred_maintenance_window,

              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as
              publicly_accessible,

              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as
              security_group_ids,

              JSON_EXTRACT(Properties, '$.StorageConfigurations') as
              storage_configurations,

              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::M2::Environment' ;
