openapi: 3.0.0
info:
  title: EventSchemas
  version: 1.0.0
paths: {}
components:
  schemas:
    TagsEntry:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Discoverer:
      type: object
      properties:
        DiscovererArn:
          type: string
        DiscovererId:
          type: string
        CrossAccount:
          type: boolean
        Description:
          type: string
        SourceArn:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - SourceArn
      x-stackql-resource-name: Discoverer
    Registry:
      type: object
      properties:
        RegistryName:
          type: string
        Description:
          type: string
        Id:
          type: string
        RegistryArn:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      x-stackql-resource-name: Registry
    RegistryPolicy:
      type: object
      properties:
        Id:
          type: string
        Policy:
          type: object
        RegistryName:
          type: string
        RevisionId:
          type: string
      required:
        - RegistryName
        - Policy
      x-stackql-resource-name: RegistryPolicy
    Schema:
      type: object
      properties:
        Type:
          type: string
        Description:
          type: string
        SchemaVersion:
          type: string
        Content:
          type: string
        RegistryName:
          type: string
        Id:
          type: string
        SchemaArn:
          type: string
        SchemaName:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - Type
        - Content
        - RegistryName
      x-stackql-resource-name: Schema
x-stackql-views:
  - Discoverer:
      name: Discoverer
      id: aws.eventschemas.Discoverer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              JSON_EXTRACT(Properties, '$.DiscovererArn') as discoverer_arn,
              JSON_EXTRACT(Properties, '$.DiscovererId') as discoverer_id,
              JSON_EXTRACT(Properties, '$.CrossAccount') as cross_account,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Discoverer' ;
  - Registry:
      name: Registry
      id: aws.eventschemas.Registry
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RegistryArn') as registry_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Registry' ;
  - RegistryPolicy:
      name: RegistryPolicy
      id: aws.eventschemas.RegistryPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.RevisionId') as revision_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::RegistryPolicy' ;
  - Schema:
      name: Schema
      id: aws.eventschemas.Schema
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn,
              JSON_EXTRACT(Properties, '$.SchemaName') as schema_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Schema' ;
