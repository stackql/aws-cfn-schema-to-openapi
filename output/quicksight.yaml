openapi: 3.0.0
info:
  title: QuickSight
  version: 1.0.0
paths: {}
components:
  schemas:
    AnalysisError:
      type: object
      description: <p>A metadata error structure for an analysis.</p>
      properties:
        Type:
          $ref: '#/components/schemas/AnalysisErrorType'
        Message:
          type: string
          pattern: .*\S.*
          description: <p>The message associated with the analysis error.</p>
      additionalProperties: false
    AnalysisErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    AnalysisSourceEntity:
      type: object
      description: <p>The source entity of an analysis.</p>
      properties:
        SourceTemplate:
          $ref: '#/components/schemas/AnalysisSourceTemplate'
      additionalProperties: false
    AnalysisSourceTemplate:
      type: object
      description: <p>The source template of an analysis.</p>
      properties:
        DataSetReferences:
          type: array
          items:
            $ref: '#/components/schemas/DataSetReference'
          minItems: 1
          description: <p>The dataset references of the source template of an analysis.</p>
        Arn:
          type: string
          description: >-
            <p>The Amazon Resource Name (ARN) of the source template of an
            analysis.</p>
      required:
        - Arn
        - DataSetReferences
      additionalProperties: false
    DataSetReference:
      type: object
      description: <p>Dataset reference.</p>
      properties:
        DataSetArn:
          type: string
          description: <p>Dataset Amazon Resource Name (ARN).</p>
        DataSetPlaceholder:
          type: string
          pattern: .*\S.*
          description: <p>Dataset placeholder.</p>
      required:
        - DataSetArn
        - DataSetPlaceholder
      additionalProperties: false
    DateTimeParameter:
      type: object
      description: <p>A date-time parameter.</p>
      properties:
        Values:
          type: array
          items:
            type: string
          description: <p>The values for the date-time parameter.</p>
        Name:
          type: string
          pattern: .*\S.*
          description: <p>A display name for the date-time parameter.</p>
      required:
        - Name
        - Values
      additionalProperties: false
    DecimalParameter:
      type: object
      description: <p>A decimal parameter.</p>
      properties:
        Values:
          type: array
          items:
            type: number
          description: <p>The values for the decimal parameter.</p>
        Name:
          type: string
          pattern: .*\S.*
          description: <p>A display name for the decimal parameter.</p>
      required:
        - Name
        - Values
      additionalProperties: false
    IntegerParameter:
      type: object
      description: <p>An integer parameter.</p>
      properties:
        Values:
          type: array
          items:
            type: number
          description: <p>The values for the integer parameter.</p>
        Name:
          type: string
          pattern: .*\S.*
          description: <p>The name of the integer parameter.</p>
      required:
        - Name
        - Values
      additionalProperties: false
    Parameters:
      type: object
      description: <p>A list of QuickSight parameters and the list's override values.</p>
      properties:
        StringParameters:
          type: array
          items:
            $ref: '#/components/schemas/StringParameter'
          maxItems: 100
          minItems: 0
          description: <p>String parameters.</p>
        DecimalParameters:
          type: array
          items:
            $ref: '#/components/schemas/DecimalParameter'
          maxItems: 100
          minItems: 0
          description: <p>Decimal parameters.</p>
        IntegerParameters:
          type: array
          items:
            $ref: '#/components/schemas/IntegerParameter'
          maxItems: 100
          minItems: 0
          description: <p>Integer parameters.</p>
        DateTimeParameters:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeParameter'
          maxItems: 100
          minItems: 0
          description: <p>Date-time parameters.</p>
      additionalProperties: false
    ResourcePermission:
      type: object
      description: <p>Permission for the resource.</p>
      properties:
        Actions:
          type: array
          items:
            type: string
          maxItems: 16
          minItems: 1
          description: <p>The IAM action to grant or revoke permissions on.</p>
        Principal:
          type: string
          maxLength: 256
          minLength: 1
          description: >-
            <p>The Amazon Resource Name (ARN) of the principal. This can be one
            of the
                        following:</p>
                    <ul>
                        <li>
                            <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
                        </li>
                        <li>
                            <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
                        </li>
                        <li>
                            <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
                                ARN. Use this option only to share resources (templates) across AWS accounts.
                                (This is less common.) </p>
                        </li>
                     </ul>
      required:
        - Actions
        - Principal
      additionalProperties: false
    ResourceStatus:
      type: string
      enum:
        - CREATION_IN_PROGRESS
        - CREATION_SUCCESSFUL
        - CREATION_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_FAILED
        - DELETED
    Sheet:
      type: object
      description: >-
        <p>A <i>sheet</i>, which is an object that contains a set of visuals
        that
                    are viewed together on one page in the Amazon QuickSight console. Every analysis and dashboard
                    contains at least one sheet. Each sheet contains at least one visualization widget, for
                    example a chart, pivot table, or narrative insight. Sheets can be associated with other
                    components, such as controls, filters, and so on.</p>
      properties:
        SheetId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
          description: <p>The unique identifier associated with a sheet.</p>
        Name:
          type: string
          pattern: .*\S.*
          description: >-
            <p>The name of a sheet. This name is displayed on the sheet's tab in
            the QuickSight
                        console.</p>
      additionalProperties: false
    StringParameter:
      type: object
      description: <p>A string parameter.</p>
      properties:
        Values:
          type: array
          items:
            type: string
          description: <p>The values of a string parameter.</p>
        Name:
          type: string
          pattern: .*\S.*
          description: <p>A display name for a string parameter.</p>
      required:
        - Name
        - Values
      additionalProperties: false
    Tag:
      type: object
      description: >-
        <p>The key or keys of the key-value pairs for the resource tag or tags
        assigned to the
                    resource.</p>
      properties:
        Value:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Tag value.</p>
        Key:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Tag key.</p>
      required:
        - Key
        - Value
      additionalProperties: false
    Analysis:
      type: object
      properties:
        AnalysisId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the analysis.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        CreatedTime:
          type: string
          description: <p>The time that the analysis was created.</p>
          format: string
        DataSetArns:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
          description: <p>The ARNs of the datasets of the analysis.</p>
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisError'
          minItems: 1
          description: <p>Errors associated with the analysis.</p>
        LastUpdatedTime:
          type: string
          description: <p>The time that the analysis was last updated.</p>
          format: string
        Name:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          description: <p>The descriptive name of the analysis.</p>
        Parameters:
          $ref: '#/components/schemas/Parameters'
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: >-
            <p>A structure that describes the principals and the resource-level
            permissions on an
                        analysis. You can use the <code>Permissions</code> structure to grant permissions by
                        providing a list of AWS Identity and Access Management (IAM) action information for each
                        principal listed by Amazon Resource Name (ARN). </p>

                    <p>To specify no permissions, omit <code>Permissions</code>.</p>
        Sheets:
          type: array
          items:
            $ref: '#/components/schemas/Sheet'
          maxItems: 20
          minItems: 0
          description: >-
            <p>A list of the associated sheets with the unique identifier and
            name of each sheet.</p>
        SourceEntity:
          $ref: '#/components/schemas/AnalysisSourceEntity'
        Status:
          $ref: '#/components/schemas/ResourceStatus'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: >-
            <p>Contains a map of the key-value pairs for the resource tag or
            tags assigned to the
                        analysis.</p>
        ThemeArn:
          type: string
          description: <p>The ARN of the theme of the analysis.</p>
      required:
        - AwsAccountId
        - AnalysisId
        - SourceEntity
      x-stackql-resource-name: Analysis
    AdHocFilteringOption:
      type: object
      description: <p>Ad hoc (one-time) filtering option.</p>
      properties:
        AvailabilityStatus:
          $ref: '#/components/schemas/DashboardBehavior'
      additionalProperties: false
    DashboardBehavior:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DashboardError:
      type: object
      description: <p>Dashboard error.</p>
      properties:
        Type:
          $ref: '#/components/schemas/DashboardErrorType'
        Message:
          type: string
          pattern: .*\S.*
          description: <p>Message.</p>
      additionalProperties: false
    DashboardErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    DashboardPublishOptions:
      type: object
      description: <p>Dashboard publish options.</p>
      properties:
        SheetControlsOption:
          $ref: '#/components/schemas/SheetControlsOption'
        ExportToCSVOption:
          $ref: '#/components/schemas/ExportToCSVOption'
        AdHocFilteringOption:
          $ref: '#/components/schemas/AdHocFilteringOption'
      additionalProperties: false
    DashboardSourceEntity:
      type: object
      description: <p>Dashboard source entity.</p>
      properties:
        SourceTemplate:
          $ref: '#/components/schemas/DashboardSourceTemplate'
      additionalProperties: false
    DashboardSourceTemplate:
      type: object
      description: <p>Dashboard source template.</p>
      properties:
        DataSetReferences:
          type: array
          items:
            $ref: '#/components/schemas/DataSetReference'
          minItems: 1
          description: <p>Dataset references.</p>
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
      required:
        - Arn
        - DataSetReferences
      additionalProperties: false
    DashboardUIState:
      type: string
      enum:
        - EXPANDED
        - COLLAPSED
    DashboardVersion:
      type: object
      description: <p>Dashboard version.</p>
      properties:
        Status:
          $ref: '#/components/schemas/ResourceStatus'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/DashboardError'
          minItems: 1
          description: <p>Errors associated with this dashboard version.</p>
        CreatedTime:
          type: string
          description: <p>The time that this dashboard version was created.</p>
          format: string
        Description:
          type: string
          maxLength: 512
          minLength: 1
          description: <p>Description.</p>
        DataSetArns:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
          description: >-
            <p>The Amazon Resource Numbers (ARNs) for the datasets that are
            associated with this
                        version of the dashboard.</p>
        ThemeArn:
          type: string
          description: >-
            <p>The ARN of the theme associated with a version of the
            dashboard.</p>
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
        SourceEntityArn:
          type: string
          description: <p>Source entity ARN.</p>
        VersionNumber:
          type: number
          minimum: 1
          description: <p>Version number for this version of the dashboard.</p>
        Sheets:
          type: array
          items:
            $ref: '#/components/schemas/Sheet'
          maxItems: 20
          minItems: 0
          description: >-
            <p>A list of the associated sheets with the unique identifier and
            name of each sheet.</p>
      additionalProperties: false
    ExportToCSVOption:
      type: object
      description: <p>Export to .csv option.</p>
      properties:
        AvailabilityStatus:
          $ref: '#/components/schemas/DashboardBehavior'
      additionalProperties: false
    SheetControlsOption:
      type: object
      description: <p>Sheet controls option.</p>
      properties:
        VisibilityState:
          $ref: '#/components/schemas/DashboardUIState'
      additionalProperties: false
    Dashboard:
      type: object
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        CreatedTime:
          type: string
          description: <p>The time that this dataset was created.</p>
          format: date-time
        DashboardId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
        DashboardPublishOptions:
          $ref: '#/components/schemas/DashboardPublishOptions'
        LastPublishedTime:
          type: string
          description: <p>The last time that this dataset was published.</p>
          format: string
        LastUpdatedTime:
          type: string
          description: <p>The last time that this dataset was updated.</p>
          format: string
        Name:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          description: <p>The display name of the dashboard.</p>
        Parameters:
          $ref: '#/components/schemas/Parameters'
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: >-
            <p>A structure that contains the permissions of the dashboard. You
            can use this structure
                        for granting permissions by providing a list of IAM action information for each
                        principal ARN. </p>

                    <p>To specify no permissions, omit the permissions list.</p>
        SourceEntity:
          $ref: '#/components/schemas/DashboardSourceEntity'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: >-
            <p>Contains a map of the key-value pairs for the resource tag or
            tags assigned to the
                        dashboard.</p>
        ThemeArn:
          type: string
          description: >-
            <p>The Amazon Resource Name (ARN) of the theme that is being used
            for this dashboard. If
                        you add a value for this field, it overrides the value that is used in the source
                        entity. The theme ARN must exist in the same AWS account where you create the
                        dashboard.</p>
        Version:
          $ref: '#/components/schemas/DashboardVersion'
        VersionDescription:
          type: string
          maxLength: 512
          minLength: 1
          description: >-
            <p>A description for the first version of the dashboard being
            created.</p>
      required:
        - AwsAccountId
        - DashboardId
        - SourceEntity
      x-stackql-resource-name: Dashboard
    CalculatedColumn:
      type: object
      description: <p>A calculated column for a dataset.</p>
      properties:
        ColumnId:
          type: string
          maxLength: 64
          minLength: 1
          description: >-
            <p>A unique ID to identify a calculated column. During a dataset
            update, if the column ID
                        of a calculated column matches that of an existing calculated column, Amazon QuickSight
                        preserves the existing calculated column.</p>
        ColumnName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Column name.</p>
        Expression:
          type: string
          maxLength: 4096
          minLength: 1
          description: <p>An expression that defines the calculated column.</p>
      required:
        - ColumnId
        - ColumnName
        - Expression
    CastColumnTypeOperation:
      type: object
      description: <p>A transform operation that casts a column to a different type.</p>
      properties:
        ColumnName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Column name.</p>
        Format:
          type: string
          maxLength: 32
          minLength: 0
          description: >-
            <p>When casting a column from string to datetime type, you can
            supply a string in a
                        format supported by Amazon QuickSight to denote the source data format.</p>
        NewColumnType:
          $ref: '#/components/schemas/ColumnDataType'
      required:
        - ColumnName
        - NewColumnType
    ColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
    ColumnDescription:
      type: object
      description: <p>Metadata that contains a description for a column.</p>
      properties:
        Text:
          type: string
          maxLength: 500
          minLength: 0
          description: <p>The text of a description for a column.</p>
    ColumnGroup:
      type: object
      description: >-
        <p>Groupings of columns that work together in certain Amazon QuickSight
        features. This is
                    a variant type structure. For this structure to be valid, only one of the attributes can
                    be non-null.</p>
      properties:
        GeoSpatialColumnGroup:
          $ref: '#/components/schemas/GeoSpatialColumnGroup'
    ColumnLevelPermissionRule:
      type: object
      properties:
        ColumnNames:
          type: array
          items:
            type: string
          minItems: 1
        Principals:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 1
    ColumnTag:
      type: object
      description: >-
        <p>A tag for a column in a <a>TagColumnOperation</a> structure. This is
        a
                    variant type structure. For this structure to be valid, only one of the attributes can
                    be non-null.</p>
      properties:
        ColumnGeographicRole:
          $ref: '#/components/schemas/GeoSpatialDataRole'
        ColumnDescription:
          $ref: '#/components/schemas/ColumnDescription'
    CreateColumnsOperation:
      type: object
      description: >-
        <p>A transform operation that creates calculated columns. Columns
        created in one such
                    operation form a lexical closure.</p>
      properties:
        Columns:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedColumn'
          maxItems: 128
          minItems: 1
          description: <p>Calculated columns to create.</p>
      required:
        - Columns
    CustomSql:
      type: object
      description: >-
        <p>A physical table type built from the results of the custom SQL
        query.</p>
      properties:
        DataSourceArn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the data source.</p>
        SqlQuery:
          type: string
          maxLength: 65536
          minLength: 1
          description: <p>The SQL query.</p>
        Columns:
          type: array
          items:
            $ref: '#/components/schemas/InputColumn'
          maxItems: 2048
          minItems: 1
          description: <p>The column schema from the SQL query result set.</p>
        Name:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>A display name for the SQL query result.</p>
      required:
        - Columns
        - DataSourceArn
        - Name
        - SqlQuery
    DataSetImportMode:
      type: string
      enum:
        - SPICE
        - DIRECT_QUERY
    FieldFolder:
      type: object
      properties:
        Description:
          type: string
          maxLength: 500
          minLength: 0
        Columns:
          type: array
          items:
            type: string
          maxItems: 5000
          minItems: 0
    FieldFolderMap:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FieldFolder'
    FileFormat:
      type: string
      enum:
        - CSV
        - TSV
        - CLF
        - ELF
        - XLSX
        - JSON
    FilterOperation:
      type: object
      description: <p>A transform operation that filters rows based on a condition.</p>
      properties:
        ConditionExpression:
          type: string
          maxLength: 4096
          minLength: 1
          description: >-
            <p>An expression that must evaluate to a Boolean value. Rows for
            which the expression
                        evaluates to true are kept in the dataset.</p>
      required:
        - ConditionExpression
    GeoSpatialColumnGroup:
      type: object
      description: <p>Geospatial column group that denotes a hierarchy.</p>
      properties:
        Columns:
          type: array
          items:
            type: string
            maxLength: 128
            minLength: 1
          maxItems: 16
          minItems: 1
          description: <p>Columns in this hierarchy.</p>
        CountryCode:
          $ref: '#/components/schemas/GeoSpatialCountryCode'
        Name:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>A display name for the hierarchy.</p>
      required:
        - Columns
        - Name
    GeoSpatialCountryCode:
      type: string
      enum:
        - US
    GeoSpatialDataRole:
      type: string
      enum:
        - COUNTRY
        - STATE
        - COUNTY
        - CITY
        - POSTCODE
        - LONGITUDE
        - LATITUDE
        - POLITICAL1
    InputColumn:
      type: object
      description: >-
        <p>Metadata for a column that is used as the input of a transform
        operation.</p>
      properties:
        Type:
          $ref: '#/components/schemas/InputColumnDataType'
        Name:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The name of this column in the underlying data source.</p>
      required:
        - Name
        - Type
    InputColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
        - BIT
        - BOOLEAN
        - JSON
    JoinInstruction:
      type: object
      description: <p>Join instruction.</p>
      properties:
        OnClause:
          type: string
          maxLength: 512
          minLength: 1
          description: <p>On Clause.</p>
        Type:
          $ref: '#/components/schemas/JoinType'
        LeftJoinKeyProperties:
          $ref: '#/components/schemas/JoinKeyProperties'
        LeftOperand:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '[0-9a-zA-Z-]*'
          description: <p>Left operand.</p>
        RightOperand:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '[0-9a-zA-Z-]*'
          description: <p>Right operand.</p>
        RightJoinKeyProperties:
          $ref: '#/components/schemas/JoinKeyProperties'
      required:
        - LeftOperand
        - OnClause
        - RightOperand
        - Type
    JoinKeyProperties:
      type: object
      properties:
        UniqueKey:
          type: boolean
    JoinType:
      type: string
      enum:
        - INNER
        - OUTER
        - LEFT
        - RIGHT
    LogicalTable:
      type: object
      description: |-
        <p>A <i>logical table</i> is a unit that joins and that data
                    transformations operate on. A logical table has a source, which can be either a physical
                    table or result of a join. When a logical table points to a physical table, the logical
                    table acts as a mutable copy of that physical table through transform operations.</p>
      properties:
        Alias:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>A display name for the logical table.</p>
        DataTransforms:
          type: array
          items:
            $ref: '#/components/schemas/TransformOperation'
          maxItems: 2048
          minItems: 1
          description: <p>Transform operations that act on this logical table.</p>
        Source:
          $ref: '#/components/schemas/LogicalTableSource'
      required:
        - Alias
        - Source
    LogicalTableMap:
      type: object
      maxProperties: 64
      minProperties: 1
      x-patternProperties:
        '[0-9a-zA-Z-]*':
          $ref: '#/components/schemas/LogicalTable'
    LogicalTableSource:
      type: object
      description: >-
        <p>Information about the source of a logical table. This is a variant
        type structure. For
                    this structure to be valid, only one of the attributes can be non-null.</p>
      properties:
        PhysicalTableId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: '[0-9a-zA-Z-]*'
          description: <p>Physical table ID.</p>
        JoinInstruction:
          $ref: '#/components/schemas/JoinInstruction'
        DataSetArn:
          type: string
          description: <p>The Amazon Resource Name (ARN) for the dataset.</p>
    OutputColumn:
      type: object
      description: <p>Output column.</p>
      properties:
        Type:
          $ref: '#/components/schemas/ColumnDataType'
        Description:
          type: string
          maxLength: 500
          minLength: 0
          description: <p>A description for a column.</p>
        Name:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>A display name for the dataset.</p>
    PhysicalTable:
      type: object
      description: >-
        <p>A view of a data source that contains information about the shape of
        the data in the
                    underlying source. This is a variant type structure. For this structure to be valid,
                    only one of the attributes can be non-null.</p>
      properties:
        RelationalTable:
          $ref: '#/components/schemas/RelationalTable'
        CustomSql:
          $ref: '#/components/schemas/CustomSql'
        S3Source:
          $ref: '#/components/schemas/S3Source'
    PhysicalTableMap:
      type: object
      maxProperties: 32
      minProperties: 1
      x-patternProperties:
        '[0-9a-zA-Z-]*':
          $ref: '#/components/schemas/PhysicalTable'
    ProjectOperation:
      type: object
      description: >-
        <p>A transform operation that projects columns. Operations that come
        after a projection
                    can only refer to projected columns.</p>
      properties:
        ProjectedColumns:
          type: array
          items:
            type: string
          maxItems: 2000
          minItems: 1
          description: <p>Projected columns.</p>
      required:
        - ProjectedColumns
    RelationalTable:
      type: object
      description: <p>A physical table type for relational data sources.</p>
      properties:
        DataSourceArn:
          type: string
          description: <p>The Amazon Resource Name (ARN) for the data source.</p>
        InputColumns:
          type: array
          items:
            $ref: '#/components/schemas/InputColumn'
          maxItems: 2048
          minItems: 1
          description: <p>The column schema of the table.</p>
        Schema:
          type: string
          maxLength: 64
          minLength: 0
          description: >-
            <p>The schema name. This name applies to certain relational database
            engines.</p>
        Catalog:
          type: string
          description: <p>The catalog associated with a table.</p>
          maxLength: 256
          minLength: 0
        Name:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>The name of the relational table.</p>
      required:
        - DataSourceArn
        - InputColumns
        - Name
    RenameColumnOperation:
      type: object
      description: <p>A transform operation that renames a column.</p>
      properties:
        NewColumnName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The new name for the column.</p>
        ColumnName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The name of the column to be renamed.</p>
      required:
        - ColumnName
        - NewColumnName
    RowLevelPermissionDataSet:
      type: object
      description: <p>The row-level security configuration for the dataset.</p>
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
        Namespace:
          type: string
          maxLength: 64
          minLength: 0
          pattern: ^[a-zA-Z0-9._-]*$
          description: >-
            <p>The namespace associated with the row-level permissions
            dataset.</p>
        PermissionPolicy:
          $ref: '#/components/schemas/RowLevelPermissionPolicy'
        FormatVersion:
          $ref: '#/components/schemas/RowLevelPermissionFormatVersion'
      required:
        - Arn
        - PermissionPolicy
    RowLevelPermissionPolicy:
      type: string
      enum:
        - GRANT_ACCESS
        - DENY_ACCESS
    RowLevelPermissionFormatVersion:
      type: string
      enum:
        - VERSION_1
        - VERSION_2
    S3Source:
      type: object
      description: <p>A physical table type for as S3 data source.</p>
      properties:
        DataSourceArn:
          type: string
          description: <p>The amazon Resource Name (ARN) for the data source.</p>
        InputColumns:
          type: array
          items:
            $ref: '#/components/schemas/InputColumn'
          maxItems: 2048
          minItems: 1
          description: <p>A physical table type for as S3 data source.</p>
        UploadSettings:
          $ref: '#/components/schemas/UploadSettings'
      required:
        - DataSourceArn
        - InputColumns
    TagColumnOperation:
      type: object
      description: >-
        <p>A transform operation that tags a column with additional
        information.</p>
      properties:
        ColumnName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The column that this operation acts on.</p>
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/ColumnTag'
          maxItems: 16
          minItems: 1
          description: >-
            <p>The dataset column tag, currently only used for geospatial type
            tagging. .</p>
                    <note>
                        <p>This is not tags for the AWS tagging feature. .</p>
                    </note>
      required:
        - ColumnName
        - Tags
    TextQualifier:
      type: string
      enum:
        - DOUBLE_QUOTE
        - SINGLE_QUOTE
    TransformOperation:
      type: object
      description: >-
        <p>A data transformation on a logical table. This is a variant type
        structure. For this
                    structure to be valid, only one of the attributes can be non-null.</p>
      properties:
        TagColumnOperation:
          $ref: '#/components/schemas/TagColumnOperation'
        FilterOperation:
          $ref: '#/components/schemas/FilterOperation'
        CastColumnTypeOperation:
          $ref: '#/components/schemas/CastColumnTypeOperation'
        CreateColumnsOperation:
          $ref: '#/components/schemas/CreateColumnsOperation'
        RenameColumnOperation:
          $ref: '#/components/schemas/RenameColumnOperation'
        ProjectOperation:
          $ref: '#/components/schemas/ProjectOperation'
    UploadSettings:
      type: object
      description: <p>Information about the format for a source file or files.</p>
      properties:
        ContainsHeader:
          type: boolean
          description: >-
            <p>Whether the file has a header row, or the files each have a
            header row.</p>
        TextQualifier:
          $ref: '#/components/schemas/TextQualifier'
        Format:
          $ref: '#/components/schemas/FileFormat'
        StartFromRow:
          type: number
          minimum: 1
          description: <p>A row number to start reading data from.</p>
        Delimiter:
          type: string
          maxLength: 1
          minLength: 1
          description: <p>The delimiter between values in the file.</p>
    IngestionWaitPolicy:
      type: object
      description: >-
        <p>Wait policy to use when creating/updating dataset. Default is to wait
        for SPICE ingestion to finish with timeout of 36 hours.</p>
      properties:
        WaitForSpiceIngestion:
          type: boolean
          description: >-
            <p>Wait for SPICE ingestion to finish to mark dataset
            creation/update successful. Default (true).
              Applicable only when DataSetImportMode mode is set to SPICE.</p>
          default: true
        IngestionWaitTimeInHours:
          type: number
          description: >-
            <p>The maximum time (in hours) to wait for Ingestion to complete.
            Default timeout is 36 hours.
             Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
          minimum: 1
          maximum: 36
          default: 36
    DataSetUsageConfiguration:
      type: object
      description: <p>The dataset usage configuration for the dataset.</p>
      properties:
        DisableUseAsDirectQuerySource:
          type: boolean
        DisableUseAsImportedSource:
          type: boolean
    DataSet:
      type: object
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        ColumnGroups:
          type: array
          items:
            $ref: '#/components/schemas/ColumnGroup'
          maxItems: 8
          minItems: 1
          description: >-
            <p>Groupings of columns that work together in certain QuickSight
            features. Currently, only geospatial hierarchy is supported.</p>
        ColumnLevelPermissionRules:
          type: array
          items:
            $ref: '#/components/schemas/ColumnLevelPermissionRule'
          minItems: 1
        ConsumedSpiceCapacityInBytes:
          type: number
          description: >-
            <p>The amount of SPICE capacity used by this dataset. This is 0 if
            the dataset isn't
                        imported into SPICE.</p>
        CreatedTime:
          type: string
          description: <p>The time that this dataset was created.</p>
          format: string
        DataSetId:
          type: string
        FieldFolders:
          $ref: '#/components/schemas/FieldFolderMap'
        ImportMode:
          $ref: '#/components/schemas/DataSetImportMode'
        LastUpdatedTime:
          type: string
          description: <p>The last time that this dataset was updated.</p>
          format: string
        LogicalTableMap:
          $ref: '#/components/schemas/LogicalTableMap'
        Name:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The display name for the dataset.</p>
        OutputColumns:
          type: array
          items:
            $ref: '#/components/schemas/OutputColumn'
          description: >-
            <p>The list of columns after all transforms. These columns are
            available in templates,
                        analyses, and dashboards.</p>
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: <p>A list of resource permissions on the dataset.</p>
        PhysicalTableMap:
          $ref: '#/components/schemas/PhysicalTableMap'
        RowLevelPermissionDataSet:
          $ref: '#/components/schemas/RowLevelPermissionDataSet'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: >-
            <p>Contains a map of the key-value pairs for the resource tag or
            tags assigned to the dataset.</p>
        IngestionWaitPolicy:
          $ref: '#/components/schemas/IngestionWaitPolicy'
        DataSetUsageConfiguration:
          $ref: '#/components/schemas/DataSetUsageConfiguration'
      x-stackql-resource-name: DataSet
    AmazonElasticsearchParameters:
      type: object
      description: <p>Amazon Elasticsearch Service parameters.</p>
      properties:
        Domain:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>The Amazon Elasticsearch Service domain.</p>
      required:
        - Domain
    AmazonOpenSearchParameters:
      type: object
      description: <p>Amazon OpenSearch Service parameters.</p>
      properties:
        Domain:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>The Amazon OpenSearch Service domain.</p>
      required:
        - Domain
    AthenaParameters:
      type: object
      description: <p>Amazon Athena parameters.</p>
      properties:
        WorkGroup:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>The workgroup that Amazon Athena uses.</p>
    AuroraParameters:
      type: object
      description: <p>Amazon Aurora parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    AuroraPostgreSqlParameters:
      type: object
      description: <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    AwsIotAnalyticsParameters:
      type: object
      description: <p>AWS IoT Analytics parameters.</p>
      properties:
        DataSetName:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Dataset name.</p>
      required:
        - DataSetName
    CredentialPair:
      type: object
      description: >-
        <p>The combination of user name and password that are used as
        credentials.</p>
      properties:
        AlternateDataSourceParameters:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceParameters'
          maxItems: 50
          minItems: 1
          description: >-
            <p>A set of alternate data source parameters that you want to share
            for these
                        credentials. The credentials are applied in tandem with the data source parameters when
                        you copy a data source by using a create or update request. The API operation compares
                        the <code>DataSourceParameters</code> structure that's in the request with the
                        structures in the <code>AlternateDataSourceParameters</code> allow list. If the
                        structures are an exact match, the request is allowed to use the new data source with
                        the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
                        null, the <code>DataSourceParameters</code> originally used with these
                            <code>Credentials</code> is automatically allowed.</p>
        Username:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>User name.</p>
        Password:
          type: string
          maxLength: 1024
          minLength: 1
          description: <p>Password.</p>
      required:
        - Password
        - Username
    DatabricksParameters:
      type: object
      description: <p>Databricks parameters.</p>
      properties:
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        SqlEndpointPath:
          type: string
          maxLength: 4096
          minLength: 1
          description: <p>The HTTP Path of the Databricks data source.</p>
      required:
        - Host
        - Port
        - SqlEndpointPath
    DataSourceCredentials:
      type: object
      description: >-
        <p>Data source credentials. This is a variant type structure. For this
        structure to be
                    valid, only one of the attributes can be non-null.</p>
      properties:
        CopySourceArn:
          type: string
          pattern: ^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+
          description: >-
            <p>The Amazon Resource Name (ARN) of a data source that has the
            credential pair that you
                        want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
                        data source in the ARN is used as the credentials for the
                        <code>DataSourceCredentials</code> structure.</p>
        CredentialPair:
          $ref: '#/components/schemas/CredentialPair'
        SecretArn:
          type: string
          pattern: ^arn:[-a-z0-9]*:secretsmanager:[-a-z0-9]*:[0-9]{12}:secret:.+
          maxLength: 2048
          minLength: 1
          description: >-
            <p>The Amazon Resource Name (ARN) of the secret associated with the
            data source in Amazon Secrets Manager.</p>
    DataSourceErrorInfo:
      type: object
      description: <p>Error information for the data source creation or update.</p>
      properties:
        Type:
          $ref: '#/components/schemas/DataSourceErrorInfoType'
        Message:
          type: string
          description: <p>Error message.</p>
    DataSourceErrorInfoType:
      type: string
      enum:
        - ACCESS_DENIED
        - COPY_SOURCE_NOT_FOUND
        - TIMEOUT
        - ENGINE_VERSION_NOT_SUPPORTED
        - UNKNOWN_HOST
        - GENERIC_SQL_FAILURE
        - CONFLICT
        - UNKNOWN
    DataSourceParameters:
      type: object
      description: >-
        <p>The parameters that Amazon QuickSight uses to connect to your
        underlying data source.
                    This is a variant type structure. For this structure to be valid, only one of the
                    attributes can be non-null.</p>
      properties:
        AuroraPostgreSqlParameters:
          $ref: '#/components/schemas/AuroraPostgreSqlParameters'
        TeradataParameters:
          $ref: '#/components/schemas/TeradataParameters'
        RdsParameters:
          $ref: '#/components/schemas/RdsParameters'
        AthenaParameters:
          $ref: '#/components/schemas/AthenaParameters'
        SparkParameters:
          $ref: '#/components/schemas/SparkParameters'
        MariaDbParameters:
          $ref: '#/components/schemas/MariaDbParameters'
        OracleParameters:
          $ref: '#/components/schemas/OracleParameters'
        PrestoParameters:
          $ref: '#/components/schemas/PrestoParameters'
        RedshiftParameters:
          $ref: '#/components/schemas/RedshiftParameters'
        MySqlParameters:
          $ref: '#/components/schemas/MySqlParameters'
        SqlServerParameters:
          $ref: '#/components/schemas/SqlServerParameters'
        SnowflakeParameters:
          $ref: '#/components/schemas/SnowflakeParameters'
        AmazonElasticsearchParameters:
          $ref: '#/components/schemas/AmazonElasticsearchParameters'
        AmazonOpenSearchParameters:
          $ref: '#/components/schemas/AmazonOpenSearchParameters'
        PostgreSqlParameters:
          $ref: '#/components/schemas/PostgreSqlParameters'
        AuroraParameters:
          $ref: '#/components/schemas/AuroraParameters'
        S3Parameters:
          $ref: '#/components/schemas/S3Parameters'
        DatabricksParameters:
          $ref: '#/components/schemas/DatabricksParameters'
    DataSourceType:
      type: string
      enum:
        - ADOBE_ANALYTICS
        - AMAZON_ELASTICSEARCH
        - AMAZON_OPENSEARCH
        - ATHENA
        - AURORA
        - AURORA_POSTGRESQL
        - AWS_IOT_ANALYTICS
        - DATABRICKS
        - GITHUB
        - JIRA
        - MARIADB
        - MYSQL
        - ORACLE
        - POSTGRESQL
        - PRESTO
        - REDSHIFT
        - S3
        - SALESFORCE
        - SERVICENOW
        - SNOWFLAKE
        - SPARK
        - SQLSERVER
        - TERADATA
        - TWITTER
        - TIMESTREAM
    ManifestFileLocation:
      type: object
      description: <p>Amazon S3 manifest file location.</p>
      properties:
        Bucket:
          type: string
          maxLength: 1024
          minLength: 1
          description: <p>Amazon S3 bucket.</p>
        Key:
          type: string
          maxLength: 1024
          minLength: 1
          description: <p>Amazon S3 key that identifies an object.</p>
      required:
        - Bucket
        - Key
    MariaDbParameters:
      type: object
      description: <p>MariaDB parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    MySqlParameters:
      type: object
      description: <p>MySQL parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    OracleParameters:
      type: object
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
        Database:
          type: string
          maxLength: 128
          minLength: 1
        Host:
          type: string
          maxLength: 256
          minLength: 1
      required:
        - Database
        - Host
        - Port
    PostgreSqlParameters:
      type: object
      description: <p>PostgreSQL parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    PrestoParameters:
      type: object
      description: <p>Presto parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
        Catalog:
          type: string
          maxLength: 128
          minLength: 0
          description: <p>Catalog.</p>
      required:
        - Catalog
        - Host
        - Port
    RdsParameters:
      type: object
      description: <p>Amazon RDS parameters.</p>
      properties:
        InstanceId:
          type: string
          maxLength: 64
          minLength: 1
          description: <p>Instance ID.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
      required:
        - Database
        - InstanceId
    RedshiftParameters:
      type: object
      description: >-
        <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be
        blank if
                    <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
                    <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
      properties:
        ClusterId:
          type: string
          maxLength: 64
          minLength: 1
          description: >-
            <p>Cluster ID. This field can be blank if the <code>Host</code> and
            <code>Port</code> are
                        provided.</p>
        Port:
          type: number
          maximum: 65535
          minimum: 0
          description: >-
            <p>Port. This field can be blank if the <code>ClusterId</code> is
            provided.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: >-
            <p>Host. This field can be blank if <code>ClusterId</code> is
            provided.</p>
      required:
        - Database
    S3Parameters:
      type: object
      description: <p>S3 parameters.</p>
      properties:
        ManifestFileLocation:
          $ref: '#/components/schemas/ManifestFileLocation'
      required:
        - ManifestFileLocation
    SnowflakeParameters:
      type: object
      description: <p>Snowflake parameters.</p>
      properties:
        Warehouse:
          type: string
          maxLength: 128
          minLength: 0
          description: <p>Warehouse.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Warehouse
    SparkParameters:
      type: object
      description: <p>Spark parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Host
        - Port
    SqlServerParameters:
      type: object
      description: <p>SQL Server parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    SslProperties:
      type: object
      description: >-
        <p>Secure Socket Layer (SSL) properties that apply when QuickSight
        connects to your
                    underlying data source.</p>
      properties:
        DisableSsl:
          type: boolean
          description: <p>A Boolean option to control whether SSL should be disabled.</p>
    TeradataParameters:
      type: object
      description: <p>Teradata parameters.</p>
      properties:
        Port:
          type: number
          maximum: 65535
          minimum: 1
          description: <p>Port.</p>
        Database:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Database.</p>
        Host:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Host.</p>
      required:
        - Database
        - Host
        - Port
    VpcConnectionProperties:
      type: object
      description: <p>VPC connection properties.</p>
      properties:
        VpcConnectionArn:
          type: string
          description: <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
      required:
        - VpcConnectionArn
    DataSource:
      type: object
      properties:
        AlternateDataSourceParameters:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceParameters'
          maxItems: 50
          minItems: 1
          description: >-
            <p>A set of alternate data source parameters that you want to share
            for the credentials
                        stored with this data source. The credentials are applied in tandem with the data source
                        parameters when you copy a data source by using a create or update request. The API
                        operation compares the <code>DataSourceParameters</code> structure that's in the request
                        with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the
                        structures are an exact match, the request is allowed to use the credentials from this
                        existing data source. If the <code>AlternateDataSourceParameters</code> list is null,
                        the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>
                        are automatically allowed.</p>
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the data source.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        CreatedTime:
          type: string
          description: <p>The time that this data source was created.</p>
          format: date-time
        Credentials:
          $ref: '#/components/schemas/DataSourceCredentials'
        DataSourceId:
          type: string
        DataSourceParameters:
          $ref: '#/components/schemas/DataSourceParameters'
        ErrorInfo:
          $ref: '#/components/schemas/DataSourceErrorInfo'
        LastUpdatedTime:
          type: string
          description: <p>The last time that this data source was updated.</p>
          format: date-time
        Name:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>A display name for the data source.</p>
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: <p>A list of resource permissions on the data source.</p>
        SslProperties:
          $ref: '#/components/schemas/SslProperties'
        Status:
          $ref: '#/components/schemas/ResourceStatus'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: >-
            <p>Contains a map of the key-value pairs for the resource tag or
            tags assigned to the data source.</p>
        Type:
          $ref: '#/components/schemas/DataSourceType'
        VpcConnectionProperties:
          $ref: '#/components/schemas/VpcConnectionProperties'
      x-stackql-resource-name: DataSource
    ColumnGroupColumnSchema:
      type: object
      description: >-
        <p>A structure describing the name, data type, and geographic role of
        the columns.</p>
      properties:
        Name:
          type: string
          description: <p>The name of the column group's column schema.</p>
      additionalProperties: false
    ColumnGroupSchema:
      type: object
      description: <p>The column group schema.</p>
      properties:
        ColumnGroupColumnSchemaList:
          type: array
          items:
            $ref: '#/components/schemas/ColumnGroupColumnSchema'
          maxItems: 500
          minItems: 0
          description: >-
            <p>A structure containing the list of schemas for column group
            columns.</p>
        Name:
          type: string
          description: <p>The name of the column group schema.</p>
      additionalProperties: false
    ColumnSchema:
      type: object
      description: <p>The column schema.</p>
      properties:
        DataType:
          type: string
          description: <p>The data type of the column schema.</p>
        GeographicRole:
          type: string
          description: <p>The geographic role of the column schema.</p>
        Name:
          type: string
          description: <p>The name of the column schema.</p>
      additionalProperties: false
    DataSetConfiguration:
      type: object
      description: <p>Dataset configuration.</p>
      properties:
        Placeholder:
          type: string
          description: <p>Placeholder.</p>
        DataSetSchema:
          $ref: '#/components/schemas/DataSetSchema'
        ColumnGroupSchemaList:
          type: array
          items:
            $ref: '#/components/schemas/ColumnGroupSchema'
          maxItems: 500
          minItems: 0
          description: <p>A structure containing the list of column group schemas.</p>
      additionalProperties: false
    DataSetSchema:
      type: object
      description: <p>Dataset schema.</p>
      properties:
        ColumnSchemaList:
          type: array
          items:
            $ref: '#/components/schemas/ColumnSchema'
          maxItems: 500
          minItems: 0
          description: <p>A structure containing the list of column schemas.</p>
      additionalProperties: false
    TemplateError:
      type: object
      description: >-
        <p>List of errors that occurred when the template version creation
        failed.</p>
      properties:
        Type:
          $ref: '#/components/schemas/TemplateErrorType'
        Message:
          type: string
          pattern: .*\S.*
          description: <p>Description of the error type.</p>
      additionalProperties: false
    TemplateErrorType:
      type: string
      enum:
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - ACCESS_DENIED
    TemplateSourceAnalysis:
      type: object
      description: <p>The source analysis of the template.</p>
      properties:
        DataSetReferences:
          type: array
          items:
            $ref: '#/components/schemas/DataSetReference'
          minItems: 1
          description: >-
            <p>A structure containing information about the dataset references
            used as placeholders
                        in the template.</p>
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
      required:
        - Arn
        - DataSetReferences
      additionalProperties: false
    TemplateSourceEntity:
      type: object
      description: <p>The source entity of the template.</p>
      properties:
        SourceAnalysis:
          $ref: '#/components/schemas/TemplateSourceAnalysis'
        SourceTemplate:
          $ref: '#/components/schemas/TemplateSourceTemplate'
      additionalProperties: false
    TemplateSourceTemplate:
      type: object
      description: <p>The source template of the template.</p>
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
      required:
        - Arn
      additionalProperties: false
    TemplateVersion:
      type: object
      description: <p>A version of a template.</p>
      properties:
        Status:
          $ref: '#/components/schemas/ResourceStatus'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/TemplateError'
          minItems: 1
          description: <p>Errors associated with this template version.</p>
        CreatedTime:
          type: string
          description: <p>The time that this template version was created.</p>
          format: string
        Description:
          type: string
          maxLength: 512
          minLength: 1
          description: <p>The description of the template.</p>
        ThemeArn:
          type: string
          description: >-
            <p>The ARN of the theme associated with this version of the
            template.</p>
        DataSetConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/DataSetConfiguration'
          maxItems: 30
          minItems: 0
          description: >-
            <p>Schema of the dataset identified by the placeholder. Any
            dashboard created from this
                        template should be bound to new datasets matching the same schema described through this
                        API operation.</p>
        SourceEntityArn:
          type: string
          description: >-
            <p>The Amazon Resource Name (ARN) of an analysis or template that
            was used to create this
                        template.</p>
        VersionNumber:
          type: number
          minimum: 1
          description: <p>The version number of the template version.</p>
        Sheets:
          type: array
          items:
            $ref: '#/components/schemas/Sheet'
          maxItems: 20
          minItems: 0
          description: >-
            <p>A list of the associated sheets with the unique identifier and
            name of each sheet.</p>
      additionalProperties: false
    Template:
      type: object
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the template.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        CreatedTime:
          type: string
          description: <p>Time when this was created.</p>
          format: string
        LastUpdatedTime:
          type: string
          description: <p>Time when this was last updated.</p>
          format: string
        Name:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\u0020-\u00FF]+'
          description: <p>A display name for the template.</p>
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: <p>A list of resource permissions to be set on the template. </p>
        SourceEntity:
          $ref: '#/components/schemas/TemplateSourceEntity'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: >-
            <p>Contains a map of the key-value pairs for the resource tag or
            tags assigned to the resource.</p>
        TemplateId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
        Version:
          $ref: '#/components/schemas/TemplateVersion'
        VersionDescription:
          type: string
          maxLength: 512
          minLength: 1
          description: "<p>A description of the current template version being created. This API operation creates the\n\t\t\tfirst version of the template. Every time <code>UpdateTemplate</code> is called, a new\n\t\t\tversion is created. Each version of the template maintains a description of the version\n\t\t\tin the <code>VersionDescription</code> field.</p>"
      required:
        - AwsAccountId
        - TemplateId
        - SourceEntity
      x-stackql-resource-name: Template
    BorderStyle:
      type: object
      description: <p>The display options for tile borders for visuals.</p>
      properties:
        Show:
          type: boolean
          description: <p>The option to enable display of borders for visuals.</p>
      additionalProperties: false
    DataColorPalette:
      type: object
      description: >-
        <p>The theme colors that are used for data colors in charts. The colors
        description is a
                    hexadecimal color code that consists of six alphanumerical characters, prefixed with
                        <code>#</code>, for example #37BFF5. </p>
      properties:
        EmptyFillColor:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The hexadecimal code of a color that applies to charts where a
            lack of data is
                        highlighted.</p>
        Colors:
          type: array
          items:
            type: string
            pattern: ^#[A-F0-9]{6}$
          maxItems: 100
          minItems: 0
          description: <p>The hexadecimal codes for the colors.</p>
        MinMaxGradient:
          type: array
          items:
            type: string
            pattern: ^#[A-F0-9]{6}$
          maxItems: 100
          minItems: 0
          description: >-
            <p>The minimum and maximum hexadecimal codes that describe a color
            gradient. </p>
      additionalProperties: false
    Font:
      type: object
      properties:
        FontFamily:
          type: string
      additionalProperties: false
    GutterStyle:
      type: object
      description: <p>The display options for gutter spacing between tiles on a sheet.</p>
      properties:
        Show:
          type: boolean
          description: >-
            <p>This Boolean value controls whether to display a gutter space
            between sheet tiles.
                    </p>
      additionalProperties: false
    MarginStyle:
      type: object
      description: >-
        <p>The display options for margins around the outside edge of
        sheets.</p>
      properties:
        Show:
          type: boolean
          description: <p>This Boolean value controls whether to display sheet margins.</p>
      additionalProperties: false
    SheetStyle:
      type: object
      description: <p>The theme display options for sheets. </p>
      properties:
        TileLayout:
          $ref: '#/components/schemas/TileLayoutStyle'
        Tile:
          $ref: '#/components/schemas/TileStyle'
      additionalProperties: false
    ThemeConfiguration:
      type: object
      description: >-
        <p>The theme configuration. This configuration contains all of the
        display properties for
                    a theme.</p>
      properties:
        DataColorPalette:
          $ref: '#/components/schemas/DataColorPalette'
        UIColorPalette:
          $ref: '#/components/schemas/UIColorPalette'
        Sheet:
          $ref: '#/components/schemas/SheetStyle'
        Typography:
          $ref: '#/components/schemas/Typography'
      additionalProperties: false
    ThemeError:
      type: object
      description: <p>Theme error.</p>
      properties:
        Type:
          $ref: '#/components/schemas/ThemeErrorType'
        Message:
          type: string
          pattern: .*\S.*
          description: <p>The error message.</p>
      additionalProperties: false
    ThemeErrorType:
      type: string
      enum:
        - INTERNAL_FAILURE
    ThemeType:
      type: string
      enum:
        - QUICKSIGHT
        - CUSTOM
        - ALL
    ThemeVersion:
      type: object
      description: <p>A version of a theme.</p>
      properties:
        Status:
          $ref: '#/components/schemas/ResourceStatus'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/ThemeError'
          minItems: 1
          description: <p>Errors associated with the theme.</p>
        Description:
          type: string
          maxLength: 512
          minLength: 1
          description: <p>The description of the theme.</p>
        CreatedTime:
          type: string
          description: <p>The date and time that this theme version was created.</p>
          format: string
        Configuration:
          $ref: '#/components/schemas/ThemeConfiguration'
        BaseThemeId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
          description: >-
            <p>The Amazon QuickSight-defined ID of the theme that a custom theme
            inherits from. All
                        themes initially inherit from a default QuickSight theme.</p>
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the resource.</p>
        VersionNumber:
          type: number
          minimum: 1
          description: <p>The version number of the theme.</p>
      additionalProperties: false
    TileLayoutStyle:
      type: object
      description: <p>The display options for the layout of tiles on a sheet.</p>
      properties:
        Gutter:
          $ref: '#/components/schemas/GutterStyle'
        Margin:
          $ref: '#/components/schemas/MarginStyle'
      additionalProperties: false
    TileStyle:
      type: object
      description: <p>Display options related to tiles on a sheet.</p>
      properties:
        Border:
          $ref: '#/components/schemas/BorderStyle'
      additionalProperties: false
    Typography:
      type: object
      description: <p>The typeface for the theme.</p>
      properties:
        FontFamilies:
          type: array
          items:
            $ref: '#/components/schemas/Font'
          maxItems: 5
          minItems: 0
      additionalProperties: false
    UIColorPalette:
      type: object
      description: >-
        <p>The theme colors that apply to UI and to charts, excluding data
        colors. The colors
                    description is a hexadecimal color code that consists of six alphanumerical characters,
                    prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User
                        Guide.</i>
                </p>
      properties:
        Warning:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>This color that applies to warning and informational
            messages.</p>
        Accent:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: <p>This color is that applies to selected states and buttons.</p>
        AccentForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        accent color.</p>
        SecondaryBackground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The background color that applies to the sheet background and
            sheet controls.</p>
        DangerForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        error color.</p>
        PrimaryBackground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The background color that applies to visuals and other high
            emphasis UI.</p>
        Dimension:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The color that applies to the names of fields that are identified
            as
                        dimensions.</p>
        SecondaryForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any sheet title, sheet
            control text, or UI that
                        appears over the secondary background.</p>
        WarningForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        warning color.</p>
        DimensionForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        dimension color.</p>
        PrimaryForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The color of text and other foreground elements that appear over
            the primary
                        background regions, such as grid lines, borders, table banding, icons, and so on.</p>
        Success:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The color that applies to success messages, for example the check
            mark for a
                        successful download.</p>
        Danger:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: <p>The color that applies to error messages.</p>
        SuccessForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        success color.</p>
        Measure:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The color that applies to the names of fields that are identified
            as measures.</p>
        MeasureForeground:
          type: string
          pattern: ^#[A-F0-9]{6}$
          description: >-
            <p>The foreground color that applies to any text or other elements
            that appear over the
                        measure color.</p>
      additionalProperties: false
    Theme:
      type: object
      properties:
        Arn:
          type: string
          description: <p>The Amazon Resource Name (ARN) of the theme.</p>
        AwsAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
        BaseThemeId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
          description: "<p>The ID of the theme that a custom theme will inherit from. All themes inherit from one of\n\t\t\tthe starting themes defined by Amazon QuickSight. For a list of the starting themes, use\n\t\t\t\t<code>ListThemes</code> or choose <b>Themes</b> from\n\t\t\twithin a QuickSight analysis. </p>"
        Configuration:
          $ref: '#/components/schemas/ThemeConfiguration'
        CreatedTime:
          type: string
          description: <p>The date and time that the theme was created.</p>
          format: string
        LastUpdatedTime:
          type: string
          description: <p>The date and time that the theme was last updated.</p>
          format: string
        Name:
          type: string
          maxLength: 2048
          minLength: 1
          description: <p>A display name for the theme.</p>
        Permissions:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePermission'
          maxItems: 64
          minItems: 1
          description: "<p>A valid grouping of resource permissions to apply to the new theme.\n\t\t\t</p>"
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: "<p>A map of the key-value pairs for the resource tag or tags that you want to add to the\n\t\t\tresource.</p>"
        ThemeId:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: '[\w\-]+'
        Type:
          $ref: '#/components/schemas/ThemeType'
        Version:
          $ref: '#/components/schemas/ThemeVersion'
        VersionDescription:
          type: string
          maxLength: 512
          minLength: 1
          description: "<p>A description of the first version of the theme that you're creating. Every time\n\t\t\t\t<code>UpdateTheme</code> is called, a new version is created. Each version of the\n\t\t\ttheme has a description of the version in the <code>VersionDescription</code>\n\t\t\tfield.</p>"
      required:
        - AwsAccountId
        - ThemeId
      x-stackql-resource-name: Theme
x-stackql-views:
  - Analysis:
      name: Analysis
      id: aws.quicksight.Analysis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AnalysisId') as analysis_id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.DataSetArns') as data_set_arns,

              JSON_EXTRACT(Properties, '$.Errors') as errors,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Parameters.StringParameters') as
              parameters_string_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.DecimalParameters') as
              parameters_decimal_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.IntegerParameters') as
              parameters_integer_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.DateTimeParameters') as
              parameters_date_time_parameters,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.Sheets') as sheets,

              JSON_EXTRACT(Properties, '$.SourceEntity.SourceTemplate') as
              source_entity_source_template,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.ThemeArn') as theme_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::Analysis' ;
  - Dashboard:
      name: Dashboard
      id: aws.quicksight.Dashboard
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.DashboardId') as dashboard_id,

              JSON_EXTRACT(Properties,
              '$.DashboardPublishOptions.SheetControlsOption') as
              dashboard_publish_options_sheet_controls_option,

              JSON_EXTRACT(Properties,
              '$.DashboardPublishOptions.ExportToCSVOption') as
              dashboard_publish_options_export_to_cs_voption,

              JSON_EXTRACT(Properties,
              '$.DashboardPublishOptions.AdHocFilteringOption') as
              dashboard_publish_options_ad_hoc_filtering_option,

              JSON_EXTRACT(Properties, '$.LastPublishedTime') as
              last_published_time,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Parameters.StringParameters') as
              parameters_string_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.DecimalParameters') as
              parameters_decimal_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.IntegerParameters') as
              parameters_integer_parameters,

              JSON_EXTRACT(Properties, '$.Parameters.DateTimeParameters') as
              parameters_date_time_parameters,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.SourceEntity.SourceTemplate') as
              source_entity_source_template,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.ThemeArn') as theme_arn,

              JSON_EXTRACT(Properties, '$.Version.Status') as version_status,

              JSON_EXTRACT(Properties, '$.Version.Errors') as version_errors,

              JSON_EXTRACT(Properties, '$.Version.CreatedTime') as
              version_created_time,

              JSON_EXTRACT(Properties, '$.Version.Description') as
              version_description,

              JSON_EXTRACT(Properties, '$.Version.DataSetArns') as
              version_data_set_arns,

              JSON_EXTRACT(Properties, '$.Version.ThemeArn') as
              version_theme_arn,

              JSON_EXTRACT(Properties, '$.Version.Arn') as version_arn,

              JSON_EXTRACT(Properties, '$.Version.SourceEntityArn') as
              version_source_entity_arn,

              JSON_EXTRACT(Properties, '$.Version.VersionNumber') as
              version_version_number,

              JSON_EXTRACT(Properties, '$.Version.Sheets') as version_sheets,

              JSON_EXTRACT(Properties, '$.VersionDescription') as
              version_description

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::Dashboard' ;
  - DataSet:
      name: DataSet
      id: aws.quicksight.DataSet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.ColumnGroups') as column_groups,

              JSON_EXTRACT(Properties, '$.ColumnLevelPermissionRules') as
              column_level_permission_rules,

              JSON_EXTRACT(Properties, '$.ConsumedSpiceCapacityInBytes') as
              consumed_spice_capacity_in_bytes,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.DataSetId') as data_set_id,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.OutputColumns') as output_columns,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.RowLevelPermissionDataSet.Arn') as
              row_level_permission_data_set_arn,

              JSON_EXTRACT(Properties, '$.RowLevelPermissionDataSet.Namespace')
              as row_level_permission_data_set_namespace,

              JSON_EXTRACT(Properties,
              '$.RowLevelPermissionDataSet.PermissionPolicy') as
              row_level_permission_data_set_permission_policy,

              JSON_EXTRACT(Properties,
              '$.RowLevelPermissionDataSet.FormatVersion') as
              row_level_permission_data_set_format_version,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties,
              '$.IngestionWaitPolicy.WaitForSpiceIngestion') as
              ingestion_wait_policy_wait_for_spice_ingestion,

              JSON_EXTRACT(Properties,
              '$.IngestionWaitPolicy.IngestionWaitTimeInHours') as
              ingestion_wait_policy_ingestion_wait_time_in_hours,

              JSON_EXTRACT(Properties,
              '$.DataSetUsageConfiguration.DisableUseAsDirectQuerySource') as
              data_set_usage_configuration_disable_use_as_direct_query_source,

              JSON_EXTRACT(Properties,
              '$.DataSetUsageConfiguration.DisableUseAsImportedSource') as
              data_set_usage_configuration_disable_use_as_imported_source

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::DataSet' ;
  - DataSource:
      name: DataSource
      id: aws.quicksight.DataSource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.AlternateDataSourceParameters') as
              alternate_data_source_parameters,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.Credentials.CopySourceArn') as
              credentials_copy_source_arn,

              JSON_EXTRACT(Properties, '$.Credentials.CredentialPair') as
              credentials_credential_pair,

              JSON_EXTRACT(Properties, '$.Credentials.SecretArn') as
              credentials_secret_arn,

              JSON_EXTRACT(Properties, '$.DataSourceId') as data_source_id,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.AuroraPostgreSqlParameters') as
              data_source_parameters_aurora_postgre_sql_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.TeradataParameters') as
              data_source_parameters_teradata_parameters,

              JSON_EXTRACT(Properties, '$.DataSourceParameters.RdsParameters')
              as data_source_parameters_rds_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.AthenaParameters') as
              data_source_parameters_athena_parameters,

              JSON_EXTRACT(Properties, '$.DataSourceParameters.SparkParameters')
              as data_source_parameters_spark_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.MariaDbParameters') as
              data_source_parameters_maria_db_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.OracleParameters') as
              data_source_parameters_oracle_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.PrestoParameters') as
              data_source_parameters_presto_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.RedshiftParameters') as
              data_source_parameters_redshift_parameters,

              JSON_EXTRACT(Properties, '$.DataSourceParameters.MySqlParameters')
              as data_source_parameters_my_sql_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.SqlServerParameters') as
              data_source_parameters_sql_server_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.SnowflakeParameters') as
              data_source_parameters_snowflake_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.AmazonElasticsearchParameters') as
              data_source_parameters_amazon_elasticsearch_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.AmazonOpenSearchParameters') as
              data_source_parameters_amazon_open_search_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.PostgreSqlParameters') as
              data_source_parameters_postgre_sql_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.AuroraParameters') as
              data_source_parameters_aurora_parameters,

              JSON_EXTRACT(Properties, '$.DataSourceParameters.S3Parameters') as
              data_source_parameters_s3_parameters,

              JSON_EXTRACT(Properties,
              '$.DataSourceParameters.DatabricksParameters') as
              data_source_parameters_databricks_parameters,

              JSON_EXTRACT(Properties, '$.ErrorInfo.Type') as error_info_type,

              JSON_EXTRACT(Properties, '$.ErrorInfo.Message') as
              error_info_message,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.SslProperties.DisableSsl') as
              ssl_properties_disable_ssl,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties,
              '$.VpcConnectionProperties.VpcConnectionArn') as
              vpc_connection_properties_vpc_connection_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::DataSource' ;
  - Template:
      name: Template
      id: aws.quicksight.Template
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.SourceEntity.SourceAnalysis') as
              source_entity_source_analysis,

              JSON_EXTRACT(Properties, '$.SourceEntity.SourceTemplate') as
              source_entity_source_template,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.TemplateId') as template_id,

              JSON_EXTRACT(Properties, '$.Version.Status') as version_status,

              JSON_EXTRACT(Properties, '$.Version.Errors') as version_errors,

              JSON_EXTRACT(Properties, '$.Version.CreatedTime') as
              version_created_time,

              JSON_EXTRACT(Properties, '$.Version.Description') as
              version_description,

              JSON_EXTRACT(Properties, '$.Version.ThemeArn') as
              version_theme_arn,

              JSON_EXTRACT(Properties, '$.Version.DataSetConfigurations') as
              version_data_set_configurations,

              JSON_EXTRACT(Properties, '$.Version.SourceEntityArn') as
              version_source_entity_arn,

              JSON_EXTRACT(Properties, '$.Version.VersionNumber') as
              version_version_number,

              JSON_EXTRACT(Properties, '$.Version.Sheets') as version_sheets,

              JSON_EXTRACT(Properties, '$.VersionDescription') as
              version_description

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::Template' ;
  - Theme:
      name: Theme
      id: aws.quicksight.Theme
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,

              JSON_EXTRACT(Properties, '$.BaseThemeId') as base_theme_id,

              JSON_EXTRACT(Properties, '$.Configuration.DataColorPalette') as
              configuration_data_color_palette,

              JSON_EXTRACT(Properties, '$.Configuration.UIColorPalette') as
              configuration_ui_color_palette,

              JSON_EXTRACT(Properties, '$.Configuration.Sheet') as
              configuration_sheet,

              JSON_EXTRACT(Properties, '$.Configuration.Typography') as
              configuration_typography,

              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,

              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as
              last_updated_time,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Permissions') as permissions,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.ThemeId') as theme_id,

              JSON_EXTRACT(Properties, '$.Version.Status') as version_status,

              JSON_EXTRACT(Properties, '$.Version.Errors') as version_errors,

              JSON_EXTRACT(Properties, '$.Version.Description') as
              version_description,

              JSON_EXTRACT(Properties, '$.Version.CreatedTime') as
              version_created_time,

              JSON_EXTRACT(Properties, '$.Version.Configuration') as
              version_configuration,

              JSON_EXTRACT(Properties, '$.Version.BaseThemeId') as
              version_base_theme_id,

              JSON_EXTRACT(Properties, '$.Version.Arn') as version_arn,

              JSON_EXTRACT(Properties, '$.Version.VersionNumber') as
              version_version_number,

              JSON_EXTRACT(Properties, '$.VersionDescription') as
              version_description

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QuickSight::Theme' ;
