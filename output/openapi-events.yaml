openapi: 3.0.0
info:
  title: Events
  version: 1.0.0
paths: {}
components:
  schemas:
    ApiDestination:
      type: object
      properties:
        Name:
          description: Name of the apiDestination.
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Description:
          type: string
          maxLength: 512
          x-is-top-level-property: true
        ConnectionArn:
          description: The arn of the connection.
          type: string
          x-is-top-level-property: true
        Arn:
          description: The arn of the api destination.
          type: string
          x-is-top-level-property: true
        InvocationRateLimitPerSecond:
          type: integer
          minimum: 1
          x-is-top-level-property: true
        InvocationEndpoint:
          description: Url endpoint to invoke.
          type: string
          x-is-top-level-property: true
        HttpMethod:
          type: string
          enum:
            - GET
            - HEAD
            - POST
            - OPTIONS
            - PUT
            - DELETE
            - PATCH
          x-is-top-level-property: true
      required:
        - ConnectionArn
        - InvocationEndpoint
        - HttpMethod
      x-stackql-resource-name: ApiDestination
    Archive:
      type: object
      properties:
        ArchiveName:
          type: string
          minLength: 1
          maxLength: 48
          x-is-top-level-property: true
        SourceArn:
          type: string
          x-is-top-level-property: true
        Description:
          type: string
          x-is-top-level-property: true
        EventPattern:
          type: object
          x-is-top-level-property: true
        Arn:
          type: string
          x-is-top-level-property: true
        RetentionDays:
          type: integer
          x-is-top-level-property: true
      required:
        - SourceArn
      x-stackql-resource-name: Archive
    AuthParameters:
      type: object
      minProperties: 1
      maxProperties: 2
      properties:
        ApiKeyAuthParameters:
          $ref: '#/components/schemas/ApiKeyAuthParameters'
        BasicAuthParameters:
          $ref: '#/components/schemas/BasicAuthParameters'
        OAuthParameters:
          $ref: '#/components/schemas/OAuthParameters'
        InvocationHttpParameters:
          $ref: '#/components/schemas/ConnectionHttpParameters'
      oneOf:
        - required:
            - BasicAuthParameters
        - required:
            - OAuthParameters
        - required:
            - ApiKeyAuthParameters
      additionalProperties: false
    BasicAuthParameters:
      type: object
      properties:
        Username:
          type: string
        Password:
          type: string
      required:
        - Username
        - Password
      additionalProperties: false
    OAuthParameters:
      type: object
      properties:
        ClientParameters:
          $ref: '#/components/schemas/ClientParameters'
        AuthorizationEndpoint:
          type: string
          minLength: 1
          maxLength: 2048
        HttpMethod:
          type: string
          enum:
            - GET
            - POST
            - PUT
        OAuthHttpParameters:
          $ref: '#/components/schemas/ConnectionHttpParameters'
      required:
        - ClientParameters
        - AuthorizationEndpoint
        - HttpMethod
      additionalProperties: false
    ApiKeyAuthParameters:
      type: object
      properties:
        ApiKeyName:
          type: string
        ApiKeyValue:
          type: string
      required:
        - ApiKeyName
        - ApiKeyValue
      additionalProperties: false
    ClientParameters:
      type: object
      properties:
        ClientID:
          type: string
        ClientSecret:
          type: string
      required:
        - ClientID
        - ClientSecret
      additionalProperties: false
    ConnectionHttpParameters:
      type: object
      properties:
        HeaderParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        QueryStringParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        BodyParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      additionalProperties: false
    Parameter:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
        IsValueSecret:
          type: boolean
          default: true
      required:
        - Key
        - Value
      additionalProperties: false
    Connection:
      type: object
      properties:
        Name:
          description: Name of the connection.
          type: string
          minLength: 1
          maxLength: 64
          x-is-top-level-property: true
        Arn:
          description: The arn of the connection resource.
          type: string
          x-is-top-level-property: true
        SecretArn:
          description: >-
            The arn of the secrets manager secret created in the customer
            account.
          type: string
          x-is-top-level-property: true
        Description:
          description: Description of the connection.
          type: string
          maxLength: 512
          x-is-top-level-property: true
        AuthorizationType:
          type: string
          enum:
            - API_KEY
            - BASIC
            - OAUTH_CLIENT_CREDENTIALS
          x-is-top-level-property: true
        AuthParameters:
          $ref: '#/components/schemas/AuthParameters'
          x-is-top-level-property: true
      required:
        - AuthorizationType
        - AuthParameters
      x-stackql-resource-name: Connection
    HealthCheck:
      type: string
      minLength: 1
      maxLength: 1600
      pattern: ^arn:aws([a-z]|\-)*:route53:::healthcheck/[\-a-z0-9]+$
    Primary:
      type: object
      additionalProperties: false
      properties:
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
      required:
        - HealthCheck
    Route:
      type: string
      minLength: 9
      maxLength: 20
      pattern: ^[\-a-z0-9]+$
    Secondary:
      type: object
      additionalProperties: false
      properties:
        Route:
          $ref: '#/components/schemas/Route'
      required:
        - Route
    FailoverConfig:
      type: object
      additionalProperties: false
      properties:
        Primary:
          $ref: '#/components/schemas/Primary'
        Secondary:
          $ref: '#/components/schemas/Secondary'
      required:
        - Primary
        - Secondary
    RoutingConfig:
      type: object
      additionalProperties: false
      properties:
        FailoverConfig:
          $ref: '#/components/schemas/FailoverConfig'
      required:
        - FailoverConfig
    EventBusArn:
      type: string
      minLength: 1
      maxLength: 512
      pattern: ^arn:aws[a-z-]*:events:[a-z]{2}-[a-z-]+-\d+:\d{12}:event-bus/[\w.-]+$
    EndpointEventBus:
      type: object
      additionalProperties: false
      properties:
        EventBusArn:
          $ref: '#/components/schemas/EventBusArn'
      required:
        - EventBusArn
    EventBuses:
      type: array
      x-insertionOrder: false
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/EndpointEventBus'
    ReplicationState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ReplicationConfig:
      type: object
      additionalProperties: false
      properties:
        State:
          $ref: '#/components/schemas/ReplicationState'
      required:
        - State
    Endpoint:
      type: object
      properties:
        Name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[\.\-_A-Za-z0-9]+$
          x-is-top-level-property: true
        Arn:
          type: string
          minLength: 1
          maxLength: 1600
          pattern: >-
            ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:endpoint\/[/\.\-_A-Za-z0-9]+$
          x-is-top-level-property: true
        RoleArn:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^arn:aws[a-z-]*:iam::\d{12}:role\/[\w+=,.@/-]+$
          x-is-top-level-property: true
        Description:
          type: string
          maxLength: 512
          pattern: .*
          x-is-top-level-property: true
        RoutingConfig:
          $ref: '#/components/schemas/RoutingConfig'
          x-is-top-level-property: true
        ReplicationConfig:
          $ref: '#/components/schemas/ReplicationConfig'
          x-is-top-level-property: true
        EventBuses:
          $ref: '#/components/schemas/EventBuses'
          x-is-top-level-property: true
        EndpointId:
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[A-Za-z0-9\-]+[\.][A-Za-z0-9\-]+$
          x-is-top-level-property: true
        EndpointUrl:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^(https://)?[\.\-a-z0-9]+$
          x-is-top-level-property: true
        State:
          type: string
          enum:
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
            - CREATE_FAILED
            - UPDATE_FAILED
          x-is-top-level-property: true
        StateReason:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
          x-is-top-level-property: true
      required:
        - RoutingConfig
        - EventBuses
      x-stackql-resource-name: Endpoint
    TagEntry:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    EventBus:
      type: object
      properties:
        Policy:
          type: string
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        Arn:
          type: string
          x-is-top-level-property: true
        EventSourceName:
          type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagEntry'
          x-is-top-level-property: true
        Name:
          type: string
          x-is-top-level-property: true
      required:
        - Name
      x-stackql-resource-name: EventBus
    Condition:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Type:
          type: string
        Key:
          type: string
    EventBusPolicy:
      type: object
      properties:
        EventBusName:
          type: string
          x-is-top-level-property: true
        Condition:
          $ref: '#/components/schemas/Condition'
          x-is-top-level-property: true
        Action:
          type: string
          x-is-top-level-property: true
        StatementId:
          type: string
          x-is-top-level-property: true
        Statement:
          type: object
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        Principal:
          type: string
          x-is-top-level-property: true
      required:
        - StatementId
      x-stackql-resource-name: EventBusPolicy
    CapacityProviderStrategyItem:
      type: object
      additionalProperties: false
      properties:
        Base:
          type: integer
        Weight:
          type: integer
        CapacityProvider:
          type: string
      required:
        - CapacityProvider
    HttpParameters:
      type: object
      additionalProperties: false
      properties:
        PathParameterValues:
          type: array
          uniqueItems: true
          items:
            type: string
        HeaderParameters:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        QueryStringParameters:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
    DeadLetterConfig:
      type: object
      additionalProperties: false
      properties:
        Arn:
          type: string
    RunCommandParameters:
      type: object
      additionalProperties: false
      properties:
        RunCommandTargets:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RunCommandTarget'
      required:
        - RunCommandTargets
    PlacementStrategy:
      type: object
      additionalProperties: false
      properties:
        Field:
          type: string
        Type:
          type: string
    InputTransformer:
      type: object
      additionalProperties: false
      properties:
        InputTemplate:
          type: string
        InputPathsMap:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
      required:
        - InputTemplate
    KinesisParameters:
      type: object
      additionalProperties: false
      properties:
        PartitionKeyPath:
          type: string
      required:
        - PartitionKeyPath
    BatchRetryStrategy:
      type: object
      additionalProperties: false
      properties:
        Attempts:
          type: integer
    RedshiftDataParameters:
      type: object
      additionalProperties: false
      properties:
        StatementName:
          type: string
        Database:
          type: string
        SecretManagerArn:
          type: string
        DbUser:
          type: string
        Sql:
          type: string
        WithEvent:
          type: boolean
      required:
        - Database
        - Sql
    Target:
      type: object
      additionalProperties: false
      properties:
        InputPath:
          type: string
        HttpParameters:
          $ref: '#/components/schemas/HttpParameters'
        DeadLetterConfig:
          $ref: '#/components/schemas/DeadLetterConfig'
        RunCommandParameters:
          $ref: '#/components/schemas/RunCommandParameters'
        InputTransformer:
          $ref: '#/components/schemas/InputTransformer'
        KinesisParameters:
          $ref: '#/components/schemas/KinesisParameters'
        RoleArn:
          type: string
        RedshiftDataParameters:
          $ref: '#/components/schemas/RedshiftDataParameters'
        Input:
          type: string
        SqsParameters:
          $ref: '#/components/schemas/SqsParameters'
        EcsParameters:
          $ref: '#/components/schemas/EcsParameters'
        BatchParameters:
          $ref: '#/components/schemas/BatchParameters'
        Id:
          type: string
        Arn:
          type: string
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/SageMakerPipelineParameters'
        RetryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
      required:
        - Id
        - Arn
    PlacementConstraint:
      type: object
      additionalProperties: false
      properties:
        Expression:
          type: string
        Type:
          type: string
    AwsVpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          type: array
          uniqueItems: true
          items:
            type: string
        Subnets:
          type: array
          uniqueItems: true
          items:
            type: string
        AssignPublicIp:
          type: string
      required:
        - Subnets
    SqsParameters:
      type: object
      additionalProperties: false
      properties:
        MessageGroupId:
          type: string
      required:
        - MessageGroupId
    RunCommandTarget:
      type: object
      additionalProperties: false
      properties:
        Values:
          type: array
          uniqueItems: true
          items:
            type: string
        Key:
          type: string
      required:
        - Values
        - Key
    EcsParameters:
      type: object
      additionalProperties: false
      properties:
        PlatformVersion:
          type: string
        Group:
          type: string
        EnableECSManagedTags:
          type: boolean
        EnableExecuteCommand:
          type: boolean
        PlacementConstraints:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PlacementConstraint'
        PropagateTags:
          type: string
        TaskCount:
          type: integer
        PlacementStrategies:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PlacementStrategy'
        CapacityProviderStrategy:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/CapacityProviderStrategyItem'
        LaunchType:
          type: string
        ReferenceId:
          type: string
        TagList:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        TaskDefinitionArn:
          type: string
      required:
        - TaskDefinitionArn
    BatchParameters:
      type: object
      additionalProperties: false
      properties:
        JobName:
          type: string
        RetryStrategy:
          $ref: '#/components/schemas/BatchRetryStrategy'
        ArrayProperties:
          $ref: '#/components/schemas/BatchArrayProperties'
        JobDefinition:
          type: string
      required:
        - JobName
        - JobDefinition
    NetworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        AwsVpcConfiguration:
          $ref: '#/components/schemas/AwsVpcConfiguration'
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
    SageMakerPipelineParameters:
      type: object
      additionalProperties: false
      properties:
        PipelineParameterList:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SageMakerPipelineParameter'
    RetryPolicy:
      type: object
      additionalProperties: false
      properties:
        MaximumEventAgeInSeconds:
          type: integer
        MaximumRetryAttempts:
          type: integer
    BatchArrayProperties:
      type: object
      additionalProperties: false
      properties:
        Size:
          type: integer
    SageMakerPipelineParameter:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Name:
          type: string
      required:
        - Value
        - Name
    Rule:
      type: object
      properties:
        EventBusName:
          type: string
          x-is-top-level-property: true
        EventPattern:
          type: object
          x-is-top-level-property: true
        ScheduleExpression:
          type: string
          x-is-top-level-property: true
        Description:
          type: string
          x-is-top-level-property: true
        State:
          type: string
          x-is-top-level-property: true
        Targets:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Target'
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        Arn:
          type: string
          x-is-top-level-property: true
        RoleArn:
          type: string
          x-is-top-level-property: true
        Name:
          type: string
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: Rule
    TagsEntry:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Discoverer:
      type: object
      properties:
        DiscovererArn:
          type: string
          x-is-top-level-property: true
        DiscovererId:
          type: string
          x-is-top-level-property: true
        CrossAccount:
          type: boolean
          x-is-top-level-property: true
        Description:
          type: string
          x-is-top-level-property: true
        SourceArn:
          type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          x-is-top-level-property: true
      required:
        - SourceArn
      x-stackql-resource-name: Discoverer
    Registry:
      type: object
      properties:
        RegistryName:
          type: string
          x-is-top-level-property: true
        Description:
          type: string
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        RegistryArn:
          type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          x-is-top-level-property: true
      required: []
      x-stackql-resource-name: Registry
    RegistryPolicy:
      type: object
      properties:
        Id:
          type: string
          x-is-top-level-property: true
        Policy:
          type: object
          x-is-top-level-property: true
        RegistryName:
          type: string
          x-is-top-level-property: true
        RevisionId:
          type: string
          x-is-top-level-property: true
      required:
        - RegistryName
        - Policy
      x-stackql-resource-name: RegistryPolicy
    Schema:
      type: object
      properties:
        Type:
          type: string
          x-is-top-level-property: true
        Description:
          type: string
          x-is-top-level-property: true
        SchemaVersion:
          type: string
          x-is-top-level-property: true
        Content:
          type: string
          x-is-top-level-property: true
        RegistryName:
          type: string
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        SchemaArn:
          type: string
          x-is-top-level-property: true
        SchemaName:
          type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          x-is-top-level-property: true
      required:
        - Type
        - Content
        - RegistryName
      x-stackql-resource-name: Schema
x-stackql-views:
  - ApiDestination:
      name: ApiDestination
      id: aws.events.ApiDestination
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.InvocationRateLimitPerSecond') as
              invocation_rate_limit_per_second,

              JSON_EXTRACT(Properties, '$.InvocationEndpoint') as
              invocation_endpoint,

              JSON_EXTRACT(Properties, '$.HttpMethod') as http_method

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::ApiDestination' ;
  - Archive:
      name: Archive
      id: aws.events.Archive
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ArchiveName') as archive_name,

              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.EventPattern') as event_pattern,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.RetentionDays') as retention_days

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Archive' ;
  - Connection:
      name: Connection
      id: aws.events.Connection
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.SecretArn') as secret_arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.AuthorizationType') as
              authorization_type,

              JSON_EXTRACT(Properties, '$.AuthParameters.ApiKeyAuthParameters')
              as auth_parameters_api_key_auth_parameters,

              JSON_EXTRACT(Properties, '$.AuthParameters.BasicAuthParameters')
              as auth_parameters_basic_auth_parameters,

              JSON_EXTRACT(Properties, '$.AuthParameters.OAuthParameters') as
              auth_parameters_oauth_parameters,

              JSON_EXTRACT(Properties,
              '$.AuthParameters.InvocationHttpParameters') as
              auth_parameters_invocation_http_parameters

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Connection' ;
  - Endpoint:
      name: Endpoint
      id: aws.events.Endpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.RoutingConfig.FailoverConfig') as
              routing_config_failover_config,

              JSON_EXTRACT(Properties, '$.ReplicationConfig.State') as
              replication_config_state,

              JSON_EXTRACT(Properties, '$.EndpointId') as endpoint_id,

              JSON_EXTRACT(Properties, '$.EndpointUrl') as endpoint_url,

              JSON_EXTRACT(Properties, '$.State') as state,

              JSON_EXTRACT(Properties, '$.StateReason') as state_reason

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Endpoint' ;
  - EventBus:
      name: EventBus
      id: aws.events.EventBus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Policy') as policy,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.EventSourceName') as
              event_source_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::EventBus' ;
  - EventBusPolicy:
      name: EventBusPolicy
      id: aws.events.EventBusPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.EventBusName') as event_bus_name,

              JSON_EXTRACT(Properties, '$.Condition.Value') as condition_value,

              JSON_EXTRACT(Properties, '$.Condition.Type') as condition_type,

              JSON_EXTRACT(Properties, '$.Condition.Key') as condition_key,

              JSON_EXTRACT(Properties, '$.Action') as action,

              JSON_EXTRACT(Properties, '$.StatementId') as statement_id,

              JSON_EXTRACT(Properties, '$.Statement') as statement,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Principal') as principal

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::EventBusPolicy' ;
  - Rule:
      name: Rule
      id: aws.events.Rule
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.EventBusName') as event_bus_name,

              JSON_EXTRACT(Properties, '$.EventPattern') as event_pattern,

              JSON_EXTRACT(Properties, '$.ScheduleExpression') as
              schedule_expression,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.State') as state,

              JSON_EXTRACT(Properties, '$.Targets') as targets,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Rule' ;
  - Discoverer:
      name: Discoverer
      id: aws.events.Discoverer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.DiscovererArn') as discoverer_arn,

              JSON_EXTRACT(Properties, '$.DiscovererId') as discoverer_id,

              JSON_EXTRACT(Properties, '$.CrossAccount') as cross_account,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Discoverer' ;
  - Registry:
      name: Registry
      id: aws.events.Registry
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.RegistryArn') as registry_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Registry' ;
  - RegistryPolicy:
      name: RegistryPolicy
      id: aws.events.RegistryPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Policy') as policy,

              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,

              JSON_EXTRACT(Properties, '$.RevisionId') as revision_id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::RegistryPolicy' ;
  - Schema:
      name: Schema
      id: aws.events.Schema
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Type') as type,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,

              JSON_EXTRACT(Properties, '$.Content') as content,

              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn,

              JSON_EXTRACT(Properties, '$.SchemaName') as schema_name,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::Events::Schema' ;
