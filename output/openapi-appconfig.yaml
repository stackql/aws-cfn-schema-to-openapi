openapi: 3.0.0
info:
  title: AppConfig
  version: 1.0.0
paths: {}
components:
  schemas:
    Tags:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
    Application:
      type: object
      properties:
        Description:
          type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: Application
    Validators:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Content:
          type: string
    ConfigurationProfile:
      type: object
      properties:
        LocationUri:
          type: string
        Type:
          type: string
        Description:
          type: string
        Validators:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Validators'
        RetrievalRoleArn:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - LocationUri
        - ApplicationId
        - Name
      x-stackql-resource-name: ConfigurationProfile
    Deployment:
      type: object
      properties:
        DeploymentStrategyId:
          type: string
        ConfigurationProfileId:
          type: string
        EnvironmentId:
          type: string
        KmsKeyIdentifier:
          type: string
        Description:
          type: string
        ConfigurationVersion:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
      required:
        - DeploymentStrategyId
        - ConfigurationProfileId
        - EnvironmentId
        - ConfigurationVersion
        - ApplicationId
      x-stackql-resource-name: Deployment
    DeploymentStrategy:
      type: object
      properties:
        ReplicateTo:
          type: string
        GrowthType:
          type: string
        Description:
          type: string
        DeploymentDurationInMinutes:
          type: number
        GrowthFactor:
          type: number
        Id:
          type: string
        FinalBakeTimeInMinutes:
          type: number
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - ReplicateTo
        - DeploymentDurationInMinutes
        - GrowthFactor
        - Name
      x-stackql-resource-name: DeploymentStrategy
    Monitors:
      type: object
      additionalProperties: false
      properties:
        AlarmArn:
          type: string
        AlarmRoleArn:
          type: string
    Environment:
      type: object
      properties:
        Monitors:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Monitors'
        Description:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - ApplicationId
        - Name
      x-stackql-resource-name: Environment
    HostedConfigurationVersion:
      type: object
      properties:
        ConfigurationProfileId:
          type: string
        Description:
          type: string
        ContentType:
          type: string
        LatestVersionNumber:
          type: number
        Content:
          type: string
        VersionLabel:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
      required:
        - ConfigurationProfileId
        - ContentType
        - Content
        - ApplicationId
      x-stackql-resource-name: HostedConfigurationVersion
x-stackql-views:
  - Application:
      name: Application
      id: aws.appconfig.Application
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::Application' ;
  - ConfigurationProfile:
      name: ConfigurationProfile
      id: aws.appconfig.ConfigurationProfile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri,

              JSON_EXTRACT(Properties, '$.Type') as type,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Validators') as validators,

              JSON_EXTRACT(Properties, '$.RetrievalRoleArn') as
              retrieval_role_arn,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::ConfigurationProfile' ;
  - Deployment:
      name: Deployment
      id: aws.appconfig.Deployment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.DeploymentStrategyId') as
              deployment_strategy_id,

              JSON_EXTRACT(Properties, '$.ConfigurationProfileId') as
              configuration_profile_id,

              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,

              JSON_EXTRACT(Properties, '$.KmsKeyIdentifier') as
              kms_key_identifier,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ConfigurationVersion') as
              configuration_version,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::Deployment' ;
  - DeploymentStrategy:
      name: DeploymentStrategy
      id: aws.appconfig.DeploymentStrategy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ReplicateTo') as replicate_to,

              JSON_EXTRACT(Properties, '$.GrowthType') as growth_type,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.DeploymentDurationInMinutes') as
              deployment_duration_in_minutes,

              JSON_EXTRACT(Properties, '$.GrowthFactor') as growth_factor,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.FinalBakeTimeInMinutes') as
              final_bake_time_in_minutes,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::DeploymentStrategy' ;
  - Environment:
      name: Environment
      id: aws.appconfig.Environment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Monitors') as monitors,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::Environment' ;
  - HostedConfigurationVersion:
      name: HostedConfigurationVersion
      id: aws.appconfig.HostedConfigurationVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ConfigurationProfileId') as
              configuration_profile_id,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ContentType') as content_type,

              JSON_EXTRACT(Properties, '$.LatestVersionNumber') as
              latest_version_number,

              JSON_EXTRACT(Properties, '$.Content') as content,

              JSON_EXTRACT(Properties, '$.VersionLabel') as version_label,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::AppConfig::HostedConfigurationVersion'
              ;
