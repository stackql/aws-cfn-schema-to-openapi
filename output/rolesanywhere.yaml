openapi: 3.0.0
info:
  title: RolesAnywhere
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    CRL:
      type: object
      properties:
        CrlData:
          type: string
        CrlId:
          type: string
          pattern: '[a-f0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}'
        Enabled:
          type: boolean
        Name:
          type: string
        TrustAnchorArn:
          type: string
          pattern: ^arn:aws(-[^:]+)?:rolesanywhere(:.*){2}(:trust-anchor.*)$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
      required:
        - Name
        - CrlData
      x-stackql-resource-name: CRL
    Profile:
      type: object
      properties:
        DurationSeconds:
          type: number
          maximum: 43200
          minimum: 900
        Enabled:
          type: boolean
        ManagedPolicyArns:
          type: array
          items:
            type: string
        Name:
          type: string
        ProfileArn:
          type: string
        ProfileId:
          type: string
          pattern: '[a-f0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}'
        RequireInstanceProperties:
          type: boolean
        RoleArns:
          type: array
          items:
            type: string
            maxLength: 1011
            minLength: 1
        SessionPolicy:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
      required:
        - Name
        - RoleArns
      x-stackql-resource-name: Profile
    Source:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/TrustAnchorType'
        SourceData:
          $ref: '#/components/schemas/SourceData'
      additionalProperties: false
    SourceData:
      oneOf:
        - type: object
          title: X509CertificateData
          properties:
            X509CertificateData:
              type: string
          required:
            - X509CertificateData
          additionalProperties: false
        - type: object
          title: AcmPcaArn
          properties:
            AcmPcaArn:
              type: string
          required:
            - AcmPcaArn
          additionalProperties: false
    TrustAnchorType:
      type: string
      enum:
        - AWS_ACM_PCA
        - CERTIFICATE_BUNDLE
        - SELF_SIGNED_REPOSITORY
    TrustAnchor:
      type: object
      properties:
        Enabled:
          type: boolean
        Name:
          type: string
        Source:
          $ref: '#/components/schemas/Source'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        TrustAnchorId:
          type: string
          pattern: '[a-f0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}'
        TrustAnchorArn:
          type: string
          pattern: '[a-f0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}'
      required:
        - Name
        - Source
      x-stackql-resource-name: TrustAnchor
x-stackql-views:
  - CRL:
      name: CRL
      id: aws.rolesanywhere.CRL
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.CrlData') as crl_data,

              JSON_EXTRACT(Properties, '$.CrlId') as crl_id,

              JSON_EXTRACT(Properties, '$.Enabled') as enabled,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.TrustAnchorArn') as trust_anchor_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::RolesAnywhere::CRL' ;
  - Profile:
      name: Profile
      id: aws.rolesanywhere.Profile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.DurationSeconds') as duration_seconds,

              JSON_EXTRACT(Properties, '$.Enabled') as enabled,

              JSON_EXTRACT(Properties, '$.ManagedPolicyArns') as
              managed_policy_arns,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.ProfileArn') as profile_arn,

              JSON_EXTRACT(Properties, '$.ProfileId') as profile_id,

              JSON_EXTRACT(Properties, '$.RequireInstanceProperties') as
              require_instance_properties,

              JSON_EXTRACT(Properties, '$.RoleArns') as role_arns,

              JSON_EXTRACT(Properties, '$.SessionPolicy') as session_policy,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::RolesAnywhere::Profile' ;
  - TrustAnchor:
      name: TrustAnchor
      id: aws.rolesanywhere.TrustAnchor
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Enabled') as enabled,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Source.SourceType') as
              source_source_type,

              JSON_EXTRACT(Properties, '$.Source.SourceData') as
              source_source_data,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.TrustAnchorId') as trust_anchor_id,

              JSON_EXTRACT(Properties, '$.TrustAnchorArn') as trust_anchor_arn

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::RolesAnywhere::TrustAnchor' ;
