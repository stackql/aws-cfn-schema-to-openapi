openapi: 3.0.0
info:
  title: QLDB
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: >-
            The key name of the tag. You can specify a value that is 1 to 127
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -. 
          minLength: 1
          maxLength: 127
        Value:
          type: string
          description: >-
            The value for the tag. You can specify a value that is 1 to 255
            Unicode characters in length and cannot be prefixed with aws:. You
            can use any of the following characters: the set of Unicode letters,
            digits, whitespace, _, ., /, =, +, and -. 
          minLength: 1
          maxLength: 255
      required:
        - Key
        - Value
      additionalProperties: false
    Ledger:
      type: object
      properties:
        PermissionsMode:
          type: string
          x-is-top-level-property: true
        DeletionProtection:
          type: boolean
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
        KmsKey:
          type: string
          x-is-top-level-property: true
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        Name:
          type: string
          x-is-top-level-property: true
      required:
        - PermissionsMode
      x-stackql-resource-name: Ledger
    Arn:
      type: string
      pattern: >-
        arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]*:[\w+=,.@-]+(/[\w+=,.@-]+)*
    KinesisConfiguration:
      type: object
      properties:
        StreamArn:
          type: object
          $ref: '#/components/schemas/Arn'
        AggregationEnabled:
          type: boolean
      additionalProperties: false
    Stream:
      type: object
      properties:
        LedgerName:
          type: string
          x-is-top-level-property: true
        StreamName:
          type: string
          x-is-top-level-property: true
        RoleArn:
          $ref: '#/components/schemas/Arn'
          x-is-top-level-property: true
        InclusiveStartTime:
          type: string
          x-is-top-level-property: true
        ExclusiveEndTime:
          type: string
          x-is-top-level-property: true
        KinesisConfiguration:
          $ref: '#/components/schemas/KinesisConfiguration'
          x-is-top-level-property: true
        Tags:
          type: array
          maxItems: 50
          x-insertionOrder: false
          uniqueItems: true
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
          x-is-top-level-property: true
        Arn:
          $ref: '#/components/schemas/Arn'
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
      required:
        - LedgerName
        - StreamName
        - RoleArn
        - KinesisConfiguration
        - InclusiveStartTime
      x-stackql-resource-name: Stream
x-stackql-views:
  - Ledger:
      name: Ledger
      id: aws.qldb.Ledger
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.PermissionsMode') as permissions_mode,

              JSON_EXTRACT(Properties, '$.DeletionProtection') as
              deletion_protection,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Name') as name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QLDB::Ledger' ;
  - Stream:
      name: Stream
      id: aws.qldb.Stream
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.LedgerName') as ledger_name,

              JSON_EXTRACT(Properties, '$.StreamName') as stream_name,

              JSON_EXTRACT(Properties, '$.InclusiveStartTime') as
              inclusive_start_time,

              JSON_EXTRACT(Properties, '$.ExclusiveEndTime') as
              exclusive_end_time,

              JSON_EXTRACT(Properties, '$.KinesisConfiguration.StreamArn') as
              kinesis_configuration_stream_arn,

              JSON_EXTRACT(Properties,
              '$.KinesisConfiguration.AggregationEnabled') as
              kinesis_configuration_aggregation_enabled,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.Id') as id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::QLDB::Stream' ;
