openapi: 3.0.0
info:
  title: FMS
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceArn:
      description: A resource ARN.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    NotificationChannel:
      type: object
      properties:
        SnsRoleName:
          $ref: '#/components/schemas/ResourceArn'
          x-is-top-level-property: true
        SnsTopicArn:
          $ref: '#/components/schemas/ResourceArn'
          x-is-top-level-property: true
      required:
        - SnsRoleName
        - SnsTopicArn
      x-stackql-resource-name: NotificationChannel
    AccountId:
      description: An AWS account ID.
      type: string
      pattern: ^([0-9]*)$
      minLength: 12
      maxLength: 12
    Base62Id:
      description: A Base62 ID
      type: string
      pattern: ^([a-z0-9A-Z]*)$
      minLength: 22
      maxLength: 22
    OrganizationalUnitId:
      description: An Organizational Unit ID.
      type: string
      pattern: ^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
      minLength: 16
      maxLength: 68
    IEMap:
      description: An FMS includeMap or excludeMap.
      type: object
      properties:
        ACCOUNT:
          type: array
          items:
            $ref: '#/components/schemas/AccountId'
          x-insertionOrder: true
        ORGUNIT:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationalUnitId'
          x-insertionOrder: true
      additionalProperties: false
    PolicyTag:
      description: A policy tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    ResourceTag:
      description: A resource tag.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      additionalProperties: false
      required:
        - Key
    ResourceType:
      description: An AWS resource type
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 128
    SecurityServicePolicyData:
      description: Firewall security service policy data.
      type: object
      properties:
        ManagedServiceData:
          $ref: '#/components/schemas/ManagedServiceData'
        Type:
          $ref: '#/components/schemas/PolicyType'
        PolicyOption:
          $ref: '#/components/schemas/PolicyOption'
      additionalProperties: false
      required:
        - Type
    FirewallDeploymentModel:
      description: Firewall deployment mode.
      type: string
      enum:
        - DISTRIBUTED
        - CENTRALIZED
    ManagedServiceData:
      description: Firewall managed service data.
      type: string
      minLength: 1
      maxLength: 8192
    PolicyType:
      description: Firewall policy type.
      type: string
      enum:
        - WAF
        - WAFV2
        - SHIELD_ADVANCED
        - SECURITY_GROUPS_COMMON
        - SECURITY_GROUPS_CONTENT_AUDIT
        - SECURITY_GROUPS_USAGE_AUDIT
        - NETWORK_FIREWALL
        - THIRD_PARTY_FIREWALL
        - DNS_FIREWALL
        - IMPORT_NETWORK_FIREWALL
    NetworkFirewallPolicy:
      description: Network firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    ThirdPartyFirewallPolicy:
      description: Third party firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    PolicyOption:
      description: Firewall policy option.
      type: object
      properties:
        NetworkFirewallPolicy:
          $ref: '#/components/schemas/NetworkFirewallPolicy'
        ThirdPartyFirewallPolicy:
          $ref: '#/components/schemas/ThirdPartyFirewallPolicy'
      additionalProperties: false
      oneOf:
        - required:
            - NetworkFirewallPolicy
        - required:
            - ThirdPartyFirewallPolicy
    Policy:
      type: object
      properties:
        ExcludeMap:
          $ref: '#/components/schemas/IEMap'
          x-is-top-level-property: true
        ExcludeResourceTags:
          type: boolean
          x-is-top-level-property: true
        IncludeMap:
          $ref: '#/components/schemas/IEMap'
          x-is-top-level-property: true
        Id:
          type: string
          pattern: ^[a-z0-9A-Z-]{36}$
          minLength: 36
          maxLength: 36
          x-is-top-level-property: true
        PolicyName:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 1024
          x-is-top-level-property: true
        PolicyDescription:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          maxLength: 256
          x-is-top-level-property: true
        RemediationEnabled:
          type: boolean
          x-is-top-level-property: true
        ResourceTags:
          type: array
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 8
          x-insertionOrder: true
          x-is-top-level-property: true
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          x-is-top-level-property: true
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
          x-is-top-level-property: true
        ResourceSetIds:
          type: array
          items:
            $ref: '#/components/schemas/Base62Id'
          x-insertionOrder: true
          uniqueItems: true
          x-is-top-level-property: true
        SecurityServicePolicyData:
          $ref: '#/components/schemas/SecurityServicePolicyData'
          x-is-top-level-property: true
        Arn:
          $ref: '#/components/schemas/ResourceArn'
          x-is-top-level-property: true
        DeleteAllPolicyResources:
          type: boolean
          x-is-top-level-property: true
        ResourcesCleanUp:
          type: boolean
          x-is-top-level-property: true
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/PolicyTag'
          x-insertionOrder: true
          x-is-top-level-property: true
      required:
        - ExcludeResourceTags
        - PolicyName
        - RemediationEnabled
        - SecurityServicePolicyData
      x-stackql-resource-name: Policy
    Tag:
      description: A tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Resource:
      description: A resource ARN or URI.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    ResourceSet:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Base62Id'
          x-is-top-level-property: true
        Name:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 128
          x-is-top-level-property: true
        Description:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]*)$
          maxLength: 256
          x-is-top-level-property: true
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
          uniqueItems: true
          x-is-top-level-property: true
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          x-insertionOrder: false
          uniqueItems: true
          x-is-top-level-property: true
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: true
          uniqueItems: true
          x-is-top-level-property: true
      required:
        - Name
        - ResourceTypeList
      x-stackql-resource-name: ResourceSet
x-stackql-views:
  - NotificationChannel:
      name: NotificationChannel
      id: aws.fms.NotificationChannel
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::FMS::NotificationChannel' ;
  - Policy:
      name: Policy
      id: aws.fms.Policy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ExcludeMap.ACCOUNT') as
              exclude_map_ac_co_un_t,

              JSON_EXTRACT(Properties, '$.ExcludeMap.ORGUNIT') as
              exclude_map_or_gu_ni_t,

              JSON_EXTRACT(Properties, '$.ExcludeResourceTags') as
              exclude_resource_tags,

              JSON_EXTRACT(Properties, '$.IncludeMap.ACCOUNT') as
              include_map_ac_co_un_t,

              JSON_EXTRACT(Properties, '$.IncludeMap.ORGUNIT') as
              include_map_or_gu_ni_t,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,

              JSON_EXTRACT(Properties, '$.PolicyDescription') as
              policy_description,

              JSON_EXTRACT(Properties, '$.RemediationEnabled') as
              remediation_enabled,

              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags,

              JSON_EXTRACT(Properties, '$.ResourceTypeList') as
              resource_type_list,

              JSON_EXTRACT(Properties, '$.ResourceSetIds') as resource_set_ids,

              JSON_EXTRACT(Properties,
              '$.SecurityServicePolicyData.ManagedServiceData') as
              security_service_policy_data_managed_service_data,

              JSON_EXTRACT(Properties, '$.SecurityServicePolicyData.Type') as
              security_service_policy_data_type,

              JSON_EXTRACT(Properties,
              '$.SecurityServicePolicyData.PolicyOption') as
              security_service_policy_data_policy_option,

              JSON_EXTRACT(Properties, '$.DeleteAllPolicyResources') as
              delete_all_policy_resources,

              JSON_EXTRACT(Properties, '$.ResourcesCleanUp') as
              resources_clean_up,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::FMS::Policy' ;
  - ResourceSet:
      name: ResourceSet
      id: aws.fms.ResourceSet
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ResourceTypeList') as
              resource_type_list,

              JSON_EXTRACT(Properties, '$.Resources') as resources,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::FMS::ResourceSet' ;
