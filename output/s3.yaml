openapi: 3.0.0
info:
  title: S3
  version: 1.0.0
paths: {}
components:
  schemas:
    VpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        VpcId:
          description: >-
            Virtual Private Cloud (VPC) Id from which AccessPoint will allow
            requests.
          type: string
          minLength: 1
          maxLength: 1024
    PublicAccessBlockConfiguration:
      type: object
      additionalProperties: false
      description: >-
        The Public Access Block Configuration is used to block policies that
        would allow public access to this Object lambda Access Point. All public
        access to Object lambda Access Points are blocked by default, and any
        policy that would give public access to them will be also blocked. This
        behavior cannot be changed for Object lambda Access Points.
      properties:
        BlockPublicAcls:
          type: boolean
          description: >-
            Specifies whether Amazon S3 should block public access control lists
            (ACLs) to this object lambda access point. Setting this element to
            TRUE causes the following behavior:

            - PUT Bucket acl and PUT Object acl calls fail if the specified ACL
            is public.
             - PUT Object calls fail if the request includes a public ACL.
            . - PUT Bucket calls fail if the request includes a public ACL.

            Enabling this setting doesn't affect existing policies or ACLs.
        IgnorePublicAcls:
          type: boolean
          description: >-
            Specifies whether Amazon S3 should ignore public ACLs for buckets in
            this account. Setting this element to TRUE causes Amazon S3 to
            ignore all public ACLs on buckets in this account and any objects
            that they contain. Enabling this setting doesn't affect the
            persistence of any existing ACLs and doesn't prevent new public ACLs
            from being set.
        BlockPublicPolicy:
          type: boolean
          description: >-
            Specifies whether Amazon S3 should block public bucket policies for
            buckets in this account. Setting this element to TRUE causes Amazon
            S3 to reject calls to PUT Bucket policy if the specified bucket
            policy allows public access. Enabling this setting doesn't affect
            existing bucket policies.
        RestrictPublicBuckets:
          type: boolean
          description: >-
            Specifies whether Amazon S3 should restrict public bucket policies
            for this bucket. Setting this element to TRUE restricts access to
            this bucket to only AWS services and authorized users within this
            account if the bucket has a public policy.

            Enabling this setting doesn't affect previously stored bucket
            policies, except that public and cross-account access within any
            public bucket policy, including non-public delegation to specific
            accounts, is blocked.
    Arn:
      description: The Amazon Resource Name (ARN) of the specified resource.
      type: string
    AccessPoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the specified AccessPoint.
          maxLength: 2048
          minLength: 20
          pattern: >-
            ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/accesspoint\/[^:]+$
          type: string
        Bucket:
          description: >-
            The Amazon Resource Name (ARN) of the bucket you want to associate
            this AccessPoint with.
          maxLength: 2048
          minLength: 20
          pattern: >-
            ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        Name:
          description: A name for the AccessPoint.
          maxLength: 50
          minLength: 3
          pattern: ^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$
          type: string
        VpcConfiguration:
          description: >-
            Virtual Private Cloud (VPC) from which requests can be made to the
            AccessPoint.
          $ref: '#/components/schemas/VpcConfiguration'
        Policy:
          description: The access point policy associated with this access point.
          type: object
      required:
        - Bucket
        - Name
        - VpcConfiguration
      x-stackql-resource-name: AccessPoint
    TagFilter:
      description: Tags to use to identify a subset of objects for an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Destination:
      description: >-
        Specifies information about where to publish analysis or configuration
        results for an Amazon S3 bucket and S3 Replication Time Control (S3
        RTC).
      type: object
      additionalProperties: false
      properties:
        BucketArn:
          description: >-
            The Amazon Resource Name (ARN) of the bucket to which data is
            exported.
          type: string
        BucketAccountId:
          description: 'The account ID that owns the destination S3 bucket. '
          type: string
        Format:
          description: Specifies the file format used when exporting data to Amazon S3.
          type: string
          enum:
            - CSV
            - ORC
            - Parquet
        Prefix:
          description: >-
            The prefix to use when exporting data. The prefix is prepended to
            all results.
          type: string
      required:
        - BucketArn
        - Format
    AccelerateConfiguration:
      type: object
      additionalProperties: false
      properties:
        AccelerationStatus:
          description: Configures the transfer acceleration state for an Amazon S3 bucket.
          type: string
          enum:
            - Enabled
            - Suspended
      required:
        - AccelerationStatus
    AnalyticsConfiguration:
      description: >-
        Specifies the configuration and any analyses for the analytics filter of
        an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        TagFilters:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TagFilter'
        StorageClassAnalysis:
          $ref: '#/components/schemas/StorageClassAnalysis'
        Id:
          description: The ID that identifies the analytics configuration.
          type: string
        Prefix:
          description: >-
            The prefix that an object must have to be included in the analytics
            results.
          type: string
      required:
        - StorageClassAnalysis
        - Id
    StorageClassAnalysis:
      description: >-
        Specifies data related to access patterns to be collected and made
        available to analyze the tradeoffs between different storage classes for
        an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        DataExport:
          $ref: '#/components/schemas/DataExport'
    DataExport:
      description: Specifies how Amazon S3 Storage Lens metrics should be exported.
      type: object
      additionalProperties: false
      properties:
        S3BucketDestination:
          $ref: '#/components/schemas/S3BucketDestination'
        CloudWatchMetrics:
          $ref: '#/components/schemas/CloudWatchMetrics'
    BucketEncryption:
      description: >-
        Specifies default encryption for a bucket using server-side encryption
        with either Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys
        (SSE-KMS).
      type: object
      additionalProperties: false
      properties:
        ServerSideEncryptionConfiguration:
          description: Specifies the default server-side-encryption configuration.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ServerSideEncryptionRule'
      required:
        - ServerSideEncryptionConfiguration
    ServerSideEncryptionRule:
      description: Specifies the default server-side encryption configuration.
      type: object
      additionalProperties: false
      properties:
        BucketKeyEnabled:
          description: >-
            Specifies whether Amazon S3 should use an S3 Bucket Key with
            server-side encryption using KMS (SSE-KMS) for new objects in the
            bucket. Existing objects are not affected. Setting the
            BucketKeyEnabled element to true causes Amazon S3 to use an S3
            Bucket Key. By default, S3 Bucket Key is not enabled.
          type: boolean
        ServerSideEncryptionByDefault:
          $ref: '#/components/schemas/ServerSideEncryptionByDefault'
    ServerSideEncryptionByDefault:
      description: >-
        Specifies the default server-side encryption to apply to new objects in
        the bucket. If a PUT Object request doesn't specify any server-side
        encryption, this default encryption will be applied.
      type: object
      properties:
        KMSMasterKeyID:
          description: >-
            "KMSMasterKeyID" can only be used when you set the value of
            SSEAlgorithm as aws:kms.
          type: string
        SSEAlgorithm:
          type: string
          enum:
            - aws:kms
            - AES256
      additionalProperties: false
      required:
        - SSEAlgorithm
    CorsConfiguration:
      type: object
      additionalProperties: false
      properties:
        CorsRules:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/CorsRule'
            maxLength: 100
      required:
        - CorsRules
    CorsRule:
      type: object
      description: >-
        A set of origins and methods (cross-origin access that you want to
        allow). You can add up to 100 rules to the configuration.
      additionalProperties: false
      properties:
        AllowedHeaders:
          description: >-
            Headers that are specified in the Access-Control-Request-Headers
            header.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        AllowedMethods:
          description: An HTTP method that you allow the origin to execute.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
            enum:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
        AllowedOrigins:
          description: >-
            One or more origins you want customers to be able to access the
            bucket from.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        ExposedHeaders:
          description: >-
            One or more headers in the response that you want customers to be
            able to access from their applications (for example, from a
            JavaScript XMLHttpRequest object).
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        Id:
          description: A unique identifier for this rule.
          type: string
          maxLength: 255
        MaxAge:
          description: >-
            The time in seconds that your browser is to cache the preflight
            response for the specified resource.
          type: integer
          minimum: 0
      required:
        - AllowedMethods
        - AllowedOrigins
    IntelligentTieringConfiguration:
      type: object
      additionalProperties: false
      properties:
        Id:
          description: The ID used to identify the S3 Intelligent-Tiering configuration.
          type: string
        Prefix:
          description: >-
            An object key name prefix that identifies the subset of objects to
            which the rule applies.
          type: string
        Status:
          description: Specifies the status of the configuration.
          type: string
          enum:
            - Disabled
            - Enabled
        TagFilters:
          description: A container for a key-value pair.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TagFilter'
        Tierings:
          description: >-
            Specifies a list of S3 Intelligent-Tiering storage class tiers in
            the configuration. At least one tier must be defined in the list. At
            most, you can specify two tiers in the list, one for each available
            AccessTier: ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tiering'
      required:
        - Id
        - Status
        - Tierings
    Tiering:
      type: object
      additionalProperties: false
      properties:
        AccessTier:
          description: >-
            S3 Intelligent-Tiering access tier. See Storage class for
            automatically optimizing frequently and infrequently accessed
            objects for a list of access tiers in the S3 Intelligent-Tiering
            storage class.
          type: string
          enum:
            - ARCHIVE_ACCESS
            - DEEP_ARCHIVE_ACCESS
        Days:
          description: >-
            The number of consecutive days of no access after which an object
            will be eligible to be transitioned to the corresponding tier. The
            minimum number of days specified for Archive Access tier must be at
            least 90 days and Deep Archive Access tier must be at least 180
            days. The maximum can be up to 2 years (730 days).
          type: integer
      required:
        - AccessTier
        - Days
    InventoryConfiguration:
      type: object
      additionalProperties: false
      properties:
        Destination:
          $ref: '#/components/schemas/Destination'
        Enabled:
          description: Specifies whether the inventory is enabled or disabled.
          type: boolean
        Id:
          description: The ID used to identify the inventory configuration.
          type: string
        IncludedObjectVersions:
          description: Object versions to include in the inventory list.
          type: string
          enum:
            - All
            - Current
        OptionalFields:
          description: >-
            Contains the optional fields that are included in the inventory
            results.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
            enum:
              - Size
              - LastModifiedDate
              - StorageClass
              - ETag
              - IsMultipartUploaded
              - ReplicationStatus
              - EncryptionStatus
              - ObjectLockRetainUntilDate
              - ObjectLockMode
              - ObjectLockLegalHoldStatus
              - IntelligentTieringAccessTier
              - BucketKeyStatus
        Prefix:
          description: The prefix that is prepended to all inventory results.
          type: string
        ScheduleFrequency:
          description: Specifies the schedule for generating inventory results.
          type: string
          enum:
            - Daily
            - Weekly
      required:
        - Destination
        - Enabled
        - Id
        - IncludedObjectVersions
        - ScheduleFrequency
    LifecycleConfiguration:
      type: object
      additionalProperties: false
      properties:
        Rules:
          description: >-
            A list of lifecycle rules for individual objects in an Amazon
            S3Outposts bucket.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Rule'
      required:
        - Rules
    Rule:
      description: >-
        Specifies lifecycle rules for an Amazon S3Outposts bucket. You must
        specify at least one of the following: AbortIncompleteMultipartUpload,
        ExpirationDate, ExpirationInDays.
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          enum:
            - Enabled
            - Disabled
        Id:
          type: string
          maxLength: 255
          description: >-
            Unique identifier for the lifecycle rule. The value can't be longer
            than 255 characters.
        AbortIncompleteMultipartUpload:
          description: >-
            Specifies a lifecycle rule that stops incomplete multipart uploads
            to an Amazon S3Outposts bucket.
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
        ExpirationDate:
          description: >-
            Indicates when objects are deleted from Amazon S3Outposts. The date
            value must be in ISO 8601 format. The time is always midnight UTC.
          $ref: '#/components/schemas/iso8601UTC'
        ExpirationInDays:
          description: >-
            Indicates the number of days after creation when objects are deleted
            from Amazon S3Outposts.
          type: integer
          minimum: 1
        Filter:
          description: The container for the filter of the lifecycle rule.
          type: object
          additionalProperties: false
          properties:
            Prefix:
              description: >-
                Object key prefix that identifies one or more objects to which
                this rule applies.
              $ref: '#/components/schemas/FilterPrefix'
            Tag:
              description: >-
                Specifies a tag used to identify a subset of objects for an
                Amazon S3Outposts bucket.
              $ref: '#/components/schemas/FilterTag'
            AndOperator:
              description: >-
                The container for the AND condition for the lifecycle rule. A
                combination of Prefix and 1 or more Tags OR a minimum of 2 or
                more tags.
              $ref: '#/components/schemas/FilterAndOperator'
          oneOf:
            - required:
                - Prefix
            - required:
                - Tag
            - required:
                - AndOperator
      anyOf:
        - required:
            - Status
            - AbortIncompleteMultipartUpload
        - required:
            - Status
            - ExpirationDate
        - required:
            - Status
            - ExpirationInDays
    AbortIncompleteMultipartUpload:
      description: >-
        Specifies the days since the initiation of an incomplete multipart
        upload that Amazon S3Outposts will wait before permanently removing all
        parts of the upload.
      type: object
      additionalProperties: false
      properties:
        DaysAfterInitiation:
          description: >-
            Specifies the number of days after which Amazon S3Outposts aborts an
            incomplete multipart upload.
          type: integer
          minimum: 0
      required:
        - DaysAfterInitiation
    iso8601UTC:
      description: >-
        The date value in ISO 8601 format. The timezone is always UTC.
        (YYYY-MM-DDThh:mm:ssZ)
      type: string
      pattern: >-
        ^([0-2]\d{3})-(0[0-9]|1[0-2])-([0-2]\d|3[01])T([01]\d|2[0-4]):([0-5]\d):([0-6]\d)((\.\d{3})?)Z$
    NoncurrentVersionExpiration:
      type: object
      description: >-
        Container for the expiration rule that describes when noncurrent objects
        are expired. If your bucket is versioning-enabled (or versioning is
        suspended), you can set this action to request that Amazon S3 expire
        noncurrent object versions at a specific period in the object's lifetime
      additionalProperties: false
      properties:
        NoncurrentDays:
          description: >-
            Specified the number of days an object is noncurrent before Amazon
            S3 can perform the associated action
          type: integer
        NewerNoncurrentVersions:
          description: >-
            Specified the number of newer noncurrent and current versions that
            must exists before performing the associated action
          type: integer
      required:
        - NoncurrentDays
    NoncurrentVersionTransition:
      type: object
      description: >-
        Container for the transition rule that describes when noncurrent objects
        transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING,
        GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class. If your bucket is
        versioning-enabled (or versioning is suspended), you can set this action
        to request that Amazon S3 transition noncurrent object versions to the
        STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or
        DEEP_ARCHIVE storage class at a specific period in the object's
        lifetime.
      additionalProperties: false
      properties:
        StorageClass:
          description: The class of storage used to store the object.
          type: string
          enum:
            - DEEP_ARCHIVE
            - GLACIER
            - Glacier
            - GLACIER_IR
            - INTELLIGENT_TIERING
            - ONEZONE_IA
            - STANDARD_IA
        TransitionInDays:
          description: >-
            Specifies the number of days an object is noncurrent before Amazon
            S3 can perform the associated action.
          type: integer
        NewerNoncurrentVersions:
          description: >-
            Specified the number of newer noncurrent and current versions that
            must exists before performing the associated action
          type: integer
      required:
        - StorageClass
        - TransitionInDays
    Transition:
      type: object
      properties:
        StorageClass:
          type: string
          enum:
            - DEEP_ARCHIVE
            - GLACIER
            - Glacier
            - GLACIER_IR
            - INTELLIGENT_TIERING
            - ONEZONE_IA
            - STANDARD_IA
        TransitionDate:
          $ref: '#/components/schemas/iso8601UTC'
        TransitionInDays:
          type: integer
      additionalProperties: false
      description: You must specify at least one of "TransitionDate" and "TransitionInDays"
      required:
        - StorageClass
    LoggingConfiguration:
      type: object
      properties:
        DestinationBucketName:
          type: string
          description: >-
            The name of an Amazon S3 bucket where Amazon S3 store server access
            log files. You can store log files in any bucket that you own. By
            default, logs are stored in the bucket where the
            LoggingConfiguration property is defined.
        LogFilePrefix:
          type: string
      additionalProperties: false
    MetricsConfiguration:
      type: object
      additionalProperties: false
      properties:
        AccessPointArn:
          type: string
        Id:
          type: string
        Prefix:
          type: string
        TagFilters:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TagFilter'
      required:
        - Id
    NotificationConfiguration:
      description: Describes the notification configuration for an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        EventBridgeConfiguration:
          $ref: '#/components/schemas/EventBridgeConfiguration'
        LambdaConfigurations:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/LambdaConfiguration'
        QueueConfigurations:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/QueueConfiguration'
        TopicConfigurations:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TopicConfiguration'
    EventBridgeConfiguration:
      type: object
      description: >-
        Describes the Amazon EventBridge notification configuration for an
        Amazon S3 bucket.
      additionalProperties: false
      properties:
        EventBridgeEnabled:
          description: >-
            Specifies whether to send notifications to Amazon EventBridge when
            events occur in an Amazon S3 bucket.
          type: boolean
          default: 'true'
      required:
        - EventBridgeEnabled
    LambdaConfiguration:
      type: object
      description: >-
        Describes the AWS Lambda functions to invoke and the events for which to
        invoke them.
      additionalProperties: false
      properties:
        Event:
          description: >-
            The Amazon S3 bucket event for which to invoke the AWS Lambda
            function.
          type: string
        Filter:
          description: >-
            The filtering rules that determine which objects invoke the AWS
            Lambda function.
          $ref: '#/components/schemas/NotificationFilter'
        Function:
          description: >-
            The Amazon Resource Name (ARN) of the AWS Lambda function that
            Amazon S3 invokes when the specified event type occurs.
          type: string
      required:
        - Function
        - Event
    QueueConfiguration:
      type: object
      description: >-
        The Amazon Simple Queue Service queues to publish messages to and the
        events for which to publish messages.
      additionalProperties: false
      properties:
        Event:
          description: >-
            The Amazon S3 bucket event about which you want to publish messages
            to Amazon SQS.
          type: string
        Filter:
          description: >-
            The filtering rules that determine which objects trigger
            notifications.
          $ref: '#/components/schemas/NotificationFilter'
        Queue:
          description: >-
            The Amazon Resource Name (ARN) of the Amazon SQS queue to which
            Amazon S3 publishes a message when it detects events of the
            specified type.
          type: string
      required:
        - Event
        - Queue
    TopicConfiguration:
      type: object
      description: >-
        The topic to which notifications are sent and the events for which
        notifications are generated.
      additionalProperties: false
      properties:
        Event:
          description: The Amazon S3 bucket event about which to send notifications.
          type: string
        Filter:
          description: >-
            The filtering rules that determine for which objects to send
            notifications.
          $ref: '#/components/schemas/NotificationFilter'
        Topic:
          description: >-
            The Amazon Resource Name (ARN) of the Amazon SNS topic to which
            Amazon S3 publishes a message when it detects events of the
            specified type.
          type: string
      required:
        - Event
        - Topic
    NotificationFilter:
      type: object
      description: Specifies object key name filtering rules.
      additionalProperties: false
      properties:
        S3Key:
          $ref: '#/components/schemas/S3KeyFilter'
      required:
        - S3Key
    S3KeyFilter:
      type: object
      description: A container for object key name prefix and suffix filtering rules.
      additionalProperties: false
      properties:
        Rules:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/FilterRule'
      required:
        - Rules
    FilterRule:
      type: object
      description: >-
        Specifies the Amazon S3 object key name to filter on and whether to
        filter on the suffix or prefix of the key name.
      additionalProperties: false
      properties:
        Name:
          type: string
          maxLength: 1024
        Value:
          type: string
      required:
        - Value
        - Name
    ObjectLockConfiguration:
      type: object
      additionalProperties: false
      properties:
        ObjectLockEnabled:
          type: string
          x-const: Enabled
        Rule:
          $ref: '#/components/schemas/ObjectLockRule'
    ObjectLockRule:
      type: object
      description: The Object Lock rule in place for the specified object.
      additionalProperties: false
      properties:
        DefaultRetention:
          $ref: '#/components/schemas/DefaultRetention'
    DefaultRetention:
      type: object
      description: >-
        The default retention period that you want to apply to new objects
        placed in the specified bucket.
      additionalProperties: false
      properties:
        Years:
          type: integer
        Days:
          type: integer
        Mode:
          type: string
          enum:
            - COMPLIANCE
            - GOVERNANCE
    OwnershipControls:
      type: object
      additionalProperties: false
      properties:
        Rules:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/OwnershipControlsRule'
      required:
        - Rules
    OwnershipControlsRule:
      type: object
      additionalProperties: false
      properties:
        ObjectOwnership:
          description: Specifies an object ownership rule.
          type: string
          enum:
            - ObjectWriter
            - BucketOwnerPreferred
            - BucketOwnerEnforced
    ReplicationConfiguration:
      type: object
      description: >-
        A container for replication rules. You can add up to 1,000 rules. The
        maximum size of a replication configuration is 2 MB.
      additionalProperties: false
      properties:
        Role:
          description: >-
            The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that Amazon S3 assumes when replicating
            objects.
          type: string
        Rules:
          description: A container for one or more replication rules.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ReplicationRule'
            maxLength: 1000
            minLength: 1
      required:
        - Role
        - Rules
    ReplicationRule:
      type: object
      description: >-
        Specifies which Amazon S3 objects to replicate and where to store the
        replicas.
      additionalProperties: false
      properties:
        DeleteMarkerReplication:
          $ref: '#/components/schemas/DeleteMarkerReplication'
        Destination:
          $ref: '#/components/schemas/ReplicationDestination'
        Filter:
          $ref: '#/components/schemas/ReplicationRuleFilter'
        Id:
          description: A unique identifier for the rule.
          type: string
          maxLength: 255
        Prefix:
          description: >-
            An object key name prefix that identifies the object or objects to
            which the rule applies.
          type: string
          maxLength: 1024
        Priority:
          type: integer
        SourceSelectionCriteria:
          $ref: '#/components/schemas/SourceSelectionCriteria'
        Status:
          description: Specifies whether the rule is enabled.
          type: string
          enum:
            - Disabled
            - Enabled
      required:
        - Destination
        - Status
    DeleteMarkerReplication:
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          enum:
            - Disabled
            - Enabled
    ReplicationDestination:
      type: object
      description: >-
        Specifies which Amazon S3 bucket to store replicated objects in and
        their storage class.
      additionalProperties: false
      properties:
        AccessControlTranslation:
          $ref: '#/components/schemas/AccessControlTranslation'
        Account:
          type: string
        Bucket:
          type: string
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        Metrics:
          $ref: '#/components/schemas/Metrics'
        ReplicationTime:
          $ref: '#/components/schemas/ReplicationTime'
        StorageClass:
          description: >-
            The storage class to use when replicating objects, such as S3
            Standard or reduced redundancy.
          type: string
          enum:
            - DEEP_ARCHIVE
            - GLACIER
            - GLACIER_IR
            - INTELLIGENT_TIERING
            - ONEZONE_IA
            - REDUCED_REDUNDANCY
            - STANDARD
            - STANDARD_IA
      required:
        - Bucket
    AccessControlTranslation:
      type: object
      description: >-
        Specify this only in a cross-account scenario (where source and
        destination bucket owners are not the same), and you want to change
        replica ownership to the AWS account that owns the destination bucket.
        If this is not specified in the replication configuration, the replicas
        are owned by same AWS account that owns the source object.
      additionalProperties: false
      properties:
        Owner:
          type: string
          x-const: Destination
      required:
        - Owner
    EncryptionConfiguration:
      type: object
      description: >-
        Specifies encryption-related information for an Amazon S3 bucket that is
        a destination for replicated objects.
      additionalProperties: false
      properties:
        ReplicaKmsKeyID:
          description: >-
            Specifies the ID (Key ARN or Alias ARN) of the customer managed
            customer master key (CMK) stored in AWS Key Management Service (KMS)
            for the destination bucket.
          type: string
      required:
        - ReplicaKmsKeyID
    Metrics:
      type: object
      additionalProperties: false
      properties:
        EventThreshold:
          $ref: '#/components/schemas/ReplicationTimeValue'
        Status:
          type: string
          enum:
            - Disabled
            - Enabled
      required:
        - Status
    ReplicationTimeValue:
      type: object
      additionalProperties: false
      properties:
        Minutes:
          type: integer
      required:
        - Minutes
    ReplicationTime:
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          enum:
            - Disabled
            - Enabled
        Time:
          $ref: '#/components/schemas/ReplicationTimeValue'
      required:
        - Status
        - Time
    ReplicationRuleFilter:
      type: object
      additionalProperties: false
      properties:
        And:
          $ref: '#/components/schemas/ReplicationRuleAndOperator'
        Prefix:
          type: string
        TagFilter:
          $ref: '#/components/schemas/TagFilter'
    ReplicationRuleAndOperator:
      type: object
      additionalProperties: false
      properties:
        Prefix:
          type: string
        TagFilters:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TagFilter'
    SourceSelectionCriteria:
      description: >-
        A container that describes additional filters for identifying the source
        objects that you want to replicate.
      type: object
      additionalProperties: false
      properties:
        ReplicaModifications:
          description: >-
            A filter that you can specify for selection for modifications on
            replicas.
          $ref: '#/components/schemas/ReplicaModifications'
        SseKmsEncryptedObjects:
          description: >-
            A container for filter information for the selection of Amazon S3
            objects encrypted with AWS KMS.
          $ref: '#/components/schemas/SseKmsEncryptedObjects'
    ReplicaModifications:
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Specifies whether Amazon S3 replicates modifications on replicas.
          type: string
          enum:
            - Enabled
            - Disabled
      required:
        - Status
    SseKmsEncryptedObjects:
      type: object
      description: >-
        A container for filter information for the selection of S3 objects
        encrypted with AWS KMS.
      additionalProperties: false
      properties:
        Status:
          description: >-
            Specifies whether Amazon S3 replicates objects created with
            server-side encryption using a customer master key (CMK) stored in
            AWS Key Management Service.
          type: string
          enum:
            - Disabled
            - Enabled
      required:
        - Status
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^(?!aws:.*)([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
        Value:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
      required:
        - Key
        - Value
    VersioningConfiguration:
      description: Describes the versioning state of an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        Status:
          description: The versioning state of the bucket.
          type: string
          default: Suspended
          enum:
            - Enabled
            - Suspended
      required:
        - Status
    WebsiteConfiguration:
      type: object
      description: Specifies website configuration parameters for an Amazon S3 bucket.
      additionalProperties: false
      properties:
        ErrorDocument:
          description: The name of the error document for the website.
          type: string
        IndexDocument:
          description: The name of the index document for the website.
          type: string
        RoutingRules:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/RoutingRule'
        RedirectAllRequestsTo:
          $ref: '#/components/schemas/RedirectAllRequestsTo'
    RoutingRule:
      description: Specifies the redirect behavior and when a redirect is applied.
      type: object
      additionalProperties: false
      properties:
        RedirectRule:
          description: >-
            Container for redirect information. You can redirect requests to
            another host, to another page, or with another protocol. In the
            event of an error, you can specify a different error code to return.
          $ref: '#/components/schemas/RedirectRule'
        RoutingRuleCondition:
          $ref: '#/components/schemas/RoutingRuleCondition'
      required:
        - RedirectRule
    RedirectRule:
      type: object
      description: >-
        Specifies how requests are redirected. In the event of an error, you can
        specify a different error code to return.
      additionalProperties: false
      properties:
        HostName:
          description: The host name to use in the redirect request.
          type: string
        HttpRedirectCode:
          description: >-
            The HTTP redirect code to use on the response. Not required if one
            of the siblings is present.
          type: string
        Protocol:
          description: >-
            Protocol to use when redirecting requests. The default is the
            protocol that is used in the original request.
          enum:
            - http
            - https
          type: string
        ReplaceKeyPrefixWith:
          description: The object key prefix to use in the redirect request.
          type: string
        ReplaceKeyWith:
          description: The specific object key to use in the redirect request.d
          type: string
    RoutingRuleCondition:
      description: >-
        A container for describing a condition that must be met for the
        specified redirect to apply.You must specify at least one of
        HttpErrorCodeReturnedEquals and KeyPrefixEquals
      type: object
      additionalProperties: false
      properties:
        KeyPrefixEquals:
          description: The object key name prefix when the redirect is applied.
          type: string
        HttpErrorCodeReturnedEquals:
          description: 'The HTTP error code when the redirect is applied. '
          type: string
    RedirectAllRequestsTo:
      description: >-
        Specifies the redirect behavior of all requests to a website endpoint of
        an Amazon S3 bucket.
      type: object
      additionalProperties: false
      properties:
        HostName:
          description: Name of the host where requests are redirected.
          type: string
        Protocol:
          description: >-
            Protocol to use when redirecting requests. The default is the
            protocol that is used in the original request.
          type: string
          enum:
            - http
            - https
      required:
        - HostName
    Bucket:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the specified bucket.
          maxLength: 2048
          minLength: 20
          pattern: >-
            ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        BucketName:
          description: A name for the bucket.
          maxLength: 63
          minLength: 3
          pattern: >-
            (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
          type: string
        OutpostId:
          description: The id of the customer outpost on which the bucket resides.
          pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
          type: string
        Tags:
          description: >-
            An arbitrary set of tags (key-value pairs) for this S3Outposts
            bucket.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          x-insertionOrder: false
          uniqueItems: true
        LifecycleConfiguration:
          description: >-
            Rules that define how Amazon S3Outposts manages objects during their
            lifetime.
          $ref: '#/components/schemas/LifecycleConfiguration'
      required:
        - BucketName
        - OutpostId
      x-stackql-resource-name: Bucket
    BucketPolicy:
      type: object
      properties:
        Bucket:
          description: The Amazon Resource Name (ARN) of the specified bucket.
          maxLength: 2048
          minLength: 20
          pattern: >-
            ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        PolicyDocument:
          description: >-
            A policy document containing permissions to add to the specified
            bucket.
          type: object
      required:
        - Bucket
        - PolicyDocument
      x-stackql-resource-name: BucketPolicy
    Region:
      type: object
      properties:
        Bucket:
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9][a-z0-9//.//-]*[a-z0-9]$
        BucketAccountId:
          type: string
          minLength: 12
          maxLength: 12
          pattern: ^[0-9]{12}$
      required:
        - Bucket
      additionalProperties: false
    MultiRegionAccessPoint:
      type: object
      properties:
        Name:
          description: The name you want to assign to this Multi Region Access Point.
          type: string
          pattern: ^[a-z0-9][-a-z0-9]{1,48}[a-z0-9]$
          minLength: 3
          maxLength: 50
        Alias:
          description: >-
            The alias is a unique identifier to, and is part of the public DNS
            name for this Multi Region Access Point
          type: string
        CreatedAt:
          description: The timestamp of the when the Multi Region Access Point is created
          type: string
        PublicAccessBlockConfiguration:
          description: >-
            The PublicAccessBlock configuration that you want to apply to this
            Multi Region Access Point. You can enable the configuration options
            in any combination. For more information about when Amazon S3
            considers a bucket or object public, see
            https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
            'The Meaning of Public' in the Amazon Simple Storage Service
            Developer Guide.
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
        Regions:
          description: >-
            The list of buckets that you want to associate this Multi Region
            Access Point with.
          type: array
          uniqueItems: true
          minItems: 1
          items:
            description: >-
              The name of the bucket that represents of the region belonging to
              this Multi Region Access Point.
            $ref: '#/components/schemas/Region'
      required:
        - Regions
      x-stackql-resource-name: MultiRegionAccessPoint
    MultiRegionAccessPointPolicy:
      type: object
      properties:
        MrapName:
          description: The name of the Multi Region Access Point to apply policy
          type: string
          pattern: ^[a-z0-9][-a-z0-9]{1,48}[a-z0-9]$
          minLength: 3
          maxLength: 50
        Policy:
          description: Policy document to apply to a Multi Region Access Point
          type: object
        PolicyStatus:
          description: The Policy Status associated with this Multi Region Access Point
          type: object
          properties:
            IsPublic:
              type: string
              description: Specifies whether the policy is public or not.
              enum:
                - 'true'
                - 'false'
          additionalProperties: false
          required:
            - IsPublic
      required:
        - Policy
        - MrapName
      x-stackql-resource-name: MultiRegionAccessPointPolicy
    Id:
      description: The ID that identifies the Amazon S3 Storage Lens configuration.
      type: string
      minLength: 1
      maxLength: 64
      pattern: ^[a-zA-Z0-9\-_.]+$
    BucketsAndRegions:
      description: >-
        S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens
        configuration.
      type: object
      additionalProperties: false
      properties:
        Buckets:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Arn'
        Regions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            type: string
            description: An AWS Region.
    AwsOrg:
      description: >-
        The AWS Organizations ARN to use in the Amazon S3 Storage Lens
        configuration.
      type: object
      additionalProperties: false
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
      required:
        - Arn
    ActivityMetrics:
      description: Enables activity metrics.
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: Specifies whether activity metrics are enabled or disabled.
          type: boolean
    AdvancedCostOptimizationMetrics:
      description: Enables advanced cost optimization metrics.
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: >-
            Specifies whether advanced cost optimization metrics are enabled or
            disabled.
          type: boolean
    AdvancedDataProtectionMetrics:
      description: Enables advanced data protection metrics.
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: >-
            Specifies whether advanced data protection metrics are enabled or
            disabled.
          type: boolean
    DetailedStatusCodesMetrics:
      description: Enables detailed status codes metrics.
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: >-
            Specifies whether detailed status codes metrics are enabled or
            disabled.
          type: boolean
    SelectionCriteria:
      description: Selection criteria for prefix-level metrics.
      type: object
      additionalProperties: false
      properties:
        MaxDepth:
          description: >-
            Max depth of prefixes of S3 key that Amazon S3 Storage Lens will
            analyze.
          type: integer
        Delimiter:
          description: Delimiter to divide S3 key into hierarchy of prefixes.
          type: string
        MinStorageBytesPercentage:
          description: >-
            The minimum storage bytes threshold for the prefixes to be included
            in the analysis.
          type: number
    PrefixLevelStorageMetrics:
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: >-
            Specifies whether prefix-level storage metrics are enabled or
            disabled.
          type: boolean
        SelectionCriteria:
          $ref: '#/components/schemas/SelectionCriteria'
    PrefixLevel:
      description: Prefix-level metrics configurations.
      type: object
      additionalProperties: false
      properties:
        StorageMetrics:
          $ref: '#/components/schemas/PrefixLevelStorageMetrics'
      required:
        - StorageMetrics
    BucketLevel:
      description: Bucket-level metrics configurations.
      type: object
      additionalProperties: false
      properties:
        ActivityMetrics:
          $ref: '#/components/schemas/ActivityMetrics'
        AdvancedCostOptimizationMetrics:
          $ref: '#/components/schemas/AdvancedCostOptimizationMetrics'
        AdvancedDataProtectionMetrics:
          $ref: '#/components/schemas/AdvancedDataProtectionMetrics'
        DetailedStatusCodesMetrics:
          $ref: '#/components/schemas/DetailedStatusCodesMetrics'
        PrefixLevel:
          $ref: '#/components/schemas/PrefixLevel'
    AccountLevel:
      description: Account-level metrics configurations.
      type: object
      additionalProperties: false
      properties:
        ActivityMetrics:
          $ref: '#/components/schemas/ActivityMetrics'
        AdvancedCostOptimizationMetrics:
          $ref: '#/components/schemas/AdvancedCostOptimizationMetrics'
        AdvancedDataProtectionMetrics:
          $ref: '#/components/schemas/AdvancedDataProtectionMetrics'
        DetailedStatusCodesMetrics:
          $ref: '#/components/schemas/DetailedStatusCodesMetrics'
        BucketLevel:
          $ref: '#/components/schemas/BucketLevel'
      required:
        - BucketLevel
    SSEKMS:
      description: AWS KMS server-side encryption.
      type: object
      additionalProperties: false
      properties:
        KeyId:
          description: The ARN of the KMS key to use for encryption.
          type: string
      required:
        - KeyId
    Encryption:
      description: >-
        Configures the server-side encryption for Amazon S3 Storage Lens report
        files with either S3-managed keys (SSE-S3) or KMS-managed keys
        (SSE-KMS).
      type: object
      oneOf:
        - additionalProperties: false
          properties:
            SSES3:
              description: S3 default server-side encryption.
              type: object
              additionalProperties: false
          required:
            - SSES3
        - additionalProperties: false
          properties:
            SSEKMS:
              $ref: '#/components/schemas/SSEKMS'
          required:
            - SSEKMS
    S3BucketDestination:
      description: >-
        S3 bucket destination settings for the Amazon S3 Storage Lens metrics
        export.
      type: object
      additionalProperties: false
      properties:
        OutputSchemaVersion:
          description: >-
            The version of the output schema to use when exporting Amazon S3
            Storage Lens metrics.
          type: string
          enum:
            - V_1
        Format:
          description: >-
            Specifies the file format to use when exporting Amazon S3 Storage
            Lens metrics export.
          type: string
          enum:
            - CSV
            - Parquet
        AccountId:
          description: The AWS account ID that owns the destination S3 bucket.
          type: string
        Arn:
          description: >-
            The ARN of the bucket to which Amazon S3 Storage Lens exports will
            be placed.
          type: string
        Prefix:
          description: The prefix to use for Amazon S3 Storage Lens export.
          type: string
        Encryption:
          $ref: '#/components/schemas/Encryption'
      required:
        - OutputSchemaVersion
        - Format
        - AccountId
        - Arn
    CloudWatchMetrics:
      description: >-
        CloudWatch metrics settings for the Amazon S3 Storage Lens metrics
        export.
      type: object
      additionalProperties: false
      properties:
        IsEnabled:
          description: Specifies whether CloudWatch metrics are enabled or disabled.
          type: boolean
      required:
        - IsEnabled
    StorageLensConfiguration:
      description: Specifies the details of Amazon S3 Storage Lens configuration.
      type: object
      additionalProperties: false
      properties:
        Id:
          $ref: '#/components/schemas/Id'
        Include:
          $ref: '#/components/schemas/BucketsAndRegions'
        Exclude:
          $ref: '#/components/schemas/BucketsAndRegions'
        AwsOrg:
          $ref: '#/components/schemas/AwsOrg'
        AccountLevel:
          $ref: '#/components/schemas/AccountLevel'
        DataExport:
          $ref: '#/components/schemas/DataExport'
        IsEnabled:
          description: >-
            Specifies whether the Amazon S3 Storage Lens configuration is
            enabled or disabled.
          type: boolean
        StorageLensArn:
          description: The ARN for the Amazon S3 Storage Lens configuration.
          type: string
      required:
        - Id
        - AccountLevel
        - IsEnabled
    StorageLens:
      type: object
      properties:
        StorageLensConfiguration:
          $ref: '#/components/schemas/StorageLensConfiguration'
        Tags:
          description: >-
            A set of tags (key-value pairs) for this Amazon S3 Storage Lens
            configuration.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
      required:
        - StorageLensConfiguration
      x-stackql-resource-name: StorageLens
    ObjectLambdaConfiguration:
      type: object
      additionalProperties: false
      description: >-
        Configuration to be applied to this Object lambda Access Point. It
        specifies Supporting Access Point, Transformation Configurations.
        Customers can also set if they like to enable Cloudwatch metrics for
        accesses to this Object lambda Access Point. Default setting for
        Cloudwatch metrics is disable.
      properties:
        SupportingAccessPoint:
          type: string
          minLength: 1
          maxLength: 2048
        AllowedFeatures:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            type: string
        CloudWatchMetricsEnabled:
          type: boolean
        TransformationConfigurations:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TransformationConfiguration'
      required:
        - SupportingAccessPoint
        - TransformationConfigurations
    TransformationConfiguration:
      type: object
      additionalProperties: false
      description: >-
        Configuration to define what content transformation will be applied on
        which S3 Action.
      properties:
        Actions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Action'
        ContentTransformation:
          type: object
          oneOf:
            - additionalProperties: false
              properties:
                AwsLambda:
                  $ref: '#/components/schemas/AwsLambda'
              required:
                - AwsLambda
      required:
        - Actions
        - ContentTransformation
    AwsLambda:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
          minLength: 1
          maxLength: 2048
        FunctionPayload:
          type: string
      required:
        - FunctionArn
    Action:
      type: string
    AccessPointPolicy:
      type: object
      properties:
        ObjectLambdaAccessPoint:
          description: >-
            The name of the Amazon S3 ObjectLambdaAccessPoint to which the
            policy applies.
          type: string
          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
          minLength: 3
          maxLength: 45
        PolicyDocument:
          description: >-
            A policy document containing permissions to add to the specified
            ObjectLambdaAccessPoint. For more information, see Access Policy
            Language Overview
            (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html)
            in the Amazon Simple Storage Service Developer Guide. 
          type: object
      required:
        - ObjectLambdaAccessPoint
        - PolicyDocument
      x-stackql-resource-name: AccessPointPolicy
    FilterPrefix:
      description: Prefix identifies one or more objects to which the rule applies.
      type: string
    FilterTag:
      description: >-
        Tag used to identify a subset of objects for an Amazon S3Outposts
        bucket.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
        Value:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
      required:
        - Key
        - Value
    FilterAndOperator:
      oneOf:
        - type: object
          additionalProperties: false
          required:
            - Tags
          properties:
            Prefix:
              description: Prefix identifies one or more objects to which the rule applies.
              $ref: '#/components/schemas/FilterPrefix'
            Tags:
              description: >-
                All of these tags must exist in the object's tag set in order
                for the rule to apply.
              type: array
              x-insertionOrder: false
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/FilterTag'
    NetworkInterface:
      description: The container for the network interface.
      type: object
      additionalProperties: false
      properties:
        NetworkInterfaceId:
          type: string
          minLength: 1
          maxLength: 100
      required:
        - NetworkInterfaceId
    Endpoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: >-
            ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/endpoint/[a-zA-Z0-9]{19}$
        CidrBlock:
          description: The VPC CIDR committed by this endpoint.
          minLength: 1
          maxLength: 20
          type: string
        CreationTime:
          description: The time the endpoint was created.
          $ref: '#/components/schemas/iso8601UTC'
        Id:
          description: The ID of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: ^[a-zA-Z0-9]{19}$
        NetworkInterfaces:
          description: The network interfaces of the endpoint.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
        OutpostId:
          description: The id of the customer outpost on which the bucket resides.
          pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
          type: string
        SecurityGroupId:
          description: The ID of the security group to use with the endpoint.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^sg-([0-9a-f]{8}|[0-9a-f]{17})$
        Status:
          type: string
          enum:
            - Available
            - Pending
            - Deleting
        SubnetId:
          description: >-
            The ID of the subnet in the selected VPC. The subnet must belong to
            the Outpost.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
        AccessType:
          description: >-
            The type of access for the on-premise network connectivity for the
            Outpost endpoint. To access endpoint from an on-premises network,
            you must specify the access type and provide the customer owned Ipv4
            pool.
          type: string
          enum:
            - CustomerOwnedIp
            - Private
          default: Private
        CustomerOwnedIpv4Pool:
          description: >-
            The ID of the customer-owned IPv4 pool for the Endpoint. IP
            addresses will be allocated from this pool for the endpoint.
          type: string
          pattern: ^ipv4pool-coip-([0-9a-f]{17})$
      required:
        - OutpostId
        - SecurityGroupId
        - SubnetId
      x-stackql-resource-name: Endpoint
x-stackql-views:
  - AccessPoint:
      name: AccessPoint
      id: aws.s3.AccessPoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Bucket') as bucket,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.VpcConfiguration.VpcId') as
              vpc_configuration_vpc_id,

              JSON_EXTRACT(Properties, '$.Policy') as policy

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::AccessPoint' ;
  - Bucket:
      name: Bucket
      id: aws.s3.Bucket
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,

              JSON_EXTRACT(Properties, '$.OutpostId') as outpost_id,

              JSON_EXTRACT(Properties, '$.Tags') as tags,

              JSON_EXTRACT(Properties, '$.LifecycleConfiguration.Rules') as
              lifecycle_configuration_rules

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::Bucket' ;
  - BucketPolicy:
      name: BucketPolicy
      id: aws.s3.BucketPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Bucket') as bucket,

              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::BucketPolicy' ;
  - MultiRegionAccessPoint:
      name: MultiRegionAccessPoint
      id: aws.s3.MultiRegionAccessPoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Alias') as alias,

              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,

              JSON_EXTRACT(Properties,
              '$.PublicAccessBlockConfiguration.BlockPublicAcls') as
              public_access_block_configuration_block_public_acls,

              JSON_EXTRACT(Properties,
              '$.PublicAccessBlockConfiguration.IgnorePublicAcls') as
              public_access_block_configuration_ignore_public_acls,

              JSON_EXTRACT(Properties,
              '$.PublicAccessBlockConfiguration.BlockPublicPolicy') as
              public_access_block_configuration_block_public_policy,

              JSON_EXTRACT(Properties,
              '$.PublicAccessBlockConfiguration.RestrictPublicBuckets') as
              public_access_block_configuration_restrict_public_buckets,

              JSON_EXTRACT(Properties, '$.Regions') as regions

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::MultiRegionAccessPoint' ;
  - MultiRegionAccessPointPolicy:
      name: MultiRegionAccessPointPolicy
      id: aws.s3.MultiRegionAccessPointPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.MrapName') as mrap_name,

              JSON_EXTRACT(Properties, '$.Policy') as policy,

              JSON_EXTRACT(Properties, '$.PolicyStatus') as policy_status

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::MultiRegionAccessPointPolicy' ;
  - StorageLens:
      name: StorageLens
      id: aws.s3.StorageLens
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.Id') as
              storage_lens_configuration_id,

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.Include') as
              storage_lens_configuration_include,

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.Exclude') as
              storage_lens_configuration_exclude,

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.AwsOrg') as
              storage_lens_configuration_aws_org,

              JSON_EXTRACT(Properties,
              '$.StorageLensConfiguration.AccountLevel') as
              storage_lens_configuration_account_level,

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.DataExport')
              as storage_lens_configuration_data_export,

              JSON_EXTRACT(Properties, '$.StorageLensConfiguration.IsEnabled')
              as storage_lens_configuration_is_enabled,

              JSON_EXTRACT(Properties,
              '$.StorageLensConfiguration.StorageLensArn') as
              storage_lens_configuration_storage_lens_arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::StorageLens' ;
  - AccessPointPolicy:
      name: AccessPointPolicy
      id: aws.s3.AccessPointPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ObjectLambdaAccessPoint') as
              object_lambda_access_point,

              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::AccessPointPolicy' ;
  - Endpoint:
      name: Endpoint
      id: aws.s3.Endpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.NetworkInterfaces') as
              network_interfaces,

              JSON_EXTRACT(Properties, '$.OutpostId') as outpost_id,

              JSON_EXTRACT(Properties, '$.SecurityGroupId') as
              security_group_id,

              JSON_EXTRACT(Properties, '$.Status') as status,

              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,

              JSON_EXTRACT(Properties, '$.AccessType') as access_type,

              JSON_EXTRACT(Properties, '$.CustomerOwnedIpv4Pool') as
              customer_owned_ipv4_pool

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::S3::Endpoint' ;
