openapi: 3.0.0
info:
  title: DAX
  version: 1.0.0
paths: {}
components:
  schemas:
    SSESpecification:
      type: object
      additionalProperties: false
      properties:
        SSEEnabled:
          type: boolean
    Cluster:
      type: object
      properties:
        SSESpecification:
          $ref: '#/components/schemas/SSESpecification'
        ClusterDiscoveryEndpointURL:
          type: string
        Description:
          type: string
        ReplicationFactor:
          type: integer
        ParameterGroupName:
          type: string
        AvailabilityZones:
          type: array
          uniqueItems: false
          items:
            type: string
        IAMRoleARN:
          type: string
        SubnetGroupName:
          type: string
        PreferredMaintenanceWindow:
          type: string
        ClusterEndpointEncryptionType:
          type: string
        NotificationTopicARN:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        NodeType:
          type: string
        ClusterName:
          type: string
        ClusterDiscoveryEndpoint:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Tags:
          type: object
      required:
        - ReplicationFactor
        - IAMRoleARN
        - NodeType
      x-stackql-resource-name: Cluster
    ParameterGroup:
      type: object
      properties:
        ParameterNameValues:
          type: object
        Description:
          type: string
        Id:
          type: string
        ParameterGroupName:
          type: string
      x-stackql-resource-name: ParameterGroup
    SubnetGroup:
      type: object
      properties:
        Description:
          type: string
        Id:
          type: string
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
        SubnetGroupName:
          type: string
      required:
        - SubnetIds
      x-stackql-resource-name: SubnetGroup
x-stackql-views:
  - Cluster:
      name: Cluster
      id: aws.dax.Cluster
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.SSESpecification.SSEEnabled') as
              s_se_specification_ss_eenabled,

              JSON_EXTRACT(Properties, '$.ClusterDiscoveryEndpointURL') as
              cluster_discovery_endpoint_ur_l,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.ReplicationFactor') as
              replication_factor,

              JSON_EXTRACT(Properties, '$.ParameterGroupName') as
              parameter_group_name,

              JSON_EXTRACT(Properties, '$.AvailabilityZones') as
              availability_zones,

              JSON_EXTRACT(Properties, '$.IAMRoleARN') as i_am_role_ar_n,

              JSON_EXTRACT(Properties, '$.SubnetGroupName') as
              subnet_group_name,

              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as
              preferred_maintenance_window,

              JSON_EXTRACT(Properties, '$.ClusterEndpointEncryptionType') as
              cluster_endpoint_encryption_type,

              JSON_EXTRACT(Properties, '$.NotificationTopicARN') as
              notification_topic_ar_n,

              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as
              security_group_ids,

              JSON_EXTRACT(Properties, '$.NodeType') as node_type,

              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,

              JSON_EXTRACT(Properties, '$.ClusterDiscoveryEndpoint') as
              cluster_discovery_endpoint,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Tags') as tags

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::DAX::Cluster' ;
  - ParameterGroup:
      name: ParameterGroup
      id: aws.dax.ParameterGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.ParameterNameValues') as
              parameter_name_values,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.ParameterGroupName') as
              parameter_group_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::DAX::ParameterGroup' ;
  - SubnetGroup:
      name: SubnetGroup
      id: aws.dax.SubnetGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,

              JSON_EXTRACT(Properties, '$.SubnetGroupName') as subnet_group_name

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::DAX::SubnetGroup' ;
