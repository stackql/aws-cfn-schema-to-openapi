openapi: 3.0.0
info:
  title: ServiceCatalogAppRegistry
  version: 1.0.0
paths: {}
components:
  schemas:
    Tags:
      type: object
      x-patternProperties:
        ^[a-zA-Z+-=._:/]+$:
          type: string
          maxLength: 256
      maxProperties: 50
      additionalProperties: false
    Application:
      type: object
      properties:
        Id:
          type: string
          pattern: '[a-z0-9]{26}'
          x-is-top-level-property: true
        Arn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
          x-is-top-level-property: true
        Name:
          type: string
          description: 'The name of the application. '
          minLength: 1
          maxLength: 256
          pattern: \w+
          x-is-top-level-property: true
        Description:
          type: string
          description: 'The description of the application. '
          maxLength: 1024
          x-is-top-level-property: true
        Tags:
          $ref: '#/components/schemas/Tags'
          x-is-top-level-property: true
      required:
        - Name
      x-stackql-resource-name: Application
    AttributeGroup:
      type: object
      properties:
        Id:
          type: string
          pattern: '[a-z0-9]{12}'
          x-is-top-level-property: true
        Arn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/attribute-groups/[a-z0-9]+
          x-is-top-level-property: true
        Name:
          type: string
          description: 'The name of the attribute group. '
          minLength: 1
          maxLength: 256
          pattern: \w+
          x-is-top-level-property: true
        Description:
          type: string
          description: 'The description of the attribute group. '
          maxLength: 1024
          x-is-top-level-property: true
        Attributes:
          type: object
          x-is-top-level-property: true
        Tags:
          $ref: '#/components/schemas/Tags'
          x-is-top-level-property: true
      required:
        - Name
        - Attributes
      x-stackql-resource-name: AttributeGroup
    AttributeGroupAssociation:
      type: object
      properties:
        Application:
          type: string
          description: The name or the Id of the Application.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
          x-is-top-level-property: true
        AttributeGroup:
          type: string
          description: The name or the Id of the AttributeGroup.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
          x-is-top-level-property: true
        ApplicationArn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
          x-is-top-level-property: true
        AttributeGroupArn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/attribute-groups/[a-z0-9]+
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
      required:
        - Application
        - AttributeGroup
      x-stackql-resource-name: AttributeGroupAssociation
    ResourceAssociation:
      type: object
      properties:
        Application:
          type: string
          description: The name or the Id of the Application.
          minLength: 1
          maxLength: 256
          pattern: \w+|[a-z0-9]{12}
          x-is-top-level-property: true
        Resource:
          type: string
          description: The name or the Id of the Resource.
          pattern: >-
            \w+|arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}
          x-is-top-level-property: true
        ResourceType:
          type: string
          description: The type of the CFN Resource for now it's enum CFN_STACK.
          enum:
            - CFN_STACK
          x-is-top-level-property: true
        ApplicationArn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
          x-is-top-level-property: true
        ResourceArn:
          type: string
          pattern: >-
            arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}
          x-is-top-level-property: true
        Id:
          type: string
          x-is-top-level-property: true
      required:
        - Application
        - Resource
        - ResourceType
      x-stackql-resource-name: ResourceAssociation
x-stackql-views:
  - Application:
      name: Application
      id: aws.servicecatalogappregistry.Application
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName = 'AWS::ServiceCatalogAppRegistry::Application'
              ;
  - AttributeGroup:
      name: AttributeGroup
      id: aws.servicecatalogappregistry.AttributeGroup
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Id') as id,

              JSON_EXTRACT(Properties, '$.Arn') as arn,

              JSON_EXTRACT(Properties, '$.Name') as name,

              JSON_EXTRACT(Properties, '$.Description') as description,

              JSON_EXTRACT(Properties, '$.Attributes') as attributes

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::ServiceCatalogAppRegistry::AttributeGroup' ;
  - AttributeGroupAssociation:
      name: AttributeGroupAssociation
      id: aws.servicecatalogappregistry.AttributeGroupAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Application') as application,

              JSON_EXTRACT(Properties, '$.AttributeGroup') as attribute_group,

              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,

              JSON_EXTRACT(Properties, '$.AttributeGroupArn') as
              attribute_group_arn,

              JSON_EXTRACT(Properties, '$.Id') as id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation' ;
  - ResourceAssociation:
      name: ResourceAssociation
      id: aws.servicecatalogappregistry.ResourceAssociation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: >-
              SELECT 

              JSON_EXTRACT(Properties, '$.Application') as application,

              JSON_EXTRACT(Properties, '$.Resource') as resource,

              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,

              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,

              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,

              JSON_EXTRACT(Properties, '$.Id') as id

              FROM aws.cloud_control.resources WHERE region = 'ap-southeast-1'
              and data__TypeName =
              'AWS::ServiceCatalogAppRegistry::ResourceAssociation' ;
