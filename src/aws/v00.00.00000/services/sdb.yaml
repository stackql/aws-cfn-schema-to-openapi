openapi: 3.0.0
info:
  title: SDB
  version: 1.0.0
paths: {}
components:
  schemas:
    Domain:
      type: object
      properties:
        Id:
          type: string
        Description:
          type: string
      x-stackql-resource-name: domain
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
  x-stackQL-resources:
    domains:
      name: domains
      id: aws.sdb.domains
      x-cfn-schema-name: Domain
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SDB::Domain'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SDB::Domain'
    domain:
      name: domain
      id: aws.sdb.domain
      x-cfn-schema-name: Domain
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SDB::Domain'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Description') as description
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SDB::Domain'
