openapi: 3.0.0
info:
  title: IoT1Click
  version: 1.0.0
paths: {}
components:
  schemas:
    Device:
      type: object
      properties:
        DeviceId:
          type: string
        Enabled:
          type: boolean
        Arn:
          type: string
      required:
        - Enabled
        - DeviceId
      x-stackql-resource-name: device
      x-stackql-primaryIdentifier:
        - DeviceId
      x-create-only-properties:
        - DeviceId
      x-read-only-properties:
        - Arn
        - DeviceId
    Placement:
      type: object
      properties:
        Id:
          type: string
        PlacementName:
          type: string
        ProjectName:
          type: string
        AssociatedDevices:
          type: object
        Attributes:
          type: object
      required:
        - ProjectName
      x-stackql-resource-name: placement
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - PlacementName
        - AssociatedDevices
        - ProjectName
      x-read-only-properties:
        - Id
    PlacementTemplate:
      type: object
      additionalProperties: false
      properties:
        DeviceTemplates:
          type: object
        DefaultAttributes:
          type: object
    Project:
      type: object
      properties:
        Id:
          type: string
        ProjectName:
          type: string
        Arn:
          type: string
        Description:
          type: string
        PlacementTemplate:
          $ref: '#/components/schemas/PlacementTemplate'
      required:
        - PlacementTemplate
      x-stackql-resource-name: project
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - ProjectName
      x-read-only-properties:
        - Arn
        - Id
  x-stackQL-resources:
    devices:
      name: devices
      id: aws.iot1click.devices
      x-cfn-schema-name: Device
      x-type: list
      x-identifiers:
        - DeviceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Device'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DeviceId') as device_
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Device'
    device:
      name: device
      id: aws.iot1click.device
      x-cfn-schema-name: Device
      x-type: get
      x-identifiers:
        - DeviceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Device'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DeviceId') as device_id,
                json_extract_path_text(Properties, 'Enabled') as enabled,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Device'
    placements:
      name: placements
      id: aws.iot1click.placements
      x-cfn-schema-name: Placement
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Placement'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Placement'
    placement:
      name: placement
      id: aws.iot1click.placement
      x-cfn-schema-name: Placement
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PlacementName') as placement_name,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name,
              JSON_EXTRACT(Properties, '$.AssociatedDevices') as associated_devices,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Placement'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'PlacementName') as placement_name,
                json_extract_path_text(Properties, 'ProjectName') as project_name,
                json_extract_path_text(Properties, 'AssociatedDevices') as associated_devices,
                json_extract_path_text(Properties, 'Attributes') as attributes
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Placement'
    projects:
      name: projects
      id: aws.iot1click.projects
      x-cfn-schema-name: Project
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Project'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoT1Click::Project'
    project:
      name: project
      id: aws.iot1click.project
      x-cfn-schema-name: Project
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PlacementTemplate') as placement_template
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Project'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ProjectName') as project_name,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'PlacementTemplate') as placement_template
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoT1Click::Project'
