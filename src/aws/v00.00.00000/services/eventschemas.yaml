openapi: 3.0.0
info:
  title: EventSchemas
  version: 1.0.0
paths: {}
components:
  schemas:
    TagsEntry:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Discoverer:
      type: object
      properties:
        DiscovererArn:
          type: string
          description: The ARN of the discoverer.
        DiscovererId:
          type: string
          description: The Id of the discoverer.
        Description:
          type: string
          description: A description for the discoverer.
        SourceArn:
          type: string
          description: The ARN of the event bus.
        CrossAccount:
          type: boolean
          default: true
          description: Defines whether event schemas from other accounts are discovered. Default is True.
        State:
          type: string
          description: Defines the current state of the discoverer.
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          description: Tags associated with the resource.
      required:
        - SourceArn
      x-stackql-resource-name: discoverer
      x-stackql-primaryIdentifier:
        - DiscovererArn
      x-create-only-properties:
        - SourceArn
      x-read-only-properties:
        - DiscovererArn
        - DiscovererId
        - State
      x-required-permissions:
        create:
          - schemas:CreateDiscoverer
          - schemas:DescribeDiscoverer
          - schemas:TagResource
          - events:PutRule
          - events:PutTargets
          - events:EnableRule
          - events:ListTargetsByRule
          - iam:CreateServiceLinkedRole
        read:
          - schemas:DescribeDiscoverer
        update:
          - schemas:DescribeDiscoverer
          - schemas:UpdateDiscoverer
          - schemas:TagResource
          - schemas:UntagResource
          - schemas:ListTagsForResource
          - events:PutTargets
          - events:PutRule
        delete:
          - schemas:DescribeDiscoverer
          - schemas:DeleteDiscoverer
          - events:DeleteRule
          - events:DisableRule
          - events:RemoveTargets
        list:
          - schemas:ListDiscoverers
    Registry:
      type: object
      properties:
        RegistryName:
          type: string
          description: The name of the schema registry.
        Description:
          type: string
          description: A description of the registry to be created.
        RegistryArn:
          type: string
          description: The ARN of the registry.
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          description: Tags associated with the resource.
      x-stackql-resource-name: registry
      x-stackql-primaryIdentifier:
        - RegistryArn
      x-create-only-properties:
        - RegistryName
      x-read-only-properties:
        - RegistryArn
      x-required-permissions:
        create:
          - schemas:DescribeRegistry
          - schemas:CreateRegistry
          - schemas:TagResource
        read:
          - schemas:DescribeRegistry
        update:
          - schemas:DescribeRegistry
          - schemas:UpdateRegistry
          - schemas:TagResource
          - schemas:UntagResource
          - schemas:ListTagsForResource
        delete:
          - schemas:DescribeRegistry
          - schemas:DeleteRegistry
        list:
          - schemas:ListRegistries
    RegistryPolicy:
      type: object
      properties:
        Id:
          type: string
        Policy:
          type: object
        RegistryName:
          type: string
        RevisionId:
          type: string
      required:
        - RegistryName
        - Policy
      x-stackql-resource-name: registry_policy
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-permissions:
        create:
          - schemas:PutResourcePolicy
          - schemas:GetResourcePolicy
          - schemas:DescribeRegistry
        delete:
          - schemas:DeleteResourcePolicy
          - schemas:GetResourcePolicy
        update:
          - schemas:PutResourcePolicy
          - schemas:GetResourcePolicy
        read:
          - schemas:GetResourcePolicy
    Schema:
      type: object
      properties:
        Type:
          type: string
          description: The type of schema. Valid types include OpenApi3 and JSONSchemaDraft4.
        Description:
          type: string
          description: A description of the schema.
        SchemaVersion:
          type: string
          description: The version number of the schema.
        Content:
          type: string
          description: The source of the schema definition.
        RegistryName:
          type: string
          description: The name of the schema registry.
        SchemaArn:
          type: string
          description: The ARN of the schema.
        SchemaName:
          type: string
          description: The name of the schema.
        LastModified:
          type: string
          description: The last modified time of the schema.
        VersionCreatedDate:
          type: string
          description: The date the schema version was created.
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagsEntry'
          description: Tags associated with the resource.
      required:
        - Type
        - Content
        - RegistryName
      x-stackql-resource-name: schema
      x-stackql-primaryIdentifier:
        - SchemaArn
      x-create-only-properties:
        - SchemaName
        - RegistryName
      x-read-only-properties:
        - SchemaArn
        - LastModified
        - VersionCreatedDate
        - SchemaVersion
      x-required-permissions:
        create:
          - schemas:DescribeSchema
          - schemas:CreateSchema
          - schemas:TagResource
        read:
          - schemas:DescribeSchema
        update:
          - schemas:DescribeSchema
          - schemas:UpdateSchema
          - schemas:TagResource
          - schemas:UntagResource
          - schemas:ListTagsForResource
        delete:
          - schemas:DescribeSchema
          - schemas:DeleteSchema
          - schemas:DeleteSchemaVersion
        list:
          - schemas:ListSchemas
          - schemas:ListSchemaVersions
  x-stackQL-resources:
    discoverers:
      name: discoverers
      id: aws.eventschemas.discoverers
      x-cfn-schema-name: Discoverer
      x-type: list
      x-identifiers:
        - DiscovererArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DiscovererArn') as discoverer_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Discoverer'
    discoverer:
      name: discoverer
      id: aws.eventschemas.discoverer
      x-cfn-schema-name: Discoverer
      x-type: get
      x-identifiers:
        - DiscovererArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DiscovererArn') as discoverer_arn,
              JSON_EXTRACT(Properties, '$.DiscovererId') as discoverer_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,
              JSON_EXTRACT(Properties, '$.CrossAccount') as cross_account,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EventSchemas::Discoverer'
    registries:
      name: registries
      id: aws.eventschemas.registries
      x-cfn-schema-name: Registry
      x-type: list
      x-identifiers:
        - RegistryArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RegistryArn') as registry_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Registry'
    registry:
      name: registry
      id: aws.eventschemas.registry
      x-cfn-schema-name: Registry
      x-type: get
      x-identifiers:
        - RegistryArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RegistryArn') as registry_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EventSchemas::Registry'
    registry_policies:
      name: registry_policies
      id: aws.eventschemas.registry_policies
      x-cfn-schema-name: RegistryPolicy
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::RegistryPolicy'
    registry_policy:
      name: registry_policy
      id: aws.eventschemas.registry_policy
      x-cfn-schema-name: RegistryPolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.RevisionId') as revision_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EventSchemas::RegistryPolicy'
    schemata:
      name: schemata
      id: aws.eventschemas.schemata
      x-cfn-schema-name: Schema
      x-type: list
      x-identifiers:
        - SchemaArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EventSchemas::Schema'
    schema:
      name: schema
      id: aws.eventschemas.schema
      x-cfn-schema-name: Schema
      x-type: get
      x-identifiers:
        - SchemaArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.RegistryName') as registry_name,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn,
              JSON_EXTRACT(Properties, '$.SchemaName') as schema_name,
              JSON_EXTRACT(Properties, '$.LastModified') as last_modified,
              JSON_EXTRACT(Properties, '$.VersionCreatedDate') as version_created_date,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EventSchemas::Schema'
