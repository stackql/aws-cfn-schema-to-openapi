openapi: 3.0.0
info:
  title: Greengrass
  version: 1.0.0
paths: {}
components:
  schemas:
    ConnectorDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        Connectors:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Connector'
        ConnectorDefinitionId:
          type: string
      required:
        - Connectors
        - ConnectorDefinitionId
      x-stackql-resource-name: connector_definition_version
    Connector:
      type: object
      additionalProperties: false
      properties:
        ConnectorArn:
          type: string
        Parameters:
          type: object
        Id:
          type: string
      required:
        - ConnectorArn
        - Id
    ConnectorDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/ConnectorDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: connector_definition
    CoreDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        Cores:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Core'
        CoreDefinitionId:
          type: string
      required:
        - Cores
        - CoreDefinitionId
      x-stackql-resource-name: core_definition_version
    Core:
      type: object
      additionalProperties: false
      properties:
        SyncShadow:
          type: boolean
        ThingArn:
          type: string
        Id:
          type: string
        CertificateArn:
          type: string
      required:
        - ThingArn
        - Id
        - CertificateArn
    CoreDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/CoreDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: core_definition
    DeviceDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        DeviceDefinitionId:
          type: string
        Devices:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Device'
      required:
        - Devices
        - DeviceDefinitionId
      x-stackql-resource-name: device_definition_version
    Device:
      type: object
      additionalProperties: false
      properties:
        SyncShadow:
          type: boolean
        ThingArn:
          type: string
        Id:
          type: string
        CertificateArn:
          type: string
      required:
        - ThingArn
        - Id
        - CertificateArn
    DeviceDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/DeviceDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: device_definition
    FunctionDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        DefaultConfig:
          $ref: '#/components/schemas/DefaultConfig'
        Functions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Function'
        FunctionDefinitionId:
          type: string
      required:
        - FunctionDefinitionId
        - Functions
      x-stackql-resource-name: function_definition_version
    DefaultConfig:
      type: object
      additionalProperties: false
      properties:
        Execution:
          $ref: '#/components/schemas/Execution'
      required:
        - Execution
    Function:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
        FunctionConfiguration:
          $ref: '#/components/schemas/FunctionConfiguration'
        Id:
          type: string
      required:
        - FunctionArn
        - FunctionConfiguration
        - Id
    Execution:
      type: object
      additionalProperties: false
      properties:
        IsolationMode:
          type: string
        RunAs:
          $ref: '#/components/schemas/RunAs'
    FunctionConfiguration:
      type: object
      additionalProperties: false
      properties:
        MemorySize:
          type: integer
        Pinned:
          type: boolean
        ExecArgs:
          type: string
        Timeout:
          type: integer
        EncodingType:
          type: string
        Environment:
          $ref: '#/components/schemas/Environment'
        Executable:
          type: string
    RunAs:
      type: object
      additionalProperties: false
      properties:
        Uid:
          type: integer
        Gid:
          type: integer
    Environment:
      type: object
      additionalProperties: false
      properties:
        Variables:
          type: object
        Execution:
          $ref: '#/components/schemas/Execution'
        ResourceAccessPolicies:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ResourceAccessPolicy'
        AccessSysfs:
          type: boolean
    ResourceAccessPolicy:
      type: object
      additionalProperties: false
      properties:
        ResourceId:
          type: string
        Permission:
          type: string
      required:
        - ResourceId
    FunctionDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/FunctionDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: function_definition
    GroupVersion:
      type: object
      properties:
        Id:
          type: string
        LoggerDefinitionVersionArn:
          type: string
        DeviceDefinitionVersionArn:
          type: string
        FunctionDefinitionVersionArn:
          type: string
        CoreDefinitionVersionArn:
          type: string
        ResourceDefinitionVersionArn:
          type: string
        ConnectorDefinitionVersionArn:
          type: string
        SubscriptionDefinitionVersionArn:
          type: string
        GroupId:
          type: string
      required:
        - GroupId
      x-stackql-resource-name: group_version
    Group:
      type: object
      properties:
        RoleAttachedAt:
          type: string
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        RoleArn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/GroupVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: group
    LoggerDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        LoggerDefinitionId:
          type: string
        Loggers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Logger'
      required:
        - Loggers
        - LoggerDefinitionId
      x-stackql-resource-name: logger_definition_version
    Logger:
      type: object
      additionalProperties: false
      properties:
        Space:
          type: integer
        Type:
          type: string
        Level:
          type: string
        Id:
          type: string
        Component:
          type: string
      required:
        - Type
        - Level
        - Id
        - Component
    LoggerDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/LoggerDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: logger_definition
    SecretsManagerSecretResourceData:
      type: object
      additionalProperties: false
      properties:
        ARN:
          type: string
        AdditionalStagingLabelsToDownload:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - ARN
    ResourceDataContainer:
      type: object
      additionalProperties: false
      properties:
        LocalVolumeResourceData:
          $ref: '#/components/schemas/LocalVolumeResourceData'
        LocalDeviceResourceData:
          $ref: '#/components/schemas/LocalDeviceResourceData'
        S3MachineLearningModelResourceData:
          $ref: '#/components/schemas/S3MachineLearningModelResourceData'
        SecretsManagerSecretResourceData:
          $ref: '#/components/schemas/SecretsManagerSecretResourceData'
        SageMakerMachineLearningModelResourceData:
          $ref: '#/components/schemas/SageMakerMachineLearningModelResourceData'
    SageMakerMachineLearningModelResourceData:
      type: object
      additionalProperties: false
      properties:
        OwnerSetting:
          $ref: '#/components/schemas/ResourceDownloadOwnerSetting'
        SageMakerJobArn:
          type: string
        DestinationPath:
          type: string
      required:
        - DestinationPath
        - SageMakerJobArn
    ResourceInstance:
      type: object
      additionalProperties: false
      properties:
        ResourceDataContainer:
          $ref: '#/components/schemas/ResourceDataContainer'
        Id:
          type: string
        Name:
          type: string
      required:
        - ResourceDataContainer
        - Id
        - Name
    LocalVolumeResourceData:
      type: object
      additionalProperties: false
      properties:
        SourcePath:
          type: string
        DestinationPath:
          type: string
        GroupOwnerSetting:
          $ref: '#/components/schemas/GroupOwnerSetting'
      required:
        - SourcePath
        - DestinationPath
    LocalDeviceResourceData:
      type: object
      additionalProperties: false
      properties:
        SourcePath:
          type: string
        GroupOwnerSetting:
          $ref: '#/components/schemas/GroupOwnerSetting'
      required:
        - SourcePath
    S3MachineLearningModelResourceData:
      type: object
      additionalProperties: false
      properties:
        OwnerSetting:
          $ref: '#/components/schemas/ResourceDownloadOwnerSetting'
        DestinationPath:
          type: string
        S3Uri:
          type: string
      required:
        - DestinationPath
        - S3Uri
    ResourceDownloadOwnerSetting:
      type: object
      additionalProperties: false
      properties:
        GroupPermission:
          type: string
        GroupOwner:
          type: string
      required:
        - GroupOwner
        - GroupPermission
    ResourceDefinitionVersion:
      type: object
      properties:
        ResourceDefinitionId:
          type: string
        Resources:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ResourceInstance'
        Id:
          type: string
      required:
        - Resources
        - ResourceDefinitionId
      x-stackql-resource-name: resource_definition_version
    GroupOwnerSetting:
      type: object
      additionalProperties: false
      properties:
        AutoAddGroupOwner:
          type: boolean
        GroupOwner:
          type: string
      required:
        - AutoAddGroupOwner
    ResourceDefinition:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        LatestVersionArn:
          type: string
        Tags:
          type: object
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/ResourceDefinitionVersion'
      required:
        - Name
      x-stackql-resource-name: resource_definition
    SubscriptionDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        SubscriptionDefinitionId:
          type: string
        Subscriptions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Subscription'
      required:
        - SubscriptionDefinitionId
        - Subscriptions
      x-stackql-resource-name: subscription_definition_version
    Subscription:
      type: object
      additionalProperties: false
      properties:
        Target:
          type: string
        Id:
          type: string
        Source:
          type: string
        Subject:
          type: string
      required:
        - Target
        - Id
        - Source
        - Subject
    SubscriptionDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/SubscriptionDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: subscription_definition
    LambdaFunctionRecipeSource:
      type: object
      properties:
        LambdaArn:
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        ComponentPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPlatform'
          x-insertionOrder: false
        ComponentDependencies:
          type: object
          x-patternProperties:
            .*:
              $ref: '#/components/schemas/ComponentDependencyRequirement'
          additionalProperties: false
        ComponentLambdaParameters:
          $ref: '#/components/schemas/LambdaExecutionParameters'
      additionalProperties: false
    ComponentPlatform:
      type: object
      properties:
        Name:
          type: string
        Attributes:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
      additionalProperties: false
    ComponentDependencyRequirement:
      type: object
      properties:
        VersionRequirement:
          type: string
        DependencyType:
          type: string
          enum:
            - SOFT
            - HARD
      additionalProperties: false
    LambdaExecutionParameters:
      type: object
      properties:
        EventSources:
          type: array
          items:
            $ref: '#/components/schemas/LambdaEventSource'
          x-insertionOrder: false
        MaxQueueSize:
          type: integer
        MaxInstancesCount:
          type: integer
        MaxIdleTimeInSeconds:
          type: integer
        TimeoutInSeconds:
          type: integer
        StatusTimeoutInSeconds:
          type: integer
        Pinned:
          type: boolean
        InputPayloadEncodingType:
          type: string
          enum:
            - json
            - binary
        ExecArgs:
          type: array
          items:
            type: string
          x-insertionOrder: true
        EnvironmentVariables:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
        LinuxProcessParams:
          $ref: '#/components/schemas/LambdaLinuxProcessParams'
      additionalProperties: false
    LambdaEventSource:
      type: object
      properties:
        Topic:
          type: string
        Type:
          type: string
          enum:
            - PUB_SUB
            - IOT_CORE
      additionalProperties: false
    LambdaLinuxProcessParams:
      type: object
      properties:
        IsolationMode:
          type: string
          enum:
            - GreengrassContainer
            - NoContainer
        ContainerParams:
          $ref: '#/components/schemas/LambdaContainerParams'
      additionalProperties: false
    LambdaContainerParams:
      type: object
      properties:
        MemorySizeInKB:
          type: integer
        MountROSysfs:
          type: boolean
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/LambdaVolumeMount'
          x-insertionOrder: false
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/LambdaDeviceMount'
          x-insertionOrder: false
      additionalProperties: false
    LambdaVolumeMount:
      type: object
      properties:
        SourcePath:
          $ref: '#/components/schemas/FilesystemPath'
        DestinationPath:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    LambdaDeviceMount:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    FilesystemPath:
      type: string
    LambdaFilesystemPermission:
      type: string
      enum:
        - ro
        - rw
    LambdaAddGroupOwnerBoolean:
      type: boolean
    ComponentVersion:
      type: object
      properties:
        Arn:
          type: string
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        InlineRecipe:
          type: string
        LambdaFunction:
          $ref: '#/components/schemas/LambdaFunctionRecipeSource'
        Tags:
          type: object
          x-patternProperties:
            ^(?!aws:)[a-zA-Z+-=._:/]{1,128}$:
              type: string
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      x-stackql-resource-name: component_version
    ComponentDeploymentSpecification:
      type: object
      properties:
        ComponentVersion:
          type: string
          minLength: 1
          maxLength: 64
        ConfigurationUpdate:
          $ref: '#/components/schemas/ComponentConfigurationUpdate'
        RunWith:
          $ref: '#/components/schemas/ComponentRunWith'
      additionalProperties: false
    SystemResourceLimits:
      type: object
      properties:
        Memory:
          type: integer
          format: int64
          minimum: 0
          maximum: 9223372036854772000
        Cpus:
          type: number
          minimum: 0
      additionalProperties: false
    ComponentRunWith:
      type: object
      properties:
        PosixUser:
          type: string
          minLength: 1
        SystemResourceLimits:
          $ref: '#/components/schemas/SystemResourceLimits'
        WindowsUser:
          type: string
          minLength: 1
      additionalProperties: false
    ComponentConfigurationUpdate:
      type: object
      properties:
        Merge:
          type: string
          minLength: 1
          maxLength: 10485760
        Reset:
          type: array
          items:
            type: string
            minLength: 0
            maxLength: 256
          x-insertionOrder: false
      additionalProperties: false
    DeploymentIoTJobConfiguration:
      type: object
      properties:
        JobExecutionsRolloutConfig:
          $ref: '#/components/schemas/IoTJobExecutionsRolloutConfig'
        AbortConfig:
          $ref: '#/components/schemas/IoTJobAbortConfig'
        TimeoutConfig:
          $ref: '#/components/schemas/IoTJobTimeoutConfig'
      additionalProperties: false
    IoTJobExecutionsRolloutConfig:
      type: object
      properties:
        ExponentialRate:
          $ref: '#/components/schemas/IoTJobExponentialRolloutRate'
        MaximumPerMinute:
          type: integer
          minimum: 1
          maximum: 1000
      additionalProperties: false
    IoTJobAbortConfig:
      type: object
      properties:
        CriteriaList:
          type: array
          items:
            $ref: '#/components/schemas/IoTJobAbortCriteria'
          minItems: 1
          x-insertionOrder: false
      required:
        - CriteriaList
      additionalProperties: false
    IoTJobAbortCriteria:
      type: object
      properties:
        FailureType:
          type: string
          enum:
            - FAILED
            - REJECTED
            - TIMED_OUT
            - ALL
        Action:
          type: string
          enum:
            - CANCEL
        ThresholdPercentage:
          type: number
          minimum: 0
          maximum: 100
        MinNumberOfExecutedThings:
          type: integer
          minimum: 1
          maximum: 2147483647
      required:
        - FailureType
        - Action
        - ThresholdPercentage
        - MinNumberOfExecutedThings
      additionalProperties: false
    IoTJobTimeoutConfig:
      type: object
      properties:
        InProgressTimeoutInMinutes:
          type: integer
          minimum: 0
          maximum: 2147483647
      additionalProperties: false
    IoTJobExponentialRolloutRate:
      type: object
      properties:
        BaseRatePerMinute:
          type: integer
          minimum: 1
          maximum: 1000
        IncrementFactor:
          type: number
          minimum: 1
          maximum: 5
        RateIncreaseCriteria:
          $ref: '#/components/schemas/IoTJobRateIncreaseCriteria'
      required:
        - BaseRatePerMinute
        - IncrementFactor
        - RateIncreaseCriteria
      additionalProperties: false
    IoTJobRateIncreaseCriteria:
      type: object
      oneOf:
        - type: object
          additionalProperties: false
          properties:
            NumberOfNotifiedThings:
              $ref: '#/components/schemas/NumberOfThings'
        - type: object
          additionalProperties: false
          properties:
            NumberOfSucceededThings:
              $ref: '#/components/schemas/NumberOfThings'
    NumberOfThings:
      type: integer
      minimum: 1
      maximum: 2147483647
    DeploymentPolicies:
      type: object
      properties:
        FailureHandlingPolicy:
          type: string
          enum:
            - ROLLBACK
            - DO_NOTHING
        ComponentUpdatePolicy:
          $ref: '#/components/schemas/DeploymentComponentUpdatePolicy'
        ConfigurationValidationPolicy:
          $ref: '#/components/schemas/DeploymentConfigurationValidationPolicy'
      additionalProperties: false
    DeploymentComponentUpdatePolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
        Action:
          type: string
          enum:
            - NOTIFY_COMPONENTS
            - SKIP_NOTIFY_COMPONENTS
      additionalProperties: false
    DeploymentConfigurationValidationPolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
      additionalProperties: false
    Deployment:
      type: object
      properties:
        TargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:(thing|thinggroup)/.+
        ParentTargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:thinggroup/.+
        DeploymentId:
          type: string
          pattern: .+
        DeploymentName:
          type: string
          minLength: 1
          maxLength: 256
        Components:
          type: object
          x-patternProperties:
            .+:
              $ref: '#/components/schemas/ComponentDeploymentSpecification'
          additionalProperties: false
        IotJobConfiguration:
          $ref: '#/components/schemas/DeploymentIoTJobConfiguration'
        DeploymentPolicies:
          $ref: '#/components/schemas/DeploymentPolicies'
        Tags:
          type: object
          x-patternProperties:
            .*:
              type: string
              maxLength: 256
          maxProperties: 200
          additionalProperties: false
      required:
        - TargetArn
      x-stackql-resource-name: deployment
x-stackql-views:
  - connector_definition_version:
      name: connector_definition_version
      id: aws.greengrass.connector_definition_version
      x-cfn-schema-name: ConnectorDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Connectors') as connectors,
              JSON_EXTRACT(Properties, '$.ConnectorDefinitionId') as connector_definition_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinitionVersion' ;
  - connector_definition:
      name: connector_definition
      id: aws.greengrass.connector_definition
      x-cfn-schema-name: ConnectorDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Connectors') as initial_version_connectors,
              JSON_EXTRACT(Properties, '$.InitialVersion.ConnectorDefinitionId') as initial_version_connector_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinition' ;
  - core_definition_version:
      name: core_definition_version
      id: aws.greengrass.core_definition_version
      x-cfn-schema-name: CoreDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Cores') as cores,
              JSON_EXTRACT(Properties, '$.CoreDefinitionId') as core_definition_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::CoreDefinitionVersion' ;
  - core_definition:
      name: core_definition
      id: aws.greengrass.core_definition
      x-cfn-schema-name: CoreDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Cores') as initial_version_cores,
              JSON_EXTRACT(Properties, '$.InitialVersion.CoreDefinitionId') as initial_version_core_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::CoreDefinition' ;
  - device_definition_version:
      name: device_definition_version
      id: aws.greengrass.device_definition_version
      x-cfn-schema-name: DeviceDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DeviceDefinitionId') as device_definition_id,
              JSON_EXTRACT(Properties, '$.Devices') as devices
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinitionVersion' ;
  - device_definition:
      name: device_definition
      id: aws.greengrass.device_definition
      x-cfn-schema-name: DeviceDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.DeviceDefinitionId') as initial_version_device_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Devices') as initial_version_devices,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinition' ;
  - function_definition_version:
      name: function_definition_version
      id: aws.greengrass.function_definition_version
      x-cfn-schema-name: FunctionDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultConfig.Execution') as default_config_execution,
              JSON_EXTRACT(Properties, '$.Functions') as functions,
              JSON_EXTRACT(Properties, '$.FunctionDefinitionId') as function_definition_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinitionVersion' ;
  - function_definition:
      name: function_definition
      id: aws.greengrass.function_definition
      x-cfn-schema-name: FunctionDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.DefaultConfig') as initial_version_default_config,
              JSON_EXTRACT(Properties, '$.InitialVersion.Functions') as initial_version_functions,
              JSON_EXTRACT(Properties, '$.InitialVersion.FunctionDefinitionId') as initial_version_function_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinition' ;
  - group_version:
      name: group_version
      id: aws.greengrass.group_version
      x-cfn-schema-name: GroupVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LoggerDefinitionVersionArn') as logger_definition_version_arn,
              JSON_EXTRACT(Properties, '$.DeviceDefinitionVersionArn') as device_definition_version_arn,
              JSON_EXTRACT(Properties, '$.FunctionDefinitionVersionArn') as function_definition_version_arn,
              JSON_EXTRACT(Properties, '$.CoreDefinitionVersionArn') as core_definition_version_arn,
              JSON_EXTRACT(Properties, '$.ResourceDefinitionVersionArn') as resource_definition_version_arn,
              JSON_EXTRACT(Properties, '$.ConnectorDefinitionVersionArn') as connector_definition_version_arn,
              JSON_EXTRACT(Properties, '$.SubscriptionDefinitionVersionArn') as subscription_definition_version_arn,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::GroupVersion' ;
  - group:
      name: group
      id: aws.greengrass.group
      x-cfn-schema-name: Group
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RoleAttachedAt') as role_attached_at,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.LoggerDefinitionVersionArn') as initial_version_logger_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.DeviceDefinitionVersionArn') as initial_version_device_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.FunctionDefinitionVersionArn') as initial_version_function_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.CoreDefinitionVersionArn') as initial_version_core_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.ResourceDefinitionVersionArn') as initial_version_resource_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.ConnectorDefinitionVersionArn') as initial_version_connector_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.SubscriptionDefinitionVersionArn') as initial_version_subscription_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.GroupId') as initial_version_group_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::Group' ;
  - logger_definition_version:
      name: logger_definition_version
      id: aws.greengrass.logger_definition_version
      x-cfn-schema-name: LoggerDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LoggerDefinitionId') as logger_definition_id,
              JSON_EXTRACT(Properties, '$.Loggers') as loggers
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinitionVersion' ;
  - logger_definition:
      name: logger_definition
      id: aws.greengrass.logger_definition
      x-cfn-schema-name: LoggerDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.LoggerDefinitionId') as initial_version_logger_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Loggers') as initial_version_loggers,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinition' ;
  - resource_definition_version:
      name: resource_definition_version
      id: aws.greengrass.resource_definition_version
      x-cfn-schema-name: ResourceDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceDefinitionId') as resource_definition_id,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinitionVersion' ;
  - resource_definition:
      name: resource_definition
      id: aws.greengrass.resource_definition
      x-cfn-schema-name: ResourceDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.ResourceDefinitionId') as initial_version_resource_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Resources') as initial_version_resources,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinition' ;
  - subscription_definition_version:
      name: subscription_definition_version
      id: aws.greengrass.subscription_definition_version
      x-cfn-schema-name: SubscriptionDefinitionVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SubscriptionDefinitionId') as subscription_definition_id,
              JSON_EXTRACT(Properties, '$.Subscriptions') as subscriptions
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinitionVersion' ;
  - subscription_definition:
      name: subscription_definition
      id: aws.greengrass.subscription_definition
      x-cfn-schema-name: SubscriptionDefinition
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.SubscriptionDefinitionId') as initial_version_subscription_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Subscriptions') as initial_version_subscriptions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinition' ;
  - component_version:
      name: component_version
      id: aws.greengrass.component_version
      x-cfn-schema-name: ComponentVersion
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ComponentName') as component_name,
              JSON_EXTRACT(Properties, '$.ComponentVersion') as component_version,
              JSON_EXTRACT(Properties, '$.InlineRecipe') as inline_recipe,
              JSON_EXTRACT(Properties, '$.LambdaFunction.LambdaArn') as lambda_function_lambda_arn,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentName') as lambda_function_component_name,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentVersion') as lambda_function_component_version,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentPlatforms') as lambda_function_component_platforms,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentDependencies') as lambda_function_component_dependencies,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentLambdaParameters') as lambda_function_component_lambda_parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ComponentVersion' ;
  - deployment:
      name: deployment
      id: aws.greengrass.deployment
      x-cfn-schema-name: Deployment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(Properties, '$.ParentTargetArn') as parent_target_arn,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id,
              JSON_EXTRACT(Properties, '$.DeploymentName') as deployment_name,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.JobExecutionsRolloutConfig') as iot_job_configuration_job_executions_rollout_config,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.AbortConfig') as iot_job_configuration_abort_config,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.TimeoutConfig') as iot_job_configuration_timeout_config,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.FailureHandlingPolicy') as deployment_policies_failure_handling_policy,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.ComponentUpdatePolicy') as deployment_policies_component_update_policy,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.ConfigurationValidationPolicy') as deployment_policies_configuration_validation_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::Deployment' ;
