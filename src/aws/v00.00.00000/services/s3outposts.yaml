openapi: 3.0.0
info:
  title: S3Outposts
  version: 1.0.0
paths: {}
components:
  schemas:
    VpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        VpcId:
          description: Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
          type: string
          minLength: 1
          maxLength: 1024
    AccessPoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the specified AccessPoint.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/accesspoint\/[^:]+$
          type: string
        Bucket:
          description: The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        Name:
          description: A name for the AccessPoint.
          maxLength: 50
          minLength: 3
          pattern: ^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$
          type: string
        VpcConfiguration:
          description: Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint.
          $ref: '#/components/schemas/VpcConfiguration'
        Policy:
          description: The access point policy associated with this access point.
          type: object
      required:
        - Bucket
        - Name
        - VpcConfiguration
      x-stackql-resource-name: access_point
    BucketPolicy:
      type: object
      properties:
        Bucket:
          description: The Amazon Resource Name (ARN) of the specified bucket.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        PolicyDocument:
          description: A policy document containing permissions to add to the specified bucket.
          type: object
      required:
        - Bucket
        - PolicyDocument
      x-stackql-resource-name: bucket_policy
    iso8601UTC:
      description: The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
      type: string
      pattern: ^([0-2]\d{3})-(0[0-9]|1[0-2])-([0-2]\d|3[01])T([01]\d|2[0-4]):([0-5]\d):([0-6]\d)((\.\d{3})?)Z$
    NetworkInterface:
      description: The container for the network interface.
      type: object
      additionalProperties: false
      properties:
        NetworkInterfaceId:
          type: string
          minLength: 1
          maxLength: 100
      required:
        - NetworkInterfaceId
    Endpoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/endpoint/[a-zA-Z0-9]{19}$
        CidrBlock:
          description: The VPC CIDR committed by this endpoint.
          minLength: 1
          maxLength: 20
          type: string
        CreationTime:
          description: The time the endpoint was created.
          $ref: '#/components/schemas/iso8601UTC'
        Id:
          description: The ID of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: ^[a-zA-Z0-9]{19}$
        NetworkInterfaces:
          description: The network interfaces of the endpoint.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
        OutpostId:
          description: The id of the customer outpost on which the bucket resides.
          pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
          type: string
        SecurityGroupId:
          description: The ID of the security group to use with the endpoint.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^sg-([0-9a-f]{8}|[0-9a-f]{17})$
        Status:
          type: string
          enum:
            - Available
            - Pending
            - Deleting
        SubnetId:
          description: The ID of the subnet in the selected VPC. The subnet must belong to the Outpost.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
        AccessType:
          description: The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool.
          type: string
          enum:
            - CustomerOwnedIp
            - Private
          default: Private
        CustomerOwnedIpv4Pool:
          description: The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint.
          type: string
          pattern: ^ipv4pool-coip-([0-9a-f]{17})$
      required:
        - OutpostId
        - SecurityGroupId
        - SubnetId
      x-stackql-resource-name: endpoint
  x-stackQL-resources:
    access_point:
      name: access_point
      id: aws.s3outposts.access_point
      x-cfn-schema-name: AccessPoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.VpcConfiguration.VpcId') as vpc_configuration_vpc_id,
              JSON_EXTRACT(Properties, '$.Policy') as policy
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::AccessPoint' ;
    bucket_policy:
      name: bucket_policy
      id: aws.s3outposts.bucket_policy
      x-cfn-schema-name: BucketPolicy
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::BucketPolicy' ;
    endpoint:
      name: endpoint
      id: aws.s3outposts.endpoint
      x-cfn-schema-name: Endpoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaces') as network_interfaces,
              JSON_EXTRACT(Properties, '$.OutpostId') as outpost_id,
              JSON_EXTRACT(Properties, '$.SecurityGroupId') as security_group_id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.AccessType') as access_type,
              JSON_EXTRACT(Properties, '$.CustomerOwnedIpv4Pool') as customer_owned_ipv4_pool
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::Endpoint' ;
