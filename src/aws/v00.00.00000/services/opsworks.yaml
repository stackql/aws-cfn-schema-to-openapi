openapi: 3.0.0
info:
  title: OpsWorks
  version: 1.0.0
paths: {}
components:
  schemas:
    Source:
      type: object
      additionalProperties: false
      properties:
        Password:
          type: string
        Revision:
          type: string
        SshKey:
          type: string
        Type:
          type: string
        Url:
          type: string
        Username:
          type: string
    EnvironmentVariable:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Secure:
          type: boolean
        Value:
          type: string
      required:
        - Value
        - Key
    DataSource:
      type: object
      additionalProperties: false
      properties:
        Arn:
          type: string
        DatabaseName:
          type: string
        Type:
          type: string
    SslConfiguration:
      type: object
      additionalProperties: false
      properties:
        Certificate:
          type: string
        Chain:
          type: string
        PrivateKey:
          type: string
    App:
      type: object
      properties:
        Id:
          type: string
        AppSource:
          $ref: '#/components/schemas/Source'
        Attributes:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        DataSources:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DataSource'
        Description:
          type: string
        Domains:
          type: array
          uniqueItems: false
          items:
            type: string
        EnableSsl:
          type: boolean
        Environment:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        Name:
          type: string
        Shortname:
          type: string
        SslConfiguration:
          $ref: '#/components/schemas/SslConfiguration'
        StackId:
          type: string
        Type:
          type: string
      required:
        - Type
        - Name
        - StackId
      x-stackql-resource-name: app
    ElasticLoadBalancerAttachment:
      type: object
      properties:
        Id:
          type: string
        ElasticLoadBalancerName:
          type: string
        LayerId:
          type: string
      required:
        - LayerId
        - ElasticLoadBalancerName
      x-stackql-resource-name: elastic_load_balancer_attachment
    BlockDeviceMapping:
      type: object
      additionalProperties: false
      properties:
        DeviceName:
          type: string
        Ebs:
          $ref: '#/components/schemas/EbsBlockDevice'
        NoDevice:
          type: string
        VirtualName:
          type: string
    TimeBasedAutoScaling:
      type: object
      additionalProperties: false
      properties:
        Friday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Monday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Saturday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Sunday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Thursday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Tuesday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Wednesday:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
    EbsBlockDevice:
      type: object
      additionalProperties: false
      properties:
        DeleteOnTermination:
          type: boolean
        Iops:
          type: integer
        SnapshotId:
          type: string
        VolumeSize:
          type: integer
        VolumeType:
          type: string
    Instance:
      type: object
      properties:
        Id:
          type: string
        AvailabilityZone:
          type: string
        PrivateDnsName:
          type: string
        PrivateIp:
          type: string
        PublicDnsName:
          type: string
        PublicIp:
          type: string
        AgentVersion:
          type: string
        AmiId:
          type: string
        Architecture:
          type: string
        AutoScalingType:
          type: string
        BlockDeviceMappings:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        EbsOptimized:
          type: boolean
        ElasticIps:
          type: array
          uniqueItems: true
          items:
            type: string
        Hostname:
          type: string
        InstallUpdatesOnBoot:
          type: boolean
        InstanceType:
          type: string
        LayerIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Os:
          type: string
        RootDeviceType:
          type: string
        SshKeyName:
          type: string
        StackId:
          type: string
        SubnetId:
          type: string
        Tenancy:
          type: string
        TimeBasedAutoScaling:
          $ref: '#/components/schemas/TimeBasedAutoScaling'
        VirtualizationType:
          type: string
        Volumes:
          type: array
          uniqueItems: true
          items:
            type: string
      required:
        - LayerIds
        - InstanceType
        - StackId
      x-stackql-resource-name: instance
    LifecycleEventConfiguration:
      type: object
      additionalProperties: false
      properties:
        ShutdownEventConfiguration:
          $ref: '#/components/schemas/ShutdownEventConfiguration'
    LoadBasedAutoScaling:
      type: object
      additionalProperties: false
      properties:
        DownScaling:
          $ref: '#/components/schemas/AutoScalingThresholds'
        Enable:
          type: boolean
        UpScaling:
          $ref: '#/components/schemas/AutoScalingThresholds'
    Recipes:
      type: object
      additionalProperties: false
      properties:
        Configure:
          type: array
          uniqueItems: true
          items:
            type: string
        Deploy:
          type: array
          uniqueItems: true
          items:
            type: string
        Setup:
          type: array
          uniqueItems: true
          items:
            type: string
        Shutdown:
          type: array
          uniqueItems: true
          items:
            type: string
        Undeploy:
          type: array
          uniqueItems: true
          items:
            type: string
    VolumeConfiguration:
      type: object
      additionalProperties: false
      properties:
        Encrypted:
          type: boolean
        Iops:
          type: integer
        MountPoint:
          type: string
        NumberOfDisks:
          type: integer
        RaidLevel:
          type: integer
        Size:
          type: integer
        VolumeType:
          type: string
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 0
          maxLength: 256
        Key:
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 1
          maxLength: 128
      required:
        - Value
        - Key
    ShutdownEventConfiguration:
      type: object
      additionalProperties: false
      properties:
        DelayUntilElbConnectionsDrained:
          type: boolean
        ExecutionTimeout:
          type: integer
    AutoScalingThresholds:
      type: object
      additionalProperties: false
      properties:
        CpuThreshold:
          type: number
        IgnoreMetricsTime:
          type: integer
        InstanceCount:
          type: integer
        LoadThreshold:
          type: number
        MemoryThreshold:
          type: number
        ThresholdsWaitTime:
          type: integer
    Layer:
      type: object
      properties:
        Id:
          type: string
        Attributes:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        AutoAssignElasticIps:
          type: boolean
        AutoAssignPublicIps:
          type: boolean
        CustomInstanceProfileArn:
          type: string
        CustomJson:
          type: object
        CustomRecipes:
          $ref: '#/components/schemas/Recipes'
        CustomSecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        EnableAutoHealing:
          type: boolean
        InstallUpdatesOnBoot:
          type: boolean
        LifecycleEventConfiguration:
          $ref: '#/components/schemas/LifecycleEventConfiguration'
        LoadBasedAutoScaling:
          $ref: '#/components/schemas/LoadBasedAutoScaling'
        Name:
          type: string
        Packages:
          type: array
          uniqueItems: false
          items:
            type: string
        Shortname:
          type: string
        StackId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          type: string
        UseEbsOptimizedInstances:
          type: boolean
        VolumeConfigurations:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VolumeConfiguration'
      required:
        - EnableAutoHealing
        - Name
        - Type
        - AutoAssignElasticIps
        - Shortname
        - AutoAssignPublicIps
        - StackId
      x-stackql-resource-name: layer
    StackConfigurationManager:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
        Version:
          type: string
    RdsDbInstance:
      type: object
      additionalProperties: false
      properties:
        DbPassword:
          type: string
        DbUser:
          type: string
        RdsDbInstanceArn:
          type: string
      required:
        - DbPassword
        - DbUser
        - RdsDbInstanceArn
    ElasticIp:
      type: object
      additionalProperties: false
      properties:
        Ip:
          type: string
        Name:
          type: string
      required:
        - Ip
    ChefConfiguration:
      type: object
      additionalProperties: false
      properties:
        BerkshelfVersion:
          type: string
        ManageBerkshelf:
          type: boolean
    Stack:
      type: object
      properties:
        Id:
          type: string
        AgentVersion:
          type: string
        Attributes:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        ChefConfiguration:
          $ref: '#/components/schemas/ChefConfiguration'
        CloneAppIds:
          type: array
          uniqueItems: true
          items:
            type: string
        ClonePermissions:
          type: boolean
        ConfigurationManager:
          $ref: '#/components/schemas/StackConfigurationManager'
        CustomCookbooksSource:
          $ref: '#/components/schemas/Source'
        CustomJson:
          type: object
        DefaultAvailabilityZone:
          type: string
        DefaultInstanceProfileArn:
          type: string
        DefaultOs:
          type: string
        DefaultRootDeviceType:
          type: string
        DefaultSshKeyName:
          type: string
        DefaultSubnetId:
          type: string
        EcsClusterArn:
          type: string
        ElasticIps:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ElasticIp'
        HostnameTheme:
          type: string
        Name:
          type: string
        RdsDbInstances:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RdsDbInstance'
        ServiceRoleArn:
          type: string
        SourceStackId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        UseCustomCookbooks:
          type: boolean
        UseOpsworksSecurityGroups:
          type: boolean
        VpcId:
          type: string
      required:
        - DefaultInstanceProfileArn
        - ServiceRoleArn
        - Name
      x-stackql-resource-name: stack
    UserProfile:
      type: object
      properties:
        Id:
          type: string
        SshUsername:
          type: string
        AllowSelfManagement:
          type: boolean
        IamUserArn:
          type: string
        SshPublicKey:
          type: string
      required:
        - IamUserArn
      x-stackql-resource-name: user_profile
    Volume:
      type: object
      properties:
        Id:
          type: string
        Ec2VolumeId:
          type: string
        MountPoint:
          type: string
        Name:
          type: string
        StackId:
          type: string
      required:
        - Ec2VolumeId
        - StackId
      x-stackql-resource-name: volume
    EngineAttribute:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          pattern: (?s).*
          maxLength: 10000
        Name:
          type: string
          pattern: (?s).*
          maxLength: 10000
    Server:
      type: object
      properties:
        KeyPair:
          type: string
          pattern: .*
          maxLength: 10000
        EngineVersion:
          type: string
          maxLength: 10000
        ServiceRoleArn:
          type: string
          pattern: arn:aws:iam::[0-9]{12}:role/.*
          maxLength: 10000
        DisableAutomatedBackup:
          type: boolean
        BackupId:
          type: string
          pattern: '[a-zA-Z][a-zA-Z0-9\-\.\:]*'
          maxLength: 79
        EngineModel:
          type: string
          maxLength: 10000
        PreferredMaintenanceWindow:
          type: string
          pattern: ^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
          maxLength: 10000
        AssociatePublicIpAddress:
          type: boolean
        InstanceProfileArn:
          type: string
          pattern: arn:aws:iam::[0-9]{12}:instance-profile/.*
          maxLength: 10000
        CustomCertificate:
          type: string
          pattern: (?s)\s*-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----\s*
          maxLength: 2097152
        PreferredBackupWindow:
          type: string
          pattern: ^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
          maxLength: 10000
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
            maxLength: 10000
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
            maxLength: 10000
        CustomDomain:
          type: string
          pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$
          maxLength: 253
        Endpoint:
          type: string
          maxLength: 10000
        CustomPrivateKey:
          type: string
          pattern: (?ms)\s*^-----BEGIN (?-s:.*)PRIVATE KEY-----$.*?^-----END (?-s:.*)PRIVATE KEY-----$\s*
          maxLength: 4096
        ServerName:
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
        EngineAttributes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EngineAttribute'
        BackupRetentionCount:
          type: integer
          minLength: 1
        Arn:
          type: string
          maxLength: 10000
        InstanceType:
          type: string
          maxLength: 10000
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Engine:
          type: string
          maxLength: 10000
      required:
        - ServiceRoleArn
        - InstanceProfileArn
        - InstanceType
      x-stackql-resource-name: server
  x-stackQL-resources:
    app:
      name: app
      id: aws.opsworks.app
      x-cfn-schema-name: App
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AppSource.Password') as app_source_password,
              JSON_EXTRACT(Properties, '$.AppSource.Revision') as app_source_revision,
              JSON_EXTRACT(Properties, '$.AppSource.SshKey') as app_source_ssh_key,
              JSON_EXTRACT(Properties, '$.AppSource.Type') as app_source_type,
              JSON_EXTRACT(Properties, '$.AppSource.Url') as app_source_url,
              JSON_EXTRACT(Properties, '$.AppSource.Username') as app_source_username,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Domains') as domains,
              JSON_EXTRACT(Properties, '$.EnableSsl') as enable_ssl,
              JSON_EXTRACT(Properties, '$.Environment') as environment,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Shortname') as shortname,
              JSON_EXTRACT(Properties, '$.SslConfiguration.Certificate') as ssl_configuration_certificate,
              JSON_EXTRACT(Properties, '$.SslConfiguration.Chain') as ssl_configuration_chain,
              JSON_EXTRACT(Properties, '$.SslConfiguration.PrivateKey') as ssl_configuration_private_key,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::App' ;
    elastic_load_balancer_attachment:
      name: elastic_load_balancer_attachment
      id: aws.opsworks.elastic_load_balancer_attachment
      x-cfn-schema-name: ElasticLoadBalancerAttachment
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ElasticLoadBalancerName') as elastic_load_balancer_name,
              JSON_EXTRACT(Properties, '$.LayerId') as layer_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::ElasticLoadBalancerAttachment' ;
    instance:
      name: instance
      id: aws.opsworks.instance
      x-cfn-schema-name: Instance
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.PrivateDnsName') as private_dns_name,
              JSON_EXTRACT(Properties, '$.PrivateIp') as private_ip,
              JSON_EXTRACT(Properties, '$.PublicDnsName') as public_dns_name,
              JSON_EXTRACT(Properties, '$.PublicIp') as public_ip,
              JSON_EXTRACT(Properties, '$.AgentVersion') as agent_version,
              JSON_EXTRACT(Properties, '$.AmiId') as ami_id,
              JSON_EXTRACT(Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(Properties, '$.AutoScalingType') as auto_scaling_type,
              JSON_EXTRACT(Properties, '$.BlockDeviceMappings') as block_device_mappings,
              JSON_EXTRACT(Properties, '$.EbsOptimized') as ebs_optimized,
              JSON_EXTRACT(Properties, '$.ElasticIps') as elastic_ips,
              JSON_EXTRACT(Properties, '$.Hostname') as hostname,
              JSON_EXTRACT(Properties, '$.InstallUpdatesOnBoot') as install_updates_on_boot,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.LayerIds') as layer_ids,
              JSON_EXTRACT(Properties, '$.Os') as os,
              JSON_EXTRACT(Properties, '$.RootDeviceType') as root_device_type,
              JSON_EXTRACT(Properties, '$.SshKeyName') as ssh_key_name,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.Tenancy') as tenancy,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Friday') as time_based_auto_scaling_friday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Monday') as time_based_auto_scaling_monday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Saturday') as time_based_auto_scaling_saturday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Sunday') as time_based_auto_scaling_sunday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Thursday') as time_based_auto_scaling_thursday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Tuesday') as time_based_auto_scaling_tuesday,
              JSON_EXTRACT(Properties, '$.TimeBasedAutoScaling.Wednesday') as time_based_auto_scaling_wednesday,
              JSON_EXTRACT(Properties, '$.VirtualizationType') as virtualization_type,
              JSON_EXTRACT(Properties, '$.Volumes') as volumes
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::Instance' ;
    layer:
      name: layer
      id: aws.opsworks.layer
      x-cfn-schema-name: Layer
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.AutoAssignElasticIps') as auto_assign_elastic_ips,
              JSON_EXTRACT(Properties, '$.AutoAssignPublicIps') as auto_assign_public_ips,
              JSON_EXTRACT(Properties, '$.CustomInstanceProfileArn') as custom_instance_profile_arn,
              JSON_EXTRACT(Properties, '$.CustomJson') as custom_json,
              JSON_EXTRACT(Properties, '$.CustomRecipes.Configure') as custom_recipes_configure,
              JSON_EXTRACT(Properties, '$.CustomRecipes.Deploy') as custom_recipes_deploy,
              JSON_EXTRACT(Properties, '$.CustomRecipes.Setup') as custom_recipes_setup,
              JSON_EXTRACT(Properties, '$.CustomRecipes.Shutdown') as custom_recipes_shutdown,
              JSON_EXTRACT(Properties, '$.CustomRecipes.Undeploy') as custom_recipes_undeploy,
              JSON_EXTRACT(Properties, '$.CustomSecurityGroupIds') as custom_security_group_ids,
              JSON_EXTRACT(Properties, '$.EnableAutoHealing') as enable_auto_healing,
              JSON_EXTRACT(Properties, '$.InstallUpdatesOnBoot') as install_updates_on_boot,
              JSON_EXTRACT(Properties, '$.LifecycleEventConfiguration.ShutdownEventConfiguration') as lifecycle_event_configuration_shutdown_event_configuration,
              JSON_EXTRACT(Properties, '$.LoadBasedAutoScaling.DownScaling') as load_based_auto_scaling_down_scaling,
              JSON_EXTRACT(Properties, '$.LoadBasedAutoScaling.Enable') as load_based_auto_scaling_enable,
              JSON_EXTRACT(Properties, '$.LoadBasedAutoScaling.UpScaling') as load_based_auto_scaling_up_scaling,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Packages') as packages,
              JSON_EXTRACT(Properties, '$.Shortname') as shortname,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UseEbsOptimizedInstances') as use_ebs_optimized_instances,
              JSON_EXTRACT(Properties, '$.VolumeConfigurations') as volume_configurations
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::Layer' ;
    stack:
      name: stack
      id: aws.opsworks.stack
      x-cfn-schema-name: Stack
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.AgentVersion') as agent_version,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.ChefConfiguration.BerkshelfVersion') as chef_configuration_berkshelf_version,
              JSON_EXTRACT(Properties, '$.ChefConfiguration.ManageBerkshelf') as chef_configuration_manage_berkshelf,
              JSON_EXTRACT(Properties, '$.CloneAppIds') as clone_app_ids,
              JSON_EXTRACT(Properties, '$.ClonePermissions') as clone_permissions,
              JSON_EXTRACT(Properties, '$.ConfigurationManager.Name') as configuration_manager_name,
              JSON_EXTRACT(Properties, '$.ConfigurationManager.Version') as configuration_manager_version,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.Password') as custom_cookbooks_source_password,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.Revision') as custom_cookbooks_source_revision,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.SshKey') as custom_cookbooks_source_ssh_key,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.Type') as custom_cookbooks_source_type,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.Url') as custom_cookbooks_source_url,
              JSON_EXTRACT(Properties, '$.CustomCookbooksSource.Username') as custom_cookbooks_source_username,
              JSON_EXTRACT(Properties, '$.CustomJson') as custom_json,
              JSON_EXTRACT(Properties, '$.DefaultAvailabilityZone') as default_availability_zone,
              JSON_EXTRACT(Properties, '$.DefaultInstanceProfileArn') as default_instance_profile_arn,
              JSON_EXTRACT(Properties, '$.DefaultOs') as default_os,
              JSON_EXTRACT(Properties, '$.DefaultRootDeviceType') as default_root_device_type,
              JSON_EXTRACT(Properties, '$.DefaultSshKeyName') as default_ssh_key_name,
              JSON_EXTRACT(Properties, '$.DefaultSubnetId') as default_subnet_id,
              JSON_EXTRACT(Properties, '$.EcsClusterArn') as ecs_cluster_arn,
              JSON_EXTRACT(Properties, '$.ElasticIps') as elastic_ips,
              JSON_EXTRACT(Properties, '$.HostnameTheme') as hostname_theme,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RdsDbInstances') as rds_db_instances,
              JSON_EXTRACT(Properties, '$.ServiceRoleArn') as service_role_arn,
              JSON_EXTRACT(Properties, '$.SourceStackId') as source_stack_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UseCustomCookbooks') as use_custom_cookbooks,
              JSON_EXTRACT(Properties, '$.UseOpsworksSecurityGroups') as use_opsworks_security_groups,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::Stack' ;
    user_profile:
      name: user_profile
      id: aws.opsworks.user_profile
      x-cfn-schema-name: UserProfile
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SshUsername') as ssh_username,
              JSON_EXTRACT(Properties, '$.AllowSelfManagement') as allow_self_management,
              JSON_EXTRACT(Properties, '$.IamUserArn') as iam_user_arn,
              JSON_EXTRACT(Properties, '$.SshPublicKey') as ssh_public_key
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::UserProfile' ;
    volume:
      name: volume
      id: aws.opsworks.volume
      x-cfn-schema-name: Volume
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Ec2VolumeId') as ec2_volume_id,
              JSON_EXTRACT(Properties, '$.MountPoint') as mount_point,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::Volume' ;
    server:
      name: server
      id: aws.opsworks.server
      x-cfn-schema-name: Server
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyPair') as key_pair,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.ServiceRoleArn') as service_role_arn,
              JSON_EXTRACT(Properties, '$.DisableAutomatedBackup') as disable_automated_backup,
              JSON_EXTRACT(Properties, '$.BackupId') as backup_id,
              JSON_EXTRACT(Properties, '$.EngineModel') as engine_model,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.AssociatePublicIpAddress') as associate_public_ip_address,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.CustomCertificate') as custom_certificate,
              JSON_EXTRACT(Properties, '$.PreferredBackupWindow') as preferred_backup_window,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.CustomDomain') as custom_domain,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.CustomPrivateKey') as custom_private_key,
              JSON_EXTRACT(Properties, '$.ServerName') as server_name,
              JSON_EXTRACT(Properties, '$.EngineAttributes') as engine_attributes,
              JSON_EXTRACT(Properties, '$.BackupRetentionCount') as backup_retention_count,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Engine') as engine
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorks::Server' ;
