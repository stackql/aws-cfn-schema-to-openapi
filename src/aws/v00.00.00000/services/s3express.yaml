openapi: 3.0.0
info:
  title: S3Express
  version: 1.0.0
paths: {}
components:
  schemas:
    BucketPolicy:
      type: object
      properties:
        Bucket:
          description: The name of the S3 directory bucket to which the policy applies.
          type: string
        PolicyDocument:
          type: string
      required:
        - Bucket
        - PolicyDocument
      x-stackql-resource-name: bucket_policy
      x-stackql-primaryIdentifier:
        - Bucket
      x-create-only-properties:
        - Bucket
      x-required-permissions:
        create:
          - s3express:GetBucketPolicy
          - s3express:PutBucketPolicy
        read:
          - s3express:GetBucketPolicy
        update:
          - s3express:GetBucketPolicy
          - s3express:PutBucketPolicy
        delete:
          - s3express:GetBucketPolicy
          - s3express:DeleteBucketPolicy
        list:
          - s3express:GetBucketPolicy
          - s3express:ListAllMyDirectoryBuckets
    Arn:
      description: The Amazon Resource Name (ARN) of the specified bucket.
      type: string
    DirectoryBucket:
      type: object
      properties:
        BucketName:
          description: Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
          maxLength: 63
          pattern: ^[a-z0-9][a-z0-9//.//-]*[a-z0-9]$
          type: string
        LocationName:
          description: Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is 'use1-az5'.
          type: string
        DataRedundancy:
          description: Specifies the number of Availability Zone that's used for redundancy for the bucket.
          type: string
          enum:
            - SingleAvailabilityZone
        Arn:
          $ref: '#/components/schemas/Arn'
          description: Returns the Amazon Resource Name (ARN) of the specified bucket.
          x-examples:
            - arn:aws:s3express:us-west-2:123456789123:bucket/DOC-EXAMPLE-BUCKET--usw2-az1--x-s3
      required:
        - LocationName
        - DataRedundancy
      x-stackql-resource-name: directory_bucket
      x-stackql-primaryIdentifier:
        - BucketName
      x-create-only-properties:
        - BucketName
        - LocationName
        - DataRedundancy
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - s3express:CreateBucket
          - s3express:ListAllMyDirectoryBuckets
        read:
          - s3express:ListAllMyDirectoryBuckets
        delete:
          - s3express:DeleteBucket
          - s3express:ListAllMyDirectoryBuckets
        list:
          - s3express:ListAllMyDirectoryBuckets
  x-stackQL-resources:
    bucket_policies:
      name: bucket_policies
      id: aws.s3express.bucket_policies
      x-cfn-schema-name: BucketPolicy
      x-type: list
      x-identifiers:
        - Bucket
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Express::BucketPolicy'
    bucket_policy:
      name: bucket_policy
      id: aws.s3express.bucket_policy
      x-cfn-schema-name: BucketPolicy
      x-type: get
      x-identifiers:
        - Bucket
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Express::BucketPolicy'
    directory_buckets:
      name: directory_buckets
      id: aws.s3express.directory_buckets
      x-cfn-schema-name: DirectoryBucket
      x-type: list
      x-identifiers:
        - BucketName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Express::DirectoryBucket'
    directory_bucket:
      name: directory_bucket
      id: aws.s3express.directory_bucket
      x-cfn-schema-name: DirectoryBucket
      x-type: get
      x-identifiers:
        - BucketName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.LocationName') as location_name,
              JSON_EXTRACT(Properties, '$.DataRedundancy') as data_redundancy,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Express::DirectoryBucket'
