openapi: 3.0.0
info:
  title: DMS
  version: 1.0.0
paths: {}
components:
  schemas:
    Certificate:
      type: object
      properties:
        Id:
          type: string
        CertificateIdentifier:
          type: string
        CertificatePem:
          type: string
        CertificateWallet:
          type: string
      x-stackql-resource-name: certificate
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - CertificateIdentifier
        - CertificatePem
        - CertificateWallet
      x-read-only-properties:
        - Id
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    DmsSslModeValue:
      type: string
      enum:
        - none
        - require
        - verify_ca
        - verify_full
    DataProvider:
      type: object
      properties:
        DataProviderName:
          description: The property describes a name to identify the data provider.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderIdentifier:
          description: The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        DataProviderArn:
          description: The data provider ARN.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderCreationTime:
          description: The data provider creation time.
          type: string
          minLength: 1
          maxLength: 40
        Description:
          description: The optional description of the data provider.
          type: string
          minLength: 1
          maxLength: 255
        Engine:
          description: The property describes a data engine for the data provider.
          type: string
          enum:
            - postgres
            - mysql
            - oracle
            - sqlserver
            - aurora
            - aurora_postgresql
        ExactSettings:
          description: The property describes the exact settings which can be modified
          type: boolean
          default: false
        Settings:
          description: The property identifies the exact type of settings for the data provider.
          type: object
          oneOf:
            - description: PostgreSqlSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                PostgreSqlSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
            - description: MySqlSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                MySqlSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
            - description: OracleSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                OracleSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                    AsmServer:
                      type: string
                    SecretsManagerOracleAsmSecretId:
                      type: string
                    SecretsManagerOracleAsmAccessRoleArn:
                      type: string
                    SecretsManagerSecurityDbEncryptionSecretId:
                      type: string
                    SecretsManagerSecurityDbEncryptionAccessRoleArn:
                      type: string
            - description: MicrosoftSqlServerSettings property identifier.
              type: object
              additionalProperties: false
              properties:
                MicrosoftSqlServerSettings:
                  type: object
                  additionalProperties: false
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Engine
      x-stackql-resource-name: data_provider
      x-stackql-primaryIdentifier:
        - DataProviderArn
      x-read-only-properties:
        - DataProviderArn
        - DataProviderCreationTime
      x-required-permissions:
        create:
          - dms:CreateDataProvider
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:AddTagsToResource
          - dms:ListTagsForResource
        read:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
        update:
          - dms:UpdateDataProvider
          - dms:ModifyDataProvider
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteDataProvider
        list:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
    RedisSettings:
      type: object
      additionalProperties: false
      properties:
        SslSecurityProtocol:
          type: string
        AuthUserName:
          type: string
        ServerName:
          type: string
        Port:
          type: number
        SslCaCertificateArn:
          type: string
        AuthPassword:
          type: string
        AuthType:
          type: string
    SybaseSettings:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerAccessRoleArn:
          type: string
        SecretsManagerSecretId:
          type: string
    IbmDb2Settings:
      type: object
      additionalProperties: false
      properties:
        LoadTimeout:
          type: integer
        SetDataCaptureChanges:
          type: boolean
        MaxFileSize:
          type: integer
        KeepCsvFiles:
          type: boolean
        CurrentLsn:
          type: string
        MaxKBytesPerRead:
          type: integer
        SecretsManagerSecretId:
          type: string
        WriteBufferSize:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
    OracleSettings:
      type: object
      additionalProperties: false
      properties:
        AsmPassword:
          type: string
        DirectPathParallelLoad:
          type: boolean
        AdditionalArchivedLogDestId:
          type: integer
        SpatialDataOptionToGeoJsonFunctionName:
          type: string
        ReplacePathPrefix:
          type: boolean
        FailTasksOnLobTruncation:
          type: boolean
        AsmServer:
          type: string
        SecretsManagerOracleAsmAccessRoleArn:
          type: string
        OraclePathPrefix:
          type: string
        ReadAheadBlocks:
          type: integer
        StandbyDelayTime:
          type: integer
        AllowSelectNestedTables:
          type: boolean
        AddSupplementalLogging:
          type: boolean
        SecretsManagerSecretId:
          type: string
        UseBFile:
          type: boolean
        EnableHomogenousTablespace:
          type: boolean
        AsmUser:
          type: string
        UseDirectPathFullLoad:
          type: boolean
        SecurityDbEncryption:
          type: string
        ParallelAsmReadThreads:
          type: integer
        ArchivedLogDestId:
          type: integer
        UsePathPrefix:
          type: string
        UseLogminerReader:
          type: boolean
        SecurityDbEncryptionName:
          type: string
        DirectPathNoLog:
          type: boolean
        SecretsManagerOracleAsmSecretId:
          type: string
        CharLengthSemantics:
          type: string
        NumberDatatypeScale:
          type: integer
        ReadTableSpaceName:
          type: boolean
        AccessAlternateDirectly:
          type: boolean
        UseAlternateFolderForOnline:
          type: boolean
        ArchivedLogsOnly:
          type: boolean
        ExtraArchivedLogDestIds:
          type: array
          uniqueItems: false
          items:
            type: integer
        RetryInterval:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
    KafkaSettings:
      type: object
      additionalProperties: false
      properties:
        Broker:
          type: string
        SaslPassword:
          type: string
        MessageFormat:
          type: string
        SslClientCertificateArn:
          type: string
        IncludeTransactionDetails:
          type: boolean
        SecurityProtocol:
          type: string
        IncludeTableAlterOperations:
          type: boolean
        SslCaCertificateArn:
          type: string
        IncludeControlDetails:
          type: boolean
        IncludePartitionValue:
          type: boolean
        NoHexPrefix:
          type: boolean
        SslClientKeyArn:
          type: string
        SslClientKeyPassword:
          type: string
        SaslUserName:
          type: string
        MessageMaxBytes:
          type: integer
        Topic:
          type: string
        PartitionIncludeSchemaTable:
          type: boolean
        IncludeNullAndEmpty:
          type: boolean
    MySqlSettings:
      type: object
      additionalProperties: false
      properties:
        ServerTimezone:
          type: string
        EventsPollInterval:
          type: integer
        ParallelLoadThreads:
          type: integer
        AfterConnectScript:
          type: string
        MaxFileSize:
          type: integer
        TargetDbType:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        CleanSourceMetadataOnMismatch:
          type: boolean
    NeptuneSettings:
      type: object
      additionalProperties: false
      properties:
        MaxRetryCount:
          type: integer
        MaxFileSize:
          type: integer
        S3BucketFolder:
          type: string
        ErrorRetryDuration:
          type: integer
        IamAuthEnabled:
          type: boolean
        S3BucketName:
          type: string
        ServiceAccessRoleArn:
          type: string
    ElasticsearchSettings:
      type: object
      additionalProperties: false
      properties:
        EndpointUri:
          type: string
        ErrorRetryDuration:
          type: integer
        FullLoadErrorPercentage:
          type: integer
        ServiceAccessRoleArn:
          type: string
    S3Settings:
      type: object
      additionalProperties: false
      properties:
        TimestampColumnName:
          type: string
        EnableStatistics:
          type: boolean
        DatePartitionSequence:
          type: string
        CsvNullValue:
          type: string
        IncludeOpForFullLoad:
          type: boolean
        CdcInsertsAndUpdates:
          type: boolean
        BucketName:
          type: string
        ServerSideEncryptionKmsKeyId:
          type: string
        UseTaskStartTimeForFullLoadTimestamp:
          type: boolean
        GlueCatalogGeneration:
          type: boolean
        DataFormat:
          type: string
        CsvDelimiter:
          type: string
        AddTrailingPaddingCharacter:
          type: boolean
        IgnoreHeaderRows:
          type: integer
        CannedAclForObjects:
          type: string
        Rfc4180:
          type: boolean
        ServiceAccessRoleArn:
          type: string
        ParquetTimestampInMillisecond:
          type: boolean
        PreserveTransactions:
          type: boolean
        BucketFolder:
          type: string
        DatePartitionDelimiter:
          type: string
        EncodingType:
          type: string
        AddColumnName:
          type: boolean
        CdcMinFileSize:
          type: integer
        ParquetVersion:
          type: string
        ExternalTableDefinition:
          type: string
        UseCsvNoSupValue:
          type: boolean
        MaxFileSize:
          type: integer
        CdcPath:
          type: string
        CsvNoSupValue:
          type: string
        CdcMaxBatchInterval:
          type: integer
        CsvRowDelimiter:
          type: string
        RowGroupLength:
          type: integer
        DataPageSize:
          type: integer
        DatePartitionEnabled:
          type: boolean
        DictPageSizeLimit:
          type: integer
        CompressionType:
          type: string
        DatePartitionTimezone:
          type: string
        CdcInsertsOnly:
          type: boolean
        ExpectedBucketOwner:
          type: string
        EncryptionMode:
          type: string
    DocDbSettings:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerSecretId:
          type: string
        DocsToInvestigate:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
        ExtractDocId:
          type: boolean
        NestingLevel:
          type: string
    DynamoDbSettings:
      type: object
      additionalProperties: false
      properties:
        ServiceAccessRoleArn:
          type: string
    KinesisSettings:
      type: object
      additionalProperties: false
      properties:
        MessageFormat:
          type: string
        IncludeTransactionDetails:
          type: boolean
        IncludeTableAlterOperations:
          type: boolean
        IncludeControlDetails:
          type: boolean
        IncludePartitionValue:
          type: boolean
        StreamArn:
          type: string
        ServiceAccessRoleArn:
          type: string
        NoHexPrefix:
          type: boolean
        PartitionIncludeSchemaTable:
          type: boolean
        IncludeNullAndEmpty:
          type: boolean
    GcpMySQLSettings:
      type: object
      additionalProperties: false
      properties:
        AfterConnectScript:
          type: string
        Port:
          type: integer
        DatabaseName:
          type: string
        CleanSourceMetadataOnMismatch:
          type: boolean
        ServerTimezone:
          type: string
        EventsPollInterval:
          type: integer
        ParallelLoadThreads:
          type: integer
        Username:
          type: string
        MaxFileSize:
          type: integer
        ServerName:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        Password:
          type: string
    MicrosoftSqlServerSettings:
      type: object
      additionalProperties: false
      properties:
        ReadBackupOnly:
          type: boolean
        TlogAccessMode:
          type: string
        BcpPacketSize:
          type: integer
        Port:
          type: integer
        SafeguardPolicy:
          type: string
        UseThirdPartyBackupDevice:
          type: boolean
        DatabaseName:
          type: string
        UseBcpFullLoad:
          type: boolean
        Username:
          type: string
        QuerySingleAlwaysOnNode:
          type: boolean
        ServerName:
          type: string
        SecretsManagerSecretId:
          type: string
        ControlTablesFileGroup:
          type: string
        ForceLobLookup:
          type: boolean
        SecretsManagerAccessRoleArn:
          type: string
        TrimSpaceInChar:
          type: boolean
        Password:
          type: string
    RedshiftSettings:
      type: object
      additionalProperties: false
      properties:
        ConnectionTimeout:
          type: integer
        MapBooleanAsBoolean:
          type: boolean
        AfterConnectScript:
          type: string
        FileTransferUploadStreams:
          type: integer
        BucketName:
          type: string
        ServerSideEncryptionKmsKeyId:
          type: string
        ExplicitIds:
          type: boolean
        SecretsManagerSecretId:
          type: string
        TruncateColumns:
          type: boolean
        ServiceAccessRoleArn:
          type: string
        ReplaceChars:
          type: string
        TimeFormat:
          type: string
        BucketFolder:
          type: string
        ReplaceInvalidChars:
          type: string
        RemoveQuotes:
          type: boolean
        LoadTimeout:
          type: integer
        MaxFileSize:
          type: integer
        TrimBlanks:
          type: boolean
        DateFormat:
          type: string
        CompUpdate:
          type: boolean
        AcceptAnyDate:
          type: boolean
        WriteBufferSize:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
        CaseSensitiveNames:
          type: boolean
        EmptyAsNull:
          type: boolean
        EncryptionMode:
          type: string
    MongoDbSettings:
      type: object
      additionalProperties: false
      properties:
        Port:
          type: integer
        ExtractDocId:
          type: string
        DatabaseName:
          type: string
        AuthSource:
          type: string
        AuthMechanism:
          type: string
        Username:
          type: string
        DocsToInvestigate:
          type: string
        ServerName:
          type: string
        SecretsManagerSecretId:
          type: string
        AuthType:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        Password:
          type: string
        NestingLevel:
          type: string
    PostgreSqlSettings:
      type: object
      additionalProperties: false
      properties:
        PluginName:
          type: string
        MapBooleanAsBoolean:
          type: boolean
        AfterConnectScript:
          type: string
        ExecuteTimeout:
          type: integer
        DdlArtifactsSchema:
          type: string
        FailTasksOnLobTruncation:
          type: boolean
        HeartbeatEnable:
          type: boolean
        BabelfishDatabaseName:
          type: string
        DatabaseMode:
          type: string
        CaptureDdls:
          type: boolean
        MaxFileSize:
          type: integer
        HeartbeatFrequency:
          type: integer
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        HeartbeatSchema:
          type: string
        SlotName:
          type: string
    Endpoint:
      type: object
      properties:
        SybaseSettings:
          $ref: '#/components/schemas/SybaseSettings'
        RedisSettings:
          $ref: '#/components/schemas/RedisSettings'
        OracleSettings:
          $ref: '#/components/schemas/OracleSettings'
        KafkaSettings:
          $ref: '#/components/schemas/KafkaSettings'
        Port:
          type: integer
        MySqlSettings:
          $ref: '#/components/schemas/MySqlSettings'
        S3Settings:
          $ref: '#/components/schemas/S3Settings'
        ResourceIdentifier:
          type: string
        KinesisSettings:
          $ref: '#/components/schemas/KinesisSettings'
        SslMode:
          type: string
        RedshiftSettings:
          $ref: '#/components/schemas/RedshiftSettings'
        EndpointType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Password:
          type: string
        MongoDbSettings:
          $ref: '#/components/schemas/MongoDbSettings'
        IbmDb2Settings:
          $ref: '#/components/schemas/IbmDb2Settings'
        KmsKeyId:
          type: string
        ExternalId:
          type: string
        DatabaseName:
          type: string
        NeptuneSettings:
          $ref: '#/components/schemas/NeptuneSettings'
        ElasticsearchSettings:
          $ref: '#/components/schemas/ElasticsearchSettings'
        EngineName:
          type: string
        DocDbSettings:
          $ref: '#/components/schemas/DocDbSettings'
        DynamoDbSettings:
          $ref: '#/components/schemas/DynamoDbSettings'
        Username:
          type: string
        MicrosoftSqlServerSettings:
          $ref: '#/components/schemas/MicrosoftSqlServerSettings'
        GcpMySQLSettings:
          $ref: '#/components/schemas/GcpMySQLSettings'
        ServerName:
          type: string
        ExtraConnectionAttributes:
          type: string
        Id:
          type: string
        EndpointIdentifier:
          type: string
        CertificateArn:
          type: string
        PostgreSqlSettings:
          $ref: '#/components/schemas/PostgreSqlSettings'
      required:
        - EndpointType
        - EngineName
      x-stackql-resource-name: endpoint
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - KmsKeyId
        - ResourceIdentifier
      x-read-only-properties:
        - Id
        - ExternalId
    EventSubscription:
      type: object
      properties:
        SourceType:
          type: string
        EventCategories:
          type: array
          uniqueItems: false
          items:
            type: string
        Enabled:
          type: boolean
        SubscriptionName:
          type: string
        SnsTopicArn:
          type: string
        SourceIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - SnsTopicArn
      x-stackql-resource-name: event_subscription
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - SubscriptionName
        - SourceIds
      x-read-only-properties:
        - Id
    InstanceProfile:
      type: object
      properties:
        InstanceProfileArn:
          description: The property describes an ARN of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileIdentifier:
          description: The property describes an identifier for the instance profile. It is used for describing/deleting/modifying. Can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        AvailabilityZone:
          description: The property describes an availability zone of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        Description:
          description: The optional description of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        KmsKeyArn:
          description: The property describes kms key arn for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        PubliclyAccessible:
          description: The property describes the publicly accessible of the instance profile
          type: boolean
          default: false
        NetworkType:
          description: The property describes a network type for the instance profile.
          type: string
          enum:
            - IPV4
            - IPV6
            - DUAL
        InstanceProfileName:
          description: The property describes a name for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileCreationTime:
          description: The property describes a creating time of the instance profile.
          type: string
          minLength: 1
          maxLength: 40
        SubnetGroupIdentifier:
          description: The property describes a subnet group identifier for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        VpcSecurityGroups:
          description: The property describes vps security groups for the instance profile.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: instance_profile
      x-stackql-primaryIdentifier:
        - InstanceProfileArn
      x-read-only-properties:
        - InstanceProfileArn
        - InstanceProfileCreationTime
      x-required-permissions:
        create:
          - dms:CreateInstanceProfile
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:AddTagsToResource
          - dms:ListTagsForResource
        read:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
        update:
          - dms:UpdateInstanceProfile
          - dms:ModifyInstanceProfile
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteInstanceProfile
        list:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
    DataProviderDescriptor:
      type: object
      description: It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
      additionalProperties: false
      properties:
        DataProviderIdentifier:
          type: string
        DataProviderName:
          type: string
        DataProviderArn:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
    MigrationProject:
      type: object
      properties:
        MigrationProjectName:
          description: The property describes a name to identify the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectIdentifier:
          description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectArn:
          description: The property describes an ARN of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectCreationTime:
          description: The property describes a creating time of the migration project.
          type: string
          minLength: 1
          maxLength: 40
        InstanceProfileIdentifier:
          description: The property describes an instance profile identifier for the migration project. For create
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileName:
          description: The property describes an instance profile name for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileArn:
          description: The property describes an instance profile arn for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        TransformationRules:
          description: The property describes transformation rules for the migration project.
          type: string
        Description:
          description: The optional description of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        SchemaConversionApplicationAttributes:
          description: The property describes schema conversion application attributes for the migration project.
          type: object
          additionalProperties: false
          properties:
            S3BucketPath:
              type: string
            S3BucketRoleArn:
              type: string
        SourceDataProviderDescriptors:
          description: The property describes source data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        TargetDataProviderDescriptors:
          description: The property describes target data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: migration_project
      x-stackql-primaryIdentifier:
        - MigrationProjectArn
      x-read-only-properties:
        - MigrationProjectArn
      x-required-permissions:
        create:
          - dms:CreateMigrationProject
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        read:
          - dms:DescribeMigrationProjects
          - dms:ListMigrationProjects
          - dms:ListTagsForResource
        update:
          - dms:UpdateMigrationProject
          - dms:ModifyMigrationProject
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        delete:
          - dms:DeleteMigrationProject
        list:
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:ListTagsForResource
    ComputeConfig:
      description: Configuration parameters for provisioning a AWS DMS Serverless replication
      type: object
      properties:
        AvailabilityZone:
          type: string
        DnsNameServers:
          type: string
        KmsKeyId:
          type: string
        MaxCapacityUnits:
          type: integer
        MinCapacityUnits:
          type: integer
        MultiAZ:
          type: boolean
        PreferredMaintenanceWindow:
          type: string
        ReplicationSubnetGroupId:
          type: string
        VpcSecurityGroupIds:
          type: array
          items:
            type: string
      required:
        - MaxCapacityUnits
      additionalProperties: false
    ReplicationConfig:
      type: object
      properties:
        ReplicationConfigIdentifier:
          description: A unique identifier of replication configuration
          type: string
        ReplicationConfigArn:
          description: The Amazon Resource Name (ARN) of the Replication Config
          type: string
        SourceEndpointArn:
          description: The Amazon Resource Name (ARN) of the source endpoint for this AWS DMS Serverless replication configuration
          type: string
        TargetEndpointArn:
          description: The Amazon Resource Name (ARN) of the target endpoint for this AWS DMS Serverless replication configuration
          type: string
        ReplicationType:
          description: The type of AWS DMS Serverless replication to provision using this replication configuration
          type: string
          enum:
            - full-load
            - full-load-and-cdc
            - cdc
        ComputeConfig:
          $ref: '#/components/schemas/ComputeConfig'
        ReplicationSettings:
          description: JSON settings for Servereless replications that are provisioned using this replication configuration
          type: object
        SupplementalSettings:
          description: JSON settings for specifying supplemental data
          type: object
        ResourceIdentifier:
          description: A unique value or name that you get set for a given resource that can be used to construct an Amazon Resource Name (ARN) for that resource
          type: string
        TableMappings:
          description: JSON table mappings for AWS DMS Serverless replications that are provisioned using this replication configuration
          type: object
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
      x-stackql-resource-name: replication_config
      x-stackql-primaryIdentifier:
        - ReplicationConfigArn
      x-create-only-properties:
        - ResourceIdentifier
      x-read-only-properties:
        - /Properties/ReplicationConfigArn
      x-required-permissions:
        create:
          - dms:CreateReplicationConfig
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        read:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        update:
          - dms:ModifyReplicationConfig
          - dms:AddTagsToResource
          - dms:RemoveTagsToResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        list:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        delete:
          - dms:DescribeReplicationConfigs
          - dms:DeleteReplicationConfig
          - dms:ListTagsForResource
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
    ReplicationInstance:
      type: object
      properties:
        ReplicationInstanceIdentifier:
          type: string
        EngineVersion:
          type: string
        KmsKeyId:
          type: string
        AvailabilityZone:
          type: string
        PreferredMaintenanceWindow:
          type: string
        AutoMinorVersionUpgrade:
          type: boolean
        ReplicationSubnetGroupIdentifier:
          type: string
        ReplicationInstancePrivateIpAddresses:
          type: string
        AllocatedStorage:
          type: integer
        ResourceIdentifier:
          type: string
        VpcSecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowMajorVersionUpgrade:
          type: boolean
        ReplicationInstanceClass:
          type: string
        PubliclyAccessible:
          type: boolean
        Id:
          type: string
        MultiAZ:
          type: boolean
        ReplicationInstancePublicIpAddresses:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicationInstanceClass
      x-stackql-resource-name: replication_instance
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - KmsKeyId
        - ResourceIdentifier
        - ReplicationSubnetGroupIdentifier
        - PubliclyAccessible
      x-read-only-properties:
        - ReplicationInstancePublicIpAddresses
        - Id
        - ReplicationInstancePrivateIpAddresses
    ReplicationSubnetGroup:
      type: object
      properties:
        ReplicationSubnetGroupDescription:
          type: string
        Id:
          type: string
        ReplicationSubnetGroupIdentifier:
          type: string
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicationSubnetGroupDescription
        - SubnetIds
      x-stackql-resource-name: replication_subnet_group
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - ReplicationSubnetGroupIdentifier
      x-read-only-properties:
        - Id
    ReplicationTask:
      type: object
      properties:
        ReplicationTaskSettings:
          type: string
        CdcStartPosition:
          type: string
        CdcStopPosition:
          type: string
        MigrationType:
          type: string
        TargetEndpointArn:
          type: string
        ReplicationInstanceArn:
          type: string
        TaskData:
          type: string
        CdcStartTime:
          type: number
        ResourceIdentifier:
          type: string
        TableMappings:
          type: string
        ReplicationTaskIdentifier:
          type: string
        SourceEndpointArn:
          type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TableMappings
        - SourceEndpointArn
        - MigrationType
        - TargetEndpointArn
        - ReplicationInstanceArn
      x-stackql-resource-name: replication_task
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - ResourceIdentifier
        - TargetEndpointArn
        - ReplicationInstanceArn
        - SourceEndpointArn
      x-read-only-properties:
        - Id
  x-stackQL-resources:
    certificates:
      name: certificates
      id: aws.dms.certificates
      x-cfn-schema-name: Certificate
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Certificate'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Certificate'
    certificate:
      name: certificate
      id: aws.dms.certificate
      x-cfn-schema-name: Certificate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CertificateIdentifier') as certificate_identifier,
              JSON_EXTRACT(Properties, '$.CertificatePem') as certificate_pem,
              JSON_EXTRACT(Properties, '$.CertificateWallet') as certificate_wallet
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Certificate'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'CertificateIdentifier') as certificate_identifier,
                json_extract_path_text(Properties, 'CertificatePem') as certificate_pem,
                json_extract_path_text(Properties, 'CertificateWallet') as certificate_wallet
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Certificate'
    data_providers:
      name: data_providers
      id: aws.dms.data_providers
      x-cfn-schema-name: DataProvider
      x-type: list
      x-identifiers:
        - DataProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_a
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProviderArn') as data_provider_a
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
    data_provider:
      name: data_provider
      id: aws.dms.data_provider
      x-cfn-schema-name: DataProvider
      x-type: get
      x-identifiers:
        - DataProviderArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProviderName') as data_provider_name,
              JSON_EXTRACT(Properties, '$.DataProviderIdentifier') as data_provider_identifier,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_arn,
              JSON_EXTRACT(Properties, '$.DataProviderCreationTime') as data_provider_creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Engine') as engine,
              JSON_EXTRACT(Properties, '$.ExactSettings') as exact_settings,
              JSON_EXTRACT(Properties, '$.Settings') as settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProviderName') as data_provider_name,
                json_extract_path_text(Properties, 'DataProviderIdentifier') as data_provider_identifier,
                json_extract_path_text(Properties, 'DataProviderArn') as data_provider_arn,
                json_extract_path_text(Properties, 'DataProviderCreationTime') as data_provider_creation_time,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Engine') as engine,
                json_extract_path_text(Properties, 'ExactSettings') as exact_settings,
                json_extract_path_text(Properties, 'Settings') as settings,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
    endpoints:
      name: endpoints
      id: aws.dms.endpoints
      x-cfn-schema-name: Endpoint
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Endpoint'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Endpoint'
    endpoint:
      name: endpoint
      id: aws.dms.endpoint
      x-cfn-schema-name: Endpoint
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SybaseSettings') as sybase_settings,
              JSON_EXTRACT(Properties, '$.RedisSettings') as redis_settings,
              JSON_EXTRACT(Properties, '$.OracleSettings') as oracle_settings,
              JSON_EXTRACT(Properties, '$.KafkaSettings') as kafka_settings,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.MySqlSettings') as my_sql_settings,
              JSON_EXTRACT(Properties, '$.S3Settings') as s3_settings,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.KinesisSettings') as kinesis_settings,
              JSON_EXTRACT(Properties, '$.SslMode') as ssl_mode,
              JSON_EXTRACT(Properties, '$.RedshiftSettings') as redshift_settings,
              JSON_EXTRACT(Properties, '$.EndpointType') as endpoint_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.MongoDbSettings') as mongo_db_settings,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings') as ibm_db2_settings,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.ExternalId') as external_id,
              JSON_EXTRACT(Properties, '$.DatabaseName') as database_name,
              JSON_EXTRACT(Properties, '$.NeptuneSettings') as neptune_settings,
              JSON_EXTRACT(Properties, '$.ElasticsearchSettings') as elasticsearch_settings,
              JSON_EXTRACT(Properties, '$.EngineName') as engine_name,
              JSON_EXTRACT(Properties, '$.DocDbSettings') as doc_db_settings,
              JSON_EXTRACT(Properties, '$.DynamoDbSettings') as dynamo_db_settings,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings') as microsoft_sql_server_settings,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings') as gcp_my_sq_lsettings,
              JSON_EXTRACT(Properties, '$.ServerName') as server_name,
              JSON_EXTRACT(Properties, '$.ExtraConnectionAttributes') as extra_connection_attributes,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.EndpointIdentifier') as endpoint_identifier,
              JSON_EXTRACT(Properties, '$.CertificateArn') as certificate_arn,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings') as postgre_sql_settings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Endpoint'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SybaseSettings') as sybase_settings,
                json_extract_path_text(Properties, 'RedisSettings') as redis_settings,
                json_extract_path_text(Properties, 'OracleSettings') as oracle_settings,
                json_extract_path_text(Properties, 'KafkaSettings') as kafka_settings,
                json_extract_path_text(Properties, 'Port') as port,
                json_extract_path_text(Properties, 'MySqlSettings') as my_sql_settings,
                json_extract_path_text(Properties, 'S3Settings') as s3_settings,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(Properties, 'KinesisSettings') as kinesis_settings,
                json_extract_path_text(Properties, 'SslMode') as ssl_mode,
                json_extract_path_text(Properties, 'RedshiftSettings') as redshift_settings,
                json_extract_path_text(Properties, 'EndpointType') as endpoint_type,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Password') as password,
                json_extract_path_text(Properties, 'MongoDbSettings') as mongo_db_settings,
                json_extract_path_text(Properties, 'IbmDb2Settings') as ibm_db2_settings,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'ExternalId') as external_id,
                json_extract_path_text(Properties, 'DatabaseName') as database_name,
                json_extract_path_text(Properties, 'NeptuneSettings') as neptune_settings,
                json_extract_path_text(Properties, 'ElasticsearchSettings') as elasticsearch_settings,
                json_extract_path_text(Properties, 'EngineName') as engine_name,
                json_extract_path_text(Properties, 'DocDbSettings') as doc_db_settings,
                json_extract_path_text(Properties, 'DynamoDbSettings') as dynamo_db_settings,
                json_extract_path_text(Properties, 'Username') as username,
                json_extract_path_text(Properties, 'MicrosoftSqlServerSettings') as microsoft_sql_server_settings,
                json_extract_path_text(Properties, 'GcpMySQLSettings') as gcp_my_sq_lsettings,
                json_extract_path_text(Properties, 'ServerName') as server_name,
                json_extract_path_text(Properties, 'ExtraConnectionAttributes') as extra_connection_attributes,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'EndpointIdentifier') as endpoint_identifier,
                json_extract_path_text(Properties, 'CertificateArn') as certificate_arn,
                json_extract_path_text(Properties, 'PostgreSqlSettings') as postgre_sql_settings
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Endpoint'
    event_subscriptions:
      name: event_subscriptions
      id: aws.dms.event_subscriptions
      x-cfn-schema-name: EventSubscription
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::EventSubscription'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::EventSubscription'
    event_subscription:
      name: event_subscription
      id: aws.dms.event_subscription
      x-cfn-schema-name: EventSubscription
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SourceType') as source_type,
              JSON_EXTRACT(Properties, '$.EventCategories') as event_categories,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.SubscriptionName') as subscription_name,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn,
              JSON_EXTRACT(Properties, '$.SourceIds') as source_ids,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::EventSubscription'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SourceType') as source_type,
                json_extract_path_text(Properties, 'EventCategories') as event_categories,
                json_extract_path_text(Properties, 'Enabled') as enabled,
                json_extract_path_text(Properties, 'SubscriptionName') as subscription_name,
                json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn,
                json_extract_path_text(Properties, 'SourceIds') as source_ids,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::EventSubscription'
    instance_profiles:
      name: instance_profiles
      id: aws.dms.instance_profiles
      x-cfn-schema-name: InstanceProfile
      x-type: list
      x-identifiers:
        - InstanceProfileArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_a
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_a
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
    instance_profile:
      name: instance_profile
      id: aws.dms.instance_profile
      x-cfn-schema-name: InstanceProfile
      x-type: get
      x-identifiers:
        - InstanceProfileArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileCreationTime') as instance_profile_creation_time,
              JSON_EXTRACT(Properties, '$.SubnetGroupIdentifier') as subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroups') as vpc_security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(Properties, 'AvailabilityZone') as availability_zone,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(Properties, 'PubliclyAccessible') as publicly_accessible,
                json_extract_path_text(Properties, 'NetworkType') as network_type,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(Properties, 'InstanceProfileCreationTime') as instance_profile_creation_time,
                json_extract_path_text(Properties, 'SubnetGroupIdentifier') as subnet_group_identifier,
                json_extract_path_text(Properties, 'VpcSecurityGroups') as vpc_security_groups,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
    migration_projects:
      name: migration_projects
      id: aws.dms.migration_projects
      x-cfn-schema-name: MigrationProject
      x-type: list
      x-identifiers:
        - MigrationProjectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_a
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_a
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
    migration_project:
      name: migration_project
      id: aws.dms.migration_project
      x-cfn-schema-name: MigrationProject
      x-type: get
      x-identifiers:
        - MigrationProjectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MigrationProjectName') as migration_project_name,
              JSON_EXTRACT(Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_arn,
              JSON_EXTRACT(Properties, '$.MigrationProjectCreationTime') as migration_project_creation_time,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.TransformationRules') as transformation_rules,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
              JSON_EXTRACT(Properties, '$.SourceDataProviderDescriptors') as source_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.TargetDataProviderDescriptors') as target_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MigrationProjectName') as migration_project_name,
                json_extract_path_text(Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_arn,
                json_extract_path_text(Properties, 'MigrationProjectCreationTime') as migration_project_creation_time,
                json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(Properties, 'TransformationRules') as transformation_rules,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                json_extract_path_text(Properties, 'SourceDataProviderDescriptors') as source_data_provider_descriptors,
                json_extract_path_text(Properties, 'TargetDataProviderDescriptors') as target_data_provider_descriptors,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
    replication_configs:
      name: replication_configs
      id: aws.dms.replication_configs
      x-cfn-schema-name: ReplicationConfig
      x-type: list
      x-identifiers:
        - ReplicationConfigArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_a
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_a
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
    replication_config:
      name: replication_config
      id: aws.dms.replication_config
      x-cfn-schema-name: ReplicationConfig
      x-type: get
      x-identifiers:
        - ReplicationConfigArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationConfigIdentifier') as replication_config_identifier,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_arn,
              JSON_EXTRACT(Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(Properties, '$.ReplicationType') as replication_type,
              JSON_EXTRACT(Properties, '$.ComputeConfig') as compute_config,
              JSON_EXTRACT(Properties, '$.ReplicationSettings') as replication_settings,
              JSON_EXTRACT(Properties, '$.SupplementalSettings') as supplemental_settings,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.TableMappings') as table_mappings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationConfigIdentifier') as replication_config_identifier,
                json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_arn,
                json_extract_path_text(Properties, 'SourceEndpointArn') as source_endpoint_arn,
                json_extract_path_text(Properties, 'TargetEndpointArn') as target_endpoint_arn,
                json_extract_path_text(Properties, 'ReplicationType') as replication_type,
                json_extract_path_text(Properties, 'ComputeConfig') as compute_config,
                json_extract_path_text(Properties, 'ReplicationSettings') as replication_settings,
                json_extract_path_text(Properties, 'SupplementalSettings') as supplemental_settings,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(Properties, 'TableMappings') as table_mappings,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
    replication_instances:
      name: replication_instances
      id: aws.dms.replication_instances
      x-cfn-schema-name: ReplicationInstance
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
    replication_instance:
      name: replication_instance
      id: aws.dms.replication_instance
      x-cfn-schema-name: ReplicationInstance
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceIdentifier') as replication_instance_identifier,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.AutoMinorVersionUpgrade') as auto_minor_version_upgrade,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.ReplicationInstancePrivateIpAddresses') as replication_instance_private_ip_addresses,
              JSON_EXTRACT(Properties, '$.AllocatedStorage') as allocated_storage,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids,
              JSON_EXTRACT(Properties, '$.AllowMajorVersionUpgrade') as allow_major_version_upgrade,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceClass') as replication_instance_class,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MultiAZ') as multi_az,
              JSON_EXTRACT(Properties, '$.ReplicationInstancePublicIpAddresses') as replication_instance_public_ip_addresses,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationInstanceIdentifier') as replication_instance_identifier,
                json_extract_path_text(Properties, 'EngineVersion') as engine_version,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'AvailabilityZone') as availability_zone,
                json_extract_path_text(Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                json_extract_path_text(Properties, 'AutoMinorVersionUpgrade') as auto_minor_version_upgrade,
                json_extract_path_text(Properties, 'ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
                json_extract_path_text(Properties, 'ReplicationInstancePrivateIpAddresses') as replication_instance_private_ip_addresses,
                json_extract_path_text(Properties, 'AllocatedStorage') as allocated_storage,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(Properties, 'VpcSecurityGroupIds') as vpc_security_group_ids,
                json_extract_path_text(Properties, 'AllowMajorVersionUpgrade') as allow_major_version_upgrade,
                json_extract_path_text(Properties, 'ReplicationInstanceClass') as replication_instance_class,
                json_extract_path_text(Properties, 'PubliclyAccessible') as publicly_accessible,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'MultiAZ') as multi_az,
                json_extract_path_text(Properties, 'ReplicationInstancePublicIpAddresses') as replication_instance_public_ip_addresses,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
    replication_subnet_groups:
      name: replication_subnet_groups
      id: aws.dms.replication_subnet_groups
      x-cfn-schema-name: ReplicationSubnetGroup
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
    replication_subnet_group:
      name: replication_subnet_group
      id: aws.dms.replication_subnet_group
      x-cfn-schema-name: ReplicationSubnetGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupDescription') as replication_subnet_group_description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationSubnetGroupDescription') as replication_subnet_group_description,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
                json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
    replication_tasks:
      name: replication_tasks
      id: aws.dms.replication_tasks
      x-cfn-schema-name: ReplicationTask
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
    replication_task:
      name: replication_task
      id: aws.dms.replication_task
      x-cfn-schema-name: ReplicationTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationTaskSettings') as replication_task_settings,
              JSON_EXTRACT(Properties, '$.CdcStartPosition') as cdc_start_position,
              JSON_EXTRACT(Properties, '$.CdcStopPosition') as cdc_stop_position,
              JSON_EXTRACT(Properties, '$.MigrationType') as migration_type,
              JSON_EXTRACT(Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceArn') as replication_instance_arn,
              JSON_EXTRACT(Properties, '$.TaskData') as task_data,
              JSON_EXTRACT(Properties, '$.CdcStartTime') as cdc_start_time,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.TableMappings') as table_mappings,
              JSON_EXTRACT(Properties, '$.ReplicationTaskIdentifier') as replication_task_identifier,
              JSON_EXTRACT(Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationTaskSettings') as replication_task_settings,
                json_extract_path_text(Properties, 'CdcStartPosition') as cdc_start_position,
                json_extract_path_text(Properties, 'CdcStopPosition') as cdc_stop_position,
                json_extract_path_text(Properties, 'MigrationType') as migration_type,
                json_extract_path_text(Properties, 'TargetEndpointArn') as target_endpoint_arn,
                json_extract_path_text(Properties, 'ReplicationInstanceArn') as replication_instance_arn,
                json_extract_path_text(Properties, 'TaskData') as task_data,
                json_extract_path_text(Properties, 'CdcStartTime') as cdc_start_time,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(Properties, 'TableMappings') as table_mappings,
                json_extract_path_text(Properties, 'ReplicationTaskIdentifier') as replication_task_identifier,
                json_extract_path_text(Properties, 'SourceEndpointArn') as source_endpoint_arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
