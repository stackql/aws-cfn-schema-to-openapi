openapi: 3.0.0
info:
  title: RAM
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Permission:
      type: object
      properties:
        Arn:
          type: string
        Name:
          description: The name of the permission.
          type: string
        Version:
          description: Version of the permission.
          type: string
        IsResourceTypeDefault:
          description: Set to true to use this as the default permission.
          type: boolean
        PermissionType:
          type: string
        ResourceType:
          description: The resource type this permission can be used with.
          type: string
        PolicyTemplate:
          description: Policy template for the permission.
          type: object
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ResourceType
        - PolicyTemplate
      x-stackql-resource-name: permission
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - Name
        - ResourceType
        - PolicyTemplate
      x-read-only-properties:
        - Arn
        - Version
        - IsResourceTypeDefault
        - PermissionType
      x-required-permissions:
        create:
          - ram:CreatePermission
          - ram:TagResource
        read:
          - ram:GetPermission
        update:
          - ram:CreatePermissionVersion
          - ram:DeletePermissionVersion
          - ram:SetDefaultPermissionVersion
          - ram:GetPermission
          - ram:ReplacePermissionAssociations
          - ram:ListReplacePermissionAssociationsWork
          - ram:ListPermissionVersions
          - ram:UntagResource
          - ram:TagResource
        delete:
          - ram:DeletePermissionVersion
          - ram:DeletePermission
        list:
          - ram:ListPermissions
          - ram:ListPermissionVersions
    ResourceShare:
      type: object
      properties:
        PermissionArns:
          type: array
          uniqueItems: false
          items:
            type: string
        Principals:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowExternalPrincipals:
          type: boolean
        Id:
          type: string
        Arn:
          type: string
        ResourceArns:
          type: array
          uniqueItems: false
          items:
            type: string
        Sources:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: resource_share
      x-stackql-primaryIdentifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
  x-stackQL-resources:
    permissions:
      name: permissions
      id: aws.ram.permissions
      x-cfn-schema-name: Permission
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RAM::Permission'
    permission:
      name: permission
      id: aws.ram.permission
      x-cfn-schema-name: Permission
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.IsResourceTypeDefault') as is_resource_type_default,
              JSON_EXTRACT(Properties, '$.PermissionType') as permission_type,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.PolicyTemplate') as policy_template,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RAM::Permission'
    resource_shares:
      name: resource_shares
      id: aws.ram.resource_shares
      x-cfn-schema-name: ResourceShare
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RAM::ResourceShare'
    resource_share:
      name: resource_share
      id: aws.ram.resource_share
      x-cfn-schema-name: ResourceShare
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PermissionArns') as permission_arns,
              JSON_EXTRACT(Properties, '$.Principals') as principals,
              JSON_EXTRACT(Properties, '$.AllowExternalPrincipals') as allow_external_principals,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ResourceArns') as resource_arns,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RAM::ResourceShare'
