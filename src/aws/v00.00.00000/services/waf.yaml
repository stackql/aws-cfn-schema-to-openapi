openapi: 3.0.0
info:
  title: WAF
  version: 1.0.0
paths: {}
components:
  schemas:
    ByteMatchTuple:
      type: object
      additionalProperties: false
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        PositionalConstraint:
          type: string
        TargetString:
          type: string
        TargetStringBase64:
          type: string
        TextTransformation:
          type: string
      required:
        - PositionalConstraint
        - TextTransformation
        - FieldToMatch
    FieldToMatch:
      type: object
      additionalProperties: false
      properties:
        Data:
          type: string
        Type:
          type: string
      required:
        - Type
    ByteMatchSet:
      type: object
      properties:
        Id:
          type: string
        ByteMatchTuples:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ByteMatchTuple'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: byte_match_set
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
    IPSetDescriptor:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Value:
          type: string
      required:
        - Value
        - Type
    IPSet:
      type: object
      properties:
        Id:
          type: string
        IPSetDescriptors:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/IPSetDescriptor'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: ip_set
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
    Predicate:
      type: object
      additionalProperties: false
      properties:
        DataId:
          type: string
        Negated:
          type: boolean
        Type:
          type: string
      required:
        - Negated
        - Type
        - DataId
    Rule:
      type: object
      properties:
        Id:
          type: string
        MetricName:
          type: string
        Name:
          type: string
        Predicates:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Predicate'
      required:
        - MetricName
        - Name
      x-stackql-resource-name: rule
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - MetricName
        - Name
      x-read-only-properties:
        - Id
    SizeConstraint:
      type: object
      additionalProperties: false
      properties:
        ComparisonOperator:
          type: string
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        Size:
          type: integer
        TextTransformation:
          type: string
      required:
        - ComparisonOperator
        - TextTransformation
        - FieldToMatch
        - Size
    SizeConstraintSet:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        SizeConstraints:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SizeConstraint'
      required:
        - SizeConstraints
        - Name
      x-stackql-resource-name: size_constraint_set
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
    SqlInjectionMatchTuple:
      type: object
      additionalProperties: false
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformation:
          type: string
      required:
        - TextTransformation
        - FieldToMatch
    SqlInjectionMatchSet:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        SqlInjectionMatchTuples:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SqlInjectionMatchTuple'
      required:
        - Name
      x-stackql-resource-name: sql_injection_match_set
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
    ActivatedRule:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/WafAction'
        Priority:
          type: integer
        RuleId:
          type: string
      required:
        - Priority
        - RuleId
    WafAction:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
      required:
        - Type
    WebACL:
      type: object
      properties:
        Id:
          type: string
        DefaultAction:
          $ref: '#/components/schemas/WafAction'
        MetricName:
          type: string
        Name:
          type: string
        Rules:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ActivatedRule'
      required:
        - DefaultAction
        - MetricName
        - Name
      x-stackql-resource-name: web_acl
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - MetricName
        - Name
      x-read-only-properties:
        - Id
    XssMatchTuple:
      type: object
      additionalProperties: false
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformation:
          type: string
      required:
        - TextTransformation
        - FieldToMatch
    XssMatchSet:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        XssMatchTuples:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/XssMatchTuple'
      required:
        - Name
        - XssMatchTuples
      x-stackql-resource-name: xss_match_set
      x-stackql-primaryIdentifier:
        - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
  x-stackQL-resources:
    byte_match_sets:
      name: byte_match_sets
      id: aws.waf.byte_match_sets
      x-cfn-schema-name: ByteMatchSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::ByteMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::ByteMatchSet'
    byte_match_set:
      name: byte_match_set
      id: aws.waf.byte_match_set
      x-cfn-schema-name: ByteMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ByteMatchTuples') as byte_match_tuples,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::ByteMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ByteMatchTuples') as byte_match_tuples,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::ByteMatchSet'
    ip_sets:
      name: ip_sets
      id: aws.waf.ip_sets
      x-cfn-schema-name: IPSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::IPSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::IPSet'
    ip_set:
      name: ip_set
      id: aws.waf.ip_set
      x-cfn-schema-name: IPSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IPSetDescriptors') as i_pset_descriptors,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::IPSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'IPSetDescriptors') as i_pset_descriptors,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::IPSet'
    rules:
      name: rules
      id: aws.waf.rules
      x-cfn-schema-name: Rule
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::Rule'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::Rule'
    rule:
      name: rule
      id: aws.waf.rule
      x-cfn-schema-name: Rule
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Predicates') as predicates
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::Rule'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'MetricName') as metric_name,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Predicates') as predicates
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::Rule'
    size_constraint_sets:
      name: size_constraint_sets
      id: aws.waf.size_constraint_sets
      x-cfn-schema-name: SizeConstraintSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::SizeConstraintSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::SizeConstraintSet'
    size_constraint_set:
      name: size_constraint_set
      id: aws.waf.size_constraint_set
      x-cfn-schema-name: SizeConstraintSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SizeConstraints') as size_constraints
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::SizeConstraintSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'SizeConstraints') as size_constraints
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::SizeConstraintSet'
    sql_injection_match_sets:
      name: sql_injection_match_sets
      id: aws.waf.sql_injection_match_sets
      x-cfn-schema-name: SqlInjectionMatchSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::SqlInjectionMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::SqlInjectionMatchSet'
    sql_injection_match_set:
      name: sql_injection_match_set
      id: aws.waf.sql_injection_match_set
      x-cfn-schema-name: SqlInjectionMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SqlInjectionMatchTuples') as sql_injection_match_tuples
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::SqlInjectionMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'SqlInjectionMatchTuples') as sql_injection_match_tuples
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::SqlInjectionMatchSet'
    web_acls:
      name: web_acls
      id: aws.waf.web_acls
      x-cfn-schema-name: WebACL
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::WebACL'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::WebACL'
    web_acl:
      name: web_acl
      id: aws.waf.web_acl
      x-cfn-schema-name: WebACL
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultAction') as default_action,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Rules') as rules
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::WebACL'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DefaultAction') as default_action,
                json_extract_path_text(Properties, 'MetricName') as metric_name,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Rules') as rules
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::WebACL'
    xss_match_sets:
      name: xss_match_sets
      id: aws.waf.xss_match_sets
      x-cfn-schema-name: XssMatchSet
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as 
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::XssMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as 
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAF::XssMatchSet'
    xss_match_set:
      name: xss_match_set
      id: aws.waf.xss_match_set
      x-cfn-schema-name: XssMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.XssMatchTuples') as xss_match_tuples
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::XssMatchSet'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'XssMatchTuples') as xss_match_tuples
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAF::XssMatchSet'
