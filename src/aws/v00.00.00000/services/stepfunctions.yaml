openapi: 3.0.0
info:
  title: StepFunctions
  version: 1.0.0
paths: {}
components:
  schemas:
    TagsEntry:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Activity:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 80
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - Name
      x-stackql-resource-name: activity
      x-stackql-primaryIdentifier:
        - Arn
    CloudWatchLogsLogGroup:
      type: object
      additionalProperties: false
      properties:
        LogGroupArn:
          type: string
          minLength: 1
          maxLength: 256
    LogDestination:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogsLogGroup:
          $ref: '#/components/schemas/CloudWatchLogsLogGroup'
    LoggingConfiguration:
      type: object
      additionalProperties: false
      properties:
        Level:
          type: string
          enum:
            - ALL
            - ERROR
            - FATAL
            - 'OFF'
        IncludeExecutionData:
          type: boolean
        Destinations:
          type: array
          minItems: 1
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LogDestination'
    TracingConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    S3Location:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          type: string
        Key:
          type: string
        Version:
          type: string
      required:
        - Bucket
        - Key
    DefinitionSubstitutions:
      type: object
      additionalProperties: false
      x-patternProperties:
        .*:
          oneOf:
            - type: string
            - type: integer
            - type: boolean
      minProperties: 1
    Definition:
      type: object
      minProperties: 1
    StateMachine:
      type: object
      properties:
        Arn:
          type: string
          minLength: 1
          maxLength: 2048
        Name:
          type: string
          minLength: 1
          maxLength: 80
        DefinitionString:
          type: string
          minLength: 1
          maxLength: 1048576
        RoleArn:
          type: string
          minLength: 1
          maxLength: 256
        StateMachineName:
          type: string
          minLength: 1
          maxLength: 80
        StateMachineType:
          type: string
          enum:
            - STANDARD
            - EXPRESS
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        TracingConfiguration:
          $ref: '#/components/schemas/TracingConfiguration'
        DefinitionS3Location:
          $ref: '#/components/schemas/S3Location'
        DefinitionSubstitutions:
          $ref: '#/components/schemas/DefinitionSubstitutions'
        Definition:
          $ref: '#/components/schemas/Definition'
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagsEntry'
      required:
        - RoleArn
      x-stackql-resource-name: state_machine
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    activities:
      name: activities
      id: aws.stepfunctions.activities
      x-cfn-schema-name: Activity
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::Activity'
    activity:
      name: activity
      id: aws.stepfunctions.activity
      x-cfn-schema-name: Activity
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::Activity'
    state_machines:
      name: state_machines
      id: aws.stepfunctions.state_machines
      x-cfn-schema-name: StateMachine
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
    state_machine:
      name: state_machine
      id: aws.stepfunctions.state_machine
      x-cfn-schema-name: StateMachine
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DefinitionString') as definition_string,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StateMachineName') as state_machine_name,
              JSON_EXTRACT(Properties, '$.StateMachineType') as state_machine_type,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration') as logging_configuration,
              JSON_EXTRACT(Properties, '$.TracingConfiguration') as tracing_configuration,
              JSON_EXTRACT(Properties, '$.DefinitionS3Location') as definition_s3_location,
              JSON_EXTRACT(Properties, '$.DefinitionSubstitutions') as definition_substitutions,
              JSON_EXTRACT(Properties, '$.Definition') as definition,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::StepFunctions::StateMachine'
