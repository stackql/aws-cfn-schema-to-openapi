openapi: 3.0.0
info:
  title: Amplify
  version: 1.0.0
paths: {}
components:
  schemas:
    AutoBranchCreationConfig:
      type: object
      additionalProperties: false
      properties:
        AutoBranchCreationPatterns:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 2048
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
        EnableAutoBranchCreation:
          type: boolean
        EnableAutoBuild:
          type: boolean
        EnablePerformanceMode:
          type: boolean
        EnablePullRequestPreview:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        Framework:
          type: string
          maxLength: 255
          pattern: (?s).*
        PullRequestEnvironmentName:
          type: string
          maxLength: 20
          pattern: (?s).*
        Stage:
          type: string
          enum:
            - EXPERIMENTAL
            - BETA
            - PULL_REQUEST
            - PRODUCTION
            - DEVELOPMENT
    BasicAuthConfig:
      type: object
      additionalProperties: false
      properties:
        EnableBasicAuth:
          type: boolean
        Username:
          type: string
          minLength: 1
          maxLength: 255
        Password:
          type: string
          minLength: 1
          maxLength: 255
      required:
        - Username
        - Password
    CustomRule:
      type: object
      additionalProperties: false
      properties:
        Condition:
          type: string
          minLength: 0
          maxLength: 2048
          pattern: (?s).*
        Status:
          type: string
          minLength: 3
          maxLength: 7
          pattern: .{3,7}
        Target:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: (?s).+
        Source:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: (?s).+
      required:
        - Target
        - Source
    EnvironmentVariable:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          maxLength: 255
          pattern: (?s).*
        Value:
          type: string
          maxLength: 5500
          pattern: (?s).*
      required:
        - Name
        - Value
    Tag:
      type: object
      additionalProperties: false
      x-insertionOrder: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          minLength: 0
          maxLength: 256
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      required:
        - Key
        - Value
    App:
      type: object
      properties:
        AccessToken:
          type: string
          minLength: 1
          maxLength: 255
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        AppName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        AutoBranchCreationConfig:
          $ref: '#/components/schemas/AutoBranchCreationConfig'
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
          pattern: (?s).+
        CustomHeaders:
          type: string
          minLength: 0
          maxLength: 25000
          pattern: (?s).*
        CustomRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomRule'
        DefaultDomain:
          type: string
          minLength: 0
          maxLength: 1000
        Description:
          type: string
          maxLength: 1000
          pattern: (?s).*
        EnableBranchAutoDeletion:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        IAMServiceRole:
          type: string
          minLength: 1
          maxLength: 1000
          pattern: (?s).*
        Name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        OauthToken:
          type: string
          maxLength: 1000
          pattern: (?s).*
        Platform:
          type: string
          enum:
            - WEB
            - WEB_DYNAMIC
            - WEB_COMPUTE
        Repository:
          type: string
          pattern: (?s).*
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: app
      x-stackql-primaryIdentifier:
        - Arn
      x-read-only-properties:
        - AppId
        - AppName
        - Arn
        - DefaultDomain
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplify:CreateApp
          - amplify:TagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - sns:CreateTopic
          - sns:Subscribe
          - iam:PassRole
        delete:
          - amplify:GetApp
          - amplify:DeleteApp
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - codecommit:PutRepositoryTriggers
          - sns:Unsubscribe
          - iam:PassRole
        list:
          - amplify:GetApp
          - amplify:ListApps
          - amplify:ListTagsForResource
          - iam:PassRole
        read:
          - amplify:GetApp
          - amplify:ListTagsForResource
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - iam:PassRole
        update:
          - amplify:GetApp
          - amplify:UpdateApp
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - sns:CreateTopic
          - sns:Subscribe
          - sns:Unsubscribe
          - iam:PassRole
    Backend:
      type: object
      additionalProperties: false
      properties:
        StackArn:
          type: string
          minLength: 20
          maxLength: 2048
    Branch:
      type: object
      properties:
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        Backend:
          $ref: '#/components/schemas/Backend'
        BranchName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
          pattern: (?s).+
        Description:
          type: string
          maxLength: 1000
          pattern: (?s).*
        EnableAutoBuild:
          type: boolean
        EnablePerformanceMode:
          type: boolean
        EnablePullRequestPreview:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        Framework:
          type: string
          maxLength: 255
          pattern: (?s).*
        PullRequestEnvironmentName:
          type: string
          maxLength: 20
          pattern: (?s).*
        Stage:
          type: string
          enum:
            - EXPERIMENTAL
            - BETA
            - PULL_REQUEST
            - PRODUCTION
            - DEVELOPMENT
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AppId
        - BranchName
      x-stackql-resource-name: branch
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - AppId
        - BranchName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - amplify:GetBranch
          - amplify:CreateBranch
          - amplify:TagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:PutObject
          - s3:PutObjectAcl
          - sns:CreateTopic
          - sns:Subscribe
          - iam:PassRole
        delete:
          - amplify:GetBranch
          - amplify:DeleteBranch
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - sns:Unsubscribe
          - iam:PassRole
        list:
          - amplify:GetBranch
          - amplify:ListBranches
          - amplify:ListTagsForResource
          - iam:PassRole
        read:
          - amplify:GetBranch
          - amplify:ListTagsForResource
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - iam:PassRole
        update:
          - amplify:GetBranch
          - amplify:UpdateBranch
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:PutObject
          - s3:PutObjectAcl
          - sns:CreateTopic
          - sns:Subscribe
          - sns:Unsubscribe
          - iam:PassRole
    SubDomainSetting:
      type: object
      additionalProperties: false
      properties:
        Prefix:
          type: string
          maxLength: 255
          pattern: (?s).*
        BranchName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
      required:
        - Prefix
        - BranchName
    Domain:
      type: object
      properties:
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        AutoSubDomainCreationPatterns:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 2048
            pattern: (?s).+
        AutoSubDomainIAMRole:
          type: string
          pattern: ^$|^arn:.+:iam::\d{12}:role.+
          maxLength: 1000
        CertificateRecord:
          type: string
          maxLength: 1000
        DomainName:
          type: string
          pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\.)?$
          maxLength: 255
        DomainStatus:
          type: string
        EnableAutoSubDomain:
          type: boolean
        StatusReason:
          type: string
          maxLength: 1000
        SubDomainSettings:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SubDomainSetting'
          maxItems: 255
      required:
        - AppId
        - DomainName
        - SubDomainSettings
      x-stackql-resource-name: domain
      x-stackql-primaryIdentifier:
        - Arn
      x-create-only-properties:
        - AppId
        - DomainName
      x-read-only-properties:
        - Arn
        - DomainStatus
        - StatusReason
        - CertificateRecord
      x-required-permissions:
        create:
          - amplify:CreateDomainAssociation
          - route53:ListHostedZones
          - route53:ChangeResourceRecordSets
          - iam:PassRole
          - amplify:TagResource
        delete:
          - amplify:DeleteDomainAssociation
          - iam:PassRole
          - amplify:DeleteDomainAssociation
        list:
          - amplify:ListDomainAssociations
          - iam:PassRole
          - amplify:ListTagsForResource
        read:
          - amplify:GetDomainAssociation
          - route53:ListHostedZones
          - iam:PassRole
          - amplify:ListTagsForResource
        update:
          - amplify:UpdateDomainAssociation
          - route53:ListHostedZones
          - route53:ChangeResourceRecordSets
          - iam:PassRole
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
  x-stackQL-resources:
    apps:
      name: apps
      id: aws.amplify.apps
      x-cfn-schema-name: App
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::App'
    app:
      name: app
      id: aws.amplify.app
      x-cfn-schema-name: App
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccessToken') as access_token,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AutoBranchCreationConfig') as auto_branch_creation_config,
              JSON_EXTRACT(Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(Properties, '$.CustomHeaders') as custom_headers,
              JSON_EXTRACT(Properties, '$.CustomRules') as custom_rules,
              JSON_EXTRACT(Properties, '$.DefaultDomain') as default_domain,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EnableBranchAutoDeletion') as enable_branch_auto_deletion,
              JSON_EXTRACT(Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(Properties, '$.IAMServiceRole') as i_am_service_role,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.OauthToken') as oauth_token,
              JSON_EXTRACT(Properties, '$.Platform') as platform,
              JSON_EXTRACT(Properties, '$.Repository') as repository,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::App'
    branches:
      name: branches
      id: aws.amplify.branches
      x-cfn-schema-name: Branch
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Branch'
    branch:
      name: branch
      id: aws.amplify.branch
      x-cfn-schema-name: Branch
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(Properties, '$.Backend') as backend,
              JSON_EXTRACT(Properties, '$.BranchName') as branch_name,
              JSON_EXTRACT(Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EnableAutoBuild') as enable_auto_build,
              JSON_EXTRACT(Properties, '$.EnablePerformanceMode') as enable_performance_mode,
              JSON_EXTRACT(Properties, '$.EnablePullRequestPreview') as enable_pull_request_preview,
              JSON_EXTRACT(Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(Properties, '$.Framework') as framework,
              JSON_EXTRACT(Properties, '$.PullRequestEnvironmentName') as pull_request_environment_name,
              JSON_EXTRACT(Properties, '$.Stage') as stage,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Branch'
    domains:
      name: domains
      id: aws.amplify.domains
      x-cfn-schema-name: Domain
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Domain'
    domain:
      name: domain
      id: aws.amplify.domain
      x-cfn-schema-name: Domain
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AutoSubDomainCreationPatterns') as auto_sub_domain_creation_patterns,
              JSON_EXTRACT(Properties, '$.AutoSubDomainIAMRole') as auto_sub_domain_ia_mrole,
              JSON_EXTRACT(Properties, '$.CertificateRecord') as certificate_record,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainStatus') as domain_status,
              JSON_EXTRACT(Properties, '$.EnableAutoSubDomain') as enable_auto_sub_domain,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.SubDomainSettings') as sub_domain_settings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Domain'
